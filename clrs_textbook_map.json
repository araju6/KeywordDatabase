{
    "Contents": {
        "details": {
            "level": 1,
            "start_page": 6,
            "end_page": 14,
            "text_content_snippet": "Contents\nPreface\nxiii\nI\nFoundations\nIntroduction\n3\n1\nThe Role of Algorithms in Computing\n5\n1.1\nAlgorithms\n5\n1.2\nAlgorithms as a technology\n11\n2\nGetting Started\n16\n2.1\nInsertion sort\n16\n2.2\nAnalyzing algorithms\n23\n2.3\nDesigning algorithms\n29\n3\nGrowth of Functions\n43\n3.1\nAsymptotic notation\n43\n3.2\nStandard notations and common functions\n53\n4\nDivide-and-Conquer\n65\n4.1\nThe maximum-subarray problem\n68\n4.2\nStrassen\u2019s algorithm for matrix multiplication\n75\n4.3\nThe substitution method for solving recurr..."
        },
        "sources": []
    },
    "Preface": {
        "details": {
            "level": 1,
            "start_page": 14,
            "end_page": 23,
            "text_content_snippet": "Preface\nBefore there were computers, there were algorithms. But now that there are com-\nputers, there are even more algorithms, and algorithms lie at the heart of computing.\nThis book provides a comprehensive introduction to the modern study of com-\nputer algorithms. It presents many algorithms and covers them in considerable\ndepth, yet makes their design and analysis accessible to all levels of readers. We\nhave tried to keep explanations elementary without sacri\ufb01cing depth of coverage\nor mathem..."
        },
        "sources": []
    },
    "I Foundations": {
        "details": {
            "level": 1,
            "start_page": 23,
            "end_page": 167,
            "text_content_snippet": "I\nFoundations\n\nIntroduction\nThis part will start you thinking about designing and analyzing algorithms. It is\nintended to be a gentle introduction to how we specify algorithms, some of the\ndesign strategies we will use throughout this book, and many of the fundamental\nideas used in algorithm analysis. Later parts of this book will build upon this base.\nChapter 1 provides an overview of algorithms and their place in modern com-\nputing systems. This chapter de\ufb01nes what an algorithm is and lists so..."
        },
        "sources": [
            {
                "source_text": "Sara Baase and Alan Van Gelder. Computer Algorithms: Introduction to Design and Anal-\nysis. Addison-Wesley, third edition, 2000.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "Further dis-\ncussion of the history and development of asymptotic notations appears in works\nby Knuth [209, 213] and Brassard and Bratley [54]."
            },
            {
                "source_text": "Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. McGraw-Hill,\n2008.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Algorithm Design: Foundations, Analysis, and\nInternet Examples. John Wiley & Sons, 2001.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Micha Hofri. Analysis of Algorithms. Oxford University Press, 1995.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran. Computer Algorithms. Com-\nputer Science Press, 1998.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Richard Johnsonbaugh and Marcus Schaefer. Algorithms. Pearson Prentice Hall, 2004.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Jeffrey H. Kingston.\nAlgorithms and Data Structures: Design, Correctness, Analysis.\nAddison-Wesley, second edition, 1997.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Jon Kleinberg and \u00b4Eva Tardos. Algorithm Design. Addison-Wesley, 2006.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Dexter C. Kozen. The Design and Analysis of Algorithms. Springer, 1992.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Anany Levitin. Introduction to the Design & Analysis of Algorithms. Addison-Wesley,\n2007.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Udi Manber. Introduction to Algorithms: A Creative Approach. Addison-Wesley, 1989.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Paul W. Purdom, Jr. and Cynthia A. Brown. The Analysis of Algorithms. Holt, Rinehart,\nand Winston, 1985.",
                "context_sentence": "Purdom and Brown [287] and Graham,\nKnuth, and Patashnik [152] contain extended discussions of recurrence solving."
            },
            {
                "source_text": "Paul W. Purdom, Jr. and Cynthia A. Brown. The Analysis of Algorithms. Holt, Rinehart,\nand Winston, 1985.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Edward M. Reingold, J\u00a8urg Nievergelt, and Narsingh Deo. Combinatorial Algorithms: The-\nory and Practice. Prentice Hall, 1977.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Robert Sedgewick. Algorithms. Addison-Wesley, second edition, 1988.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Robert Sedgewick and Philippe Flajolet. An Introduction to the Analysis of Algorithms.\nAddison-Wesley, 1996.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Steven S. Skiena. The Algorithm Design Manual. Springer, second edition, 1998.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Herbert S. Wilf. Algorithms and Complexity. A K Peters, second edition, 2002.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Some of the more\npractical aspects of algorithm design are discussed by Bentley [42, 43] and Gonnet\n[145]."
            },
            {
                "source_text": "Jan van Leeuwen, editor. Handbook of Theoretical Computer Science, Volume A: Algo-\nrithms and Complexity. Elsevier Science Publishers and the MIT Press, 1990.",
                "context_sentence": "Surveys of the \ufb01eld of algorithms can also be found in the Handbook of The-\noretical Computer Science, Volume A [342] and the CRC Algorithms and Theory of\nComputation Handbook [25]."
            },
            {
                "source_text": "Mikhail J. Atallah, editor. Algorithms and Theory of Computation Handbook. CRC Press,\n1999.",
                "context_sentence": "Surveys of the \ufb01eld of algorithms can also be found in the Handbook of The-\noretical Computer Science, Volume A [342] and the CRC Algorithms and Theory of\nComputation Handbook [25]."
            },
            {
                "source_text": "Dan Gus\ufb01eld. Algorithms on Strings, Trees, and Sequences: Computer Science and Com-\nputational Biology. Cambridge University Press, 1997.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Pavel A. Pevzner. Computational Molecular Biology: An Algorithmic Approach. The MIT\nPress, 2000.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Jo\u02dcao Setubal and Jo\u02dcao Meidanis. Introduction to Computational Molecular Biology. PWS\nPublishing Company, 1997.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Michael S. Waterman.\nIntroduction to Computational Biology, Maps, Sequences and\nGenomes. Chapman & Hall, 1995.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft, and Ullman [5] advocated the asymptotic analysis of algo-\nrithms\u2014using notations that Chapter 3 introduces, including \u201a-notation\u2014as a\nmeans of comparing relative performance."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] provides an encyclopedic treatment of many sorting algorithms."
            },
            {
                "source_text": "David Gries. The Science of Programming. Springer, 1981.",
                "context_sentence": "The early history of proving programs correct is described by Gries [153], who\ncredits P."
            },
            {
                "source_text": "John C. Mitchell. Foundations for Programming Languages. The MIT Press, 1996.",
                "context_sentence": "The textbook by Mitchell [256] describes more recent progress in\nproving programs correct."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "n= lg n\n2\n\n64\nChapter 3\nGrowth of Functions\nChapter notes\nKnuth [209] traces the origin of the O-notation to a number-theory text by P."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Graham, Knuth, and Patash-\nnik [152] contain a wealth of material on discrete mathematics as used in computer\nscience."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Liu [237] show how to solve linear recurrences\nusing the method of generating functions."
            },
            {
                "source_text": "Donald E. Knuth. Big omicron and big omega and big theta. SIGACT News, 8(2):18\u201323,\n1976.",
                "context_sentence": "The \u0004 and \u201a notations were advocated by\nKnuth [213] to correct the popular, but technically sloppy, practice in the literature\nof using O-notation for both upper and lower bounds."
            },
            {
                "source_text": "Herbert Robbins.\nA remark on Stirling\u2019s formula.\nAmerican Mathematical Monthly,\n62(1):26\u201329, 1955.",
                "context_sentence": "Equation (3.20) is due to Robbins [297]."
            },
            {
                "source_text": "Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "Daniel Zwillinger, editor. CRC Standard Mathematical Tables and Formulae. Chapman &\nHall/CRC Press, 31st edition, 2003.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "Tom M. Apostol. Calculus, volume 1. Blaisdell Publishing Company, second edition, 1967.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "George B. Thomas, Jr., Maurice D. Weir, Joel Hass, and Frank R. Giordano.\nThomas\u2019\nCalculus. Addison-Wesley, eleventh edition, 2005.",
                "context_sentence": "[334]."
            },
            {
                "source_text": "Ronald L. Graham, Donald E. Knuth, and Oren Patashnik.\nConcrete Mathematics.\nAddison-Wesley, second edition, 1994.",
                "context_sentence": "Purdom and Brown [287] and Graham,\nKnuth, and Patashnik [152] contain extended discussions of recurrence solving."
            },
            {
                "source_text": "Ronald L. Graham, Donald E. Knuth, and Oren Patashnik.\nConcrete Mathematics.\nAddison-Wesley, second edition, 1994.",
                "context_sentence": "Knuth [209] and Graham, Knuth, and Patash-\nnik [152] contain a wealth of material on discrete mathematics as used in computer\nscience."
            },
            {
                "source_text": "A. Karatsuba and Yu. Ofman. Multiplication of multidigit numbers on automata. Soviet\nPhysics\u2014Doklady, 7(7):595\u2013596, 1963. Translation of an article in Doklady Akademii Nauk\nSSSR, 145(2), 1962.",
                "context_sentence": "Chapter notes\nDivide-and-conquer as a technique for designing algorithms dates back to at least\n1962 in an article by Karatsuba and Ofman [194]."
            },
            {
                "source_text": "Michael T. Heideman, Don H. Johnson, and C. Sidney Burrus. Gauss and the history of the\nFast Fourier Transform. IEEE ASSP Magazine, 1(4):14\u201321, 1984.",
                "context_sentence": "It might have been used well be-\nfore then, however; according to Heideman, Johnson, and Burrus [163], C."
            },
            {
                "source_text": "Volker Strassen. Gaussian elimination is not optimal. Numerische Mathematik, 14(3):354\u2013\n356, 1969.",
                "context_sentence": "Strassen\u2019s algorithm [325] caused much excitement when it was published\nin 1969."
            },
            {
                "source_text": "Don Coppersmith and Shmuel Winograd. Matrix multiplication via arithmetic progression.\nJournal of Symbolic Computation, 9(3):251\u2013280, 1990.",
                "context_sentence": "The most\nasymptotically ef\ufb01cient algorithm for multiplying n \t n matrices to date, due to\nCoppersmith and Winograd [78], has a running time of O.n2:376/."
            },
            {
                "source_text": "Nicholas J. Higham. Exploiting fast matrix multiplication within the level 3 BLAS. ACM\nTransactions on Mathematical Software, 16(4):352\u2013368, 1990.",
                "context_sentence": "Higham [167] demonstrated\nthat the difference in numerical stability had been overemphasized; although\nStrassen\u2019s algorithm is too numerically unstable for some applications, it is within\nacceptable limits for others."
            },
            {
                "source_text": "Nicholas J. Higham. Exploiting fast matrix multiplication within the level 3 BLAS. ACM\nTransactions on Mathematical Software, 16(4):352\u2013368, 1990.",
                "context_sentence": "Analyses\nthat count operations but ignore effects from caches and pipelining have produced\ncrossover points as low as n D 8 (by Higham [167]) or n D 12 (by Huss-Lederman\net al."
            },
            {
                "source_text": "David H. Bailey, King Lee, and Horst D. Simon. Using Strassen\u2019s algorithm to accelerate\nthe solution of linear systems. The Journal of Supercomputing, 4(4):357\u2013371, 1990.\n\nBibliography\n1233",
                "context_sentence": "Bailey, Lee, and Simon [32] discuss techniques for\nreducing the memory requirements for Strassen\u2019s algorithm."
            },
            {
                "source_text": "Steven Huss-Lederman, Elaine M. Jacobson, Jeremy R. Johnson, Anna Tsao, and Thomas\nTurnbull. Implementation of Strassen\u2019s algorithm for matrix multiplication. In Proceedings\nof the 1996 ACM/IEEE Conference on Supercomputing, article 32, 1996.",
                "context_sentence": "[186])."
            },
            {
                "source_text": "Paolo D\u2019Alberto and Alexandru Nicolau. Adaptive Strassen\u2019s matrix multiplication. In\nProceedings of the 21st Annual International Conference on Supercomputing, pages 284\u2013\n292, June 2007.",
                "context_sentence": "D\u2019Alberto and Nicolau [81] developed an adaptive scheme, which\ndetermines the crossover point by benchmarking when their software package is\ninstalled."
            },
            {
                "source_text": "Jon L. Bentley, Dorothea Haken, and James B. Saxe. A general method for solving divide-\nand-conquer recurrences. SIGACT News, 12(3):36\u201344, 1980.",
                "context_sentence": "The master method is adapted\nfrom Bentley, Haken, and Saxe [44], which provides the extended method justi\ufb01ed\nby Exercise 4.6-2."
            },
            {
                "source_text": "C. L. Liu. Introduction to Combinatorial Mathematics. McGraw-Hill, 1968.",
                "context_sentence": "Knuth [209] and Liu [237] show how to solve linear recurrences\nusing the method of generating functions."
            },
            {
                "source_text": "Mohamad Akra and Louay Bazzi. On the solution of linear recurrence equations. Compu-\ntational Optimization and Applications, 10(2):195\u2013210, 1998.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Salvador Roura.\nAn improved master theorem for divide-and-conquer recurrences.\nIn\nProceedings of Automata, Languages and Programming, 24th International Colloquium,\nICALP\u201997, volume 1256 of Lecture Notes in Computer Science, pages 449\u2013459. Springer,\n1997.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Rakesh M. Verma. General techniques for analyzing recursive algorithms with applications.\nSIAM Journal on Computing, 26(2):568\u2013581, 1997.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Chee Yap. A real elementary approach to the master recurrence and generalizations. Un-\npublished manuscript. Available at http://cs.nyu.edu/yap/papers/, July 2008.\n\n1250\nBibliography",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Tom Leighton. Notes on better master theorems for divide-and-conquer recurrences. Class\nnotes. Available at http://citeseer.ist.psu.edu/252350.html, October 1996.",
                "context_sentence": "We describe the result of Akra\nand Bazzi here, as modi\ufb01ed by Leighton [228]."
            },
            {
                "source_text": "B\u00b4ela Bollob\u00b4as. Random Graphs. Academic Press, 1985.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Micha Hofri. Probabilistic Analysis of Algorithms. Springer, 1987.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Joel Spencer. Ten Lectures on the Probabilistic Method, volume 64 of CBMS-NSF Regional\nConference Series in Applied Mathematics. Society for Industrial and Applied Mathematics,\n1993.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Richard M. Karp. An introduction to randomized algorithms. Discrete Applied Mathemat-\nics, 34(1\u20133):165\u2013201, 1991.",
                "context_sentence": "The advantages of randomized algorithms are discussed and\nsurveyed by Karp [200] and Rabin [288]."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithms. In J. F. Traub, editor, Algorithms and Com-\nplexity: New Directions and Recent Results, pages 21\u201339. Academic Press, 1976.",
                "context_sentence": "The advantages of randomized algorithms are discussed and\nsurveyed by Karp [200] and Rabin [288]."
            },
            {
                "source_text": "Rajeev Motwani and Prabhakar Raghavan. Randomized Algorithms. Cambridge University\nPress, 1995.",
                "context_sentence": "The textbook by Motwani and Raghavan\n[262] gives an extensive treatment of randomized algorithms."
            },
            {
                "source_text": "Mikl\u00b4os Ajtai, Nimrod Megiddo, and Orli Waarts. Improved algorithms and analysis for\nsecretary problems and generalizations. In Proceedings of the 36th Annual Symposium on\nFoundations of Computer Science, pages 473\u2013482, 1995.",
                "context_sentence": "These problems\nare more commonly referred to as \u201csecretary problems.\u201d An example of work in\nthis area is the paper by Ajtai, Meggido, and Waarts [11]."
            }
        ]
    },
    "1 The Role of Algorithms in Computing": {
        "details": {
            "level": 2,
            "start_page": 26,
            "end_page": 37,
            "text_content_snippet": "1\nThe Role of Algorithms in Computing\nWhat are algorithms? Why is the study of algorithms worthwhile? What is the role\nof algorithms relative to other technologies used in computers? In this chapter, we\nwill answer these questions.\n1.1\nAlgorithms\nInformally, an algorithm is any well-de\ufb01ned computational procedure that takes\nsome value, or set of values, as input and produces some value, or set of values, as\noutput. An algorithm is thus a sequence of computational steps that transform the\ninput i..."
        },
        "sources": [
            {
                "source_text": "Sara Baase and Alan Van Gelder. Computer Algorithms: Introduction to Design and Anal-\nysis. Addison-Wesley, third edition, 2000.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. McGraw-Hill,\n2008.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Algorithm Design: Foundations, Analysis, and\nInternet Examples. John Wiley & Sons, 2001.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Micha Hofri. Analysis of Algorithms. Oxford University Press, 1995.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran. Computer Algorithms. Com-\nputer Science Press, 1998.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Richard Johnsonbaugh and Marcus Schaefer. Algorithms. Pearson Prentice Hall, 2004.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Jeffrey H. Kingston.\nAlgorithms and Data Structures: Design, Correctness, Analysis.\nAddison-Wesley, second edition, 1997.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Jon Kleinberg and \u00b4Eva Tardos. Algorithm Design. Addison-Wesley, 2006.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Dexter C. Kozen. The Design and Analysis of Algorithms. Springer, 1992.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Anany Levitin. Introduction to the Design & Analysis of Algorithms. Addison-Wesley,\n2007.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Udi Manber. Introduction to Algorithms: A Creative Approach. Addison-Wesley, 1989.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Paul W. Purdom, Jr. and Cynthia A. Brown. The Analysis of Algorithms. Holt, Rinehart,\nand Winston, 1985.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Edward M. Reingold, J\u00a8urg Nievergelt, and Narsingh Deo. Combinatorial Algorithms: The-\nory and Practice. Prentice Hall, 1977.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Robert Sedgewick. Algorithms. Addison-Wesley, second edition, 1988.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Robert Sedgewick and Philippe Flajolet. An Introduction to the Analysis of Algorithms.\nAddison-Wesley, 1996.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Steven S. Skiena. The Algorithm Design Manual. Springer, second edition, 1998.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "Herbert S. Wilf. Algorithms and Complexity. A K Peters, second edition, 2002.",
                "context_sentence": "Notes for Chapter 1\n15\n1\n1\n1\n1\n1\n1\n1\nsecond\nminute\nhour\nday\nmonth\nyear\ncentury\nlg n\npn\nn\nn lg n\nn2\nn3\n2n\nn\u0160\nChapter notes\nThere are many excellent texts on the general topic of algorithms, including those\nby Aho, Hopcroft, and Ullman [5, 6]; Baase and Van Gelder [28]; Brassard and\nBratley [54]; Dasgupta, Papadimitriou, and Vazirani [82]; Goodrich and Tamassia\n[148]; Hofri [175]; Horowitz, Sahni, and Rajasekaran [181]; Johnsonbaugh and\nSchaefer [193]; Kingston [205]; Kleinberg and Tardos [208]; Knuth [209, 210,\n211]; Kozen [220]; Levitin [235]; Manber [242]; Mehlhorn [249, 250, 251]; Pur-\ndom and Brown [287]; Reingold, Nievergelt, and Deo [293]; Sedgewick [306];\nSedgewick and Flajolet [307]; Skiena [318]; and Wilf [356]."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Some of the more\npractical aspects of algorithm design are discussed by Bentley [42, 43] and Gonnet\n[145]."
            },
            {
                "source_text": "Jan van Leeuwen, editor. Handbook of Theoretical Computer Science, Volume A: Algo-\nrithms and Complexity. Elsevier Science Publishers and the MIT Press, 1990.",
                "context_sentence": "Surveys of the \ufb01eld of algorithms can also be found in the Handbook of The-\noretical Computer Science, Volume A [342] and the CRC Algorithms and Theory of\nComputation Handbook [25]."
            },
            {
                "source_text": "Mikhail J. Atallah, editor. Algorithms and Theory of Computation Handbook. CRC Press,\n1999.",
                "context_sentence": "Surveys of the \ufb01eld of algorithms can also be found in the Handbook of The-\noretical Computer Science, Volume A [342] and the CRC Algorithms and Theory of\nComputation Handbook [25]."
            },
            {
                "source_text": "Dan Gus\ufb01eld. Algorithms on Strings, Trees, and Sequences: Computer Science and Com-\nputational Biology. Cambridge University Press, 1997.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Pavel A. Pevzner. Computational Molecular Biology: An Algorithmic Approach. The MIT\nPress, 2000.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Jo\u02dcao Setubal and Jo\u02dcao Meidanis. Introduction to Computational Molecular Biology. PWS\nPublishing Company, 1997.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            },
            {
                "source_text": "Michael S. Waterman.\nIntroduction to Computational Biology, Maps, Sequences and\nGenomes. Chapman & Hall, 1995.",
                "context_sentence": "Overviews of the algorithms used in computational\nbiology can be found in textbooks by Gus\ufb01eld [156], Pevzner [275], Setubal and\nMeidanis [310], and Waterman [350]."
            }
        ]
    },
    "2 Getting Started": {
        "details": {
            "level": 2,
            "start_page": 37,
            "end_page": 64,
            "text_content_snippet": "2\nGetting Started\nThis chapter will familiarize you with the framework we shall use throughout the\nbook to think about the design and analysis of algorithms. It is self-contained, but\nit does include several references to material that we introduce in Chapters 3 and 4.\n(It also contains several summations, which Appendix A shows how to solve.)\nWe begin by examining the insertion sort algorithm to solve the sorting problem\nintroduced in Chapter 1. We de\ufb01ne a \u201cpseudocode\u201d that should be familiar t..."
        },
        "sources": [
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft, and Ullman [5] advocated the asymptotic analysis of algo-\nrithms\u2014using notations that Chapter 3 introduces, including \u201a-notation\u2014as a\nmeans of comparing relative performance."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] provides an encyclopedic treatment of many sorting algorithms."
            },
            {
                "source_text": "David Gries. The Science of Programming. Springer, 1981.",
                "context_sentence": "The early history of proving programs correct is described by Gries [153], who\ncredits P."
            },
            {
                "source_text": "John C. Mitchell. Foundations for Programming Languages. The MIT Press, 1996.",
                "context_sentence": "The textbook by Mitchell [256] describes more recent progress in\nproving programs correct."
            }
        ]
    },
    "3 Growth of Functions": {
        "details": {
            "level": 2,
            "start_page": 64,
            "end_page": 86,
            "text_content_snippet": "3\nGrowth of Functions\nThe order of growth of the running time of an algorithm, de\ufb01ned in Chapter 2,\ngives a simple characterization of the algorithm\u2019s ef\ufb01ciency and also allows us to\ncompare the relative performance of alternative algorithms. Once the input size n\nbecomes large enough, merge sort, with its \u201a.n lg n/ worst-case running time,\nbeats insertion sort, whose worst-case running time is \u201a.n2/. Although we can\nsometimes determine the exact running time of an algorithm, as we did for inser..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "n= lg n\n2\n\n64\nChapter 3\nGrowth of Functions\nChapter notes\nKnuth [209] traces the origin of the O-notation to a number-theory text by P."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Graham, Knuth, and Patash-\nnik [152] contain a wealth of material on discrete mathematics as used in computer\nscience."
            },
            {
                "source_text": "Donald E. Knuth. Big omicron and big omega and big theta. SIGACT News, 8(2):18\u201323,\n1976.",
                "context_sentence": "The \u0004 and \u201a notations were advocated by\nKnuth [213] to correct the popular, but technically sloppy, practice in the literature\nof using O-notation for both upper and lower bounds."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "Further dis-\ncussion of the history and development of asymptotic notations appears in works\nby Knuth [209, 213] and Brassard and Bratley [54]."
            },
            {
                "source_text": "Herbert Robbins.\nA remark on Stirling\u2019s formula.\nAmerican Mathematical Monthly,\n62(1):26\u201329, 1955.",
                "context_sentence": "Equation (3.20) is due to Robbins [297]."
            },
            {
                "source_text": "Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "Daniel Zwillinger, editor. CRC Standard Mathematical Tables and Formulae. Chapman &\nHall/CRC Press, 31st edition, 2003.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "Tom M. Apostol. Calculus, volume 1. Blaisdell Publishing Company, second edition, 1967.",
                "context_sentence": "Other properties of elementary math-\nematical functions can be found in any good mathematical reference, such as\nAbramowitz and Stegun [1] or Zwillinger [362], or in a calculus book, such as\nApostol [18] or Thomas et al."
            },
            {
                "source_text": "George B. Thomas, Jr., Maurice D. Weir, Joel Hass, and Frank R. Giordano.\nThomas\u2019\nCalculus. Addison-Wesley, eleventh edition, 2005.",
                "context_sentence": "[334]."
            },
            {
                "source_text": "Ronald L. Graham, Donald E. Knuth, and Oren Patashnik.\nConcrete Mathematics.\nAddison-Wesley, second edition, 1994.",
                "context_sentence": "Knuth [209] and Graham, Knuth, and Patash-\nnik [152] contain a wealth of material on discrete mathematics as used in computer\nscience."
            }
        ]
    },
    "4 Divide-and-Conquer": {
        "details": {
            "level": 2,
            "start_page": 86,
            "end_page": 135,
            "text_content_snippet": "4\nDivide-and-Conquer\nIn Section 2.3.1, we saw how merge sort serves as an example of the divide-and-\nconquer paradigm. Recall that in divide-and-conquer, we solve a problem recur-\nsively, applying three steps at each level of the recursion:\nDivide the problem into a number of subproblems that are smaller instances of the\nsame problem.\nConquer the subproblems by solving them recursively. If the subproblem sizes are\nsmall enough, however, just solve the subproblems in a straightforward manner.\nCom..."
        },
        "sources": [
            {
                "source_text": "A. Karatsuba and Yu. Ofman. Multiplication of multidigit numbers on automata. Soviet\nPhysics\u2014Doklady, 7(7):595\u2013596, 1963. Translation of an article in Doklady Akademii Nauk\nSSSR, 145(2), 1962.",
                "context_sentence": "Chapter notes\nDivide-and-conquer as a technique for designing algorithms dates back to at least\n1962 in an article by Karatsuba and Ofman [194]."
            },
            {
                "source_text": "Michael T. Heideman, Don H. Johnson, and C. Sidney Burrus. Gauss and the history of the\nFast Fourier Transform. IEEE ASSP Magazine, 1(4):14\u201321, 1984.",
                "context_sentence": "It might have been used well be-\nfore then, however; according to Heideman, Johnson, and Burrus [163], C."
            },
            {
                "source_text": "Volker Strassen. Gaussian elimination is not optimal. Numerische Mathematik, 14(3):354\u2013\n356, 1969.",
                "context_sentence": "Strassen\u2019s algorithm [325] caused much excitement when it was published\nin 1969."
            },
            {
                "source_text": "Don Coppersmith and Shmuel Winograd. Matrix multiplication via arithmetic progression.\nJournal of Symbolic Computation, 9(3):251\u2013280, 1990.",
                "context_sentence": "The most\nasymptotically ef\ufb01cient algorithm for multiplying n \t n matrices to date, due to\nCoppersmith and Winograd [78], has a running time of O.n2:376/."
            },
            {
                "source_text": "Nicholas J. Higham. Exploiting fast matrix multiplication within the level 3 BLAS. ACM\nTransactions on Mathematical Software, 16(4):352\u2013368, 1990.",
                "context_sentence": "Higham [167] demonstrated\nthat the difference in numerical stability had been overemphasized; although\nStrassen\u2019s algorithm is too numerically unstable for some applications, it is within\nacceptable limits for others."
            },
            {
                "source_text": "Nicholas J. Higham. Exploiting fast matrix multiplication within the level 3 BLAS. ACM\nTransactions on Mathematical Software, 16(4):352\u2013368, 1990.",
                "context_sentence": "Analyses\nthat count operations but ignore effects from caches and pipelining have produced\ncrossover points as low as n D 8 (by Higham [167]) or n D 12 (by Huss-Lederman\net al."
            },
            {
                "source_text": "David H. Bailey, King Lee, and Horst D. Simon. Using Strassen\u2019s algorithm to accelerate\nthe solution of linear systems. The Journal of Supercomputing, 4(4):357\u2013371, 1990.\n\nBibliography\n1233",
                "context_sentence": "Bailey, Lee, and Simon [32] discuss techniques for\nreducing the memory requirements for Strassen\u2019s algorithm."
            },
            {
                "source_text": "Steven Huss-Lederman, Elaine M. Jacobson, Jeremy R. Johnson, Anna Tsao, and Thomas\nTurnbull. Implementation of Strassen\u2019s algorithm for matrix multiplication. In Proceedings\nof the 1996 ACM/IEEE Conference on Supercomputing, article 32, 1996.",
                "context_sentence": "[186])."
            },
            {
                "source_text": "Paolo D\u2019Alberto and Alexandru Nicolau. Adaptive Strassen\u2019s matrix multiplication. In\nProceedings of the 21st Annual International Conference on Supercomputing, pages 284\u2013\n292, June 2007.",
                "context_sentence": "D\u2019Alberto and Nicolau [81] developed an adaptive scheme, which\ndetermines the crossover point by benchmarking when their software package is\ninstalled."
            },
            {
                "source_text": "Jon L. Bentley, Dorothea Haken, and James B. Saxe. A general method for solving divide-\nand-conquer recurrences. SIGACT News, 12(3):36\u201344, 1980.",
                "context_sentence": "The master method is adapted\nfrom Bentley, Haken, and Saxe [44], which provides the extended method justi\ufb01ed\nby Exercise 4.6-2."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Liu [237] show how to solve linear recurrences\nusing the method of generating functions."
            },
            {
                "source_text": "C. L. Liu. Introduction to Combinatorial Mathematics. McGraw-Hill, 1968.",
                "context_sentence": "Knuth [209] and Liu [237] show how to solve linear recurrences\nusing the method of generating functions."
            },
            {
                "source_text": "Paul W. Purdom, Jr. and Cynthia A. Brown. The Analysis of Algorithms. Holt, Rinehart,\nand Winston, 1985.",
                "context_sentence": "Purdom and Brown [287] and Graham,\nKnuth, and Patashnik [152] contain extended discussions of recurrence solving."
            },
            {
                "source_text": "Ronald L. Graham, Donald E. Knuth, and Oren Patashnik.\nConcrete Mathematics.\nAddison-Wesley, second edition, 1994.",
                "context_sentence": "Purdom and Brown [287] and Graham,\nKnuth, and Patashnik [152] contain extended discussions of recurrence solving."
            },
            {
                "source_text": "Mohamad Akra and Louay Bazzi. On the solution of linear recurrence equations. Compu-\ntational Optimization and Applications, 10(2):195\u2013210, 1998.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Salvador Roura.\nAn improved master theorem for divide-and-conquer recurrences.\nIn\nProceedings of Automata, Languages and Programming, 24th International Colloquium,\nICALP\u201997, volume 1256 of Lecture Notes in Computer Science, pages 449\u2013459. Springer,\n1997.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Rakesh M. Verma. General techniques for analyzing recursive algorithms with applications.\nSIAM Journal on Computing, 26(2):568\u2013581, 1997.",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Chee Yap. A real elementary approach to the master recurrence and generalizations. Un-\npublished manuscript. Available at http://cs.nyu.edu/yap/papers/, July 2008.\n\n1250\nBibliography",
                "context_sentence": "Several researchers, including Akra and Bazzi [13], Roura [299], Verma [346],\nand Yap [360], have given methods for solving more general divide-and-conquer\nrecurrences than are solved by the master method."
            },
            {
                "source_text": "Tom Leighton. Notes on better master theorems for divide-and-conquer recurrences. Class\nnotes. Available at http://citeseer.ist.psu.edu/252350.html, October 1996.",
                "context_sentence": "We describe the result of Akra\nand Bazzi here, as modi\ufb01ed by Leighton [228]."
            }
        ]
    },
    "5 Probabilistic Analysis and Randomized Algorithms": {
        "details": {
            "level": 2,
            "start_page": 135,
            "end_page": 167,
            "text_content_snippet": "5\nProbabilistic Analysis and Randomized\nAlgorithms\nThis chapter introduces probabilistic analysis and randomized algorithms. If you\nare unfamiliar with the basics of probability theory, you should read Appendix C,\nwhich reviews this material. We shall revisit probabilistic analysis and randomized\nalgorithms several times throughout this book.\n5.1\nThe hiring problem\nSuppose that you need to hire a new of\ufb01ce assistant. Your previous attempts at\nhiring have been unsuccessful, and you decide to use ..."
        },
        "sources": [
            {
                "source_text": "B\u00b4ela Bollob\u00b4as. Random Graphs. Academic Press, 1985.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Micha Hofri. Probabilistic Analysis of Algorithms. Springer, 1987.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Joel Spencer. Ten Lectures on the Probabilistic Method, volume 64 of CBMS-NSF Regional\nConference Series in Applied Mathematics. Society for Industrial and Applied Mathematics,\n1993.",
                "context_sentence": "Notes for Chapter 5\n145\nChapter notes\nBollob\u00b4as [53], Hofri [174], and Spencer [321] contain a wealth of advanced prob-\nabilistic techniques."
            },
            {
                "source_text": "Richard M. Karp. An introduction to randomized algorithms. Discrete Applied Mathemat-\nics, 34(1\u20133):165\u2013201, 1991.",
                "context_sentence": "The advantages of randomized algorithms are discussed and\nsurveyed by Karp [200] and Rabin [288]."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithms. In J. F. Traub, editor, Algorithms and Com-\nplexity: New Directions and Recent Results, pages 21\u201339. Academic Press, 1976.",
                "context_sentence": "The advantages of randomized algorithms are discussed and\nsurveyed by Karp [200] and Rabin [288]."
            },
            {
                "source_text": "Rajeev Motwani and Prabhakar Raghavan. Randomized Algorithms. Cambridge University\nPress, 1995.",
                "context_sentence": "The textbook by Motwani and Raghavan\n[262] gives an extensive treatment of randomized algorithms."
            },
            {
                "source_text": "Mikl\u00b4os Ajtai, Nimrod Megiddo, and Orli Waarts. Improved algorithms and analysis for\nsecretary problems and generalizations. In Proceedings of the 36th Annual Symposium on\nFoundations of Computer Science, pages 473\u2013482, 1995.",
                "context_sentence": "These problems\nare more commonly referred to as \u201csecretary problems.\u201d An example of work in\nthis area is the paper by Ajtai, Meggido, and Waarts [11]."
            }
        ]
    },
    "II Sorting and Order Statistics": {
        "details": {
            "level": 1,
            "start_page": 167,
            "end_page": 249,
            "text_content_snippet": "II\nSorting and Order Statistics\n\nIntroduction\nThis part presents several algorithms that solve the following sorting problem:\nInput: A sequence of n numbers ha1; a2; : : : ; ani.\nOutput: A permutation (reordering) ha0\n1; a0\n2; : : : ; a0\nni of the input sequence such\nthat a0\n1 \u0002 a0\n2 \u0002 \u0003 \u0003 \u0003 \u0002 a0\nn.\nThe input sequence is usually an n-element array, although it may be represented\nin some other fashion, such as a linked list.\nThe structure of the data\nIn practice, the numbers to be sorted are rare..."
        },
        "sources": [
            {
                "source_text": "J. W. J. Williams. Algorithm 232 (HEAPSORT). Communications of the ACM, 7(6):347\u2013\n348, 1964.",
                "context_sentence": "Chapter notes\nThe heapsort algorithm was invented by Williams [357], who also described how\nto implement a priority queue with a heap."
            },
            {
                "source_text": "Robert W. Floyd. Algorithm 245 (TREESORT). Communications of the ACM, 7(12):701,\n1964.",
                "context_sentence": "The BUILD-MAX-HEAP procedure\nwas suggested by Floyd [106]."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "Fredman and Willard [115] introduced the fusion tree data\nstructure and used it to sort n integers in O.n lg n= lg lg n/ time."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "If the data are b-bit integers, and the computer memory consists of addressable\nb-bit words, Fredman and Willard [115] showed how to implement MINIMUM in\nO.1/ time and INSERT and EXTRACT-MIN in O."
            },
            {
                "source_text": "Mikkel Thorup. On RAM priority queues. SIAM Journal on Computing, 30(1):86\u2013109,\n2000.",
                "context_sentence": "Thorup [337] has\nimproved the O."
            },
            {
                "source_text": "Ravindra K. Ahuja, Kurt Mehlhorn, James B. Orlin, and Robert E. Tarjan. Faster algorithms\nfor the shortest path problem. Journal of the ACM, 37:213\u2013223, 1990.",
                "context_sentence": "For the monotone case, if the data are in-\ntegers in the range 1; 2; : : : ; C, Ahuja, Mehlhorn, Orlin, and Tarjan [8] describe\n\nNotes for Chapter 6\n169\nhow to implement EXTRACT-MIN and INSERT in O.lg C/ amortized time (see\nChapter 17 for more on amortized analysis) and DECREASE-KEY in O.1/ time,\nusing a data structure called a radix heap."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Craig Silverstein. Buckets, heaps, lists and\nmonotone priority queues. SIAM Journal on Computing, 28(4):1326\u20131346, 1999.",
                "context_sentence": "Cherkassky, Goldberg, and Silverstein [65] further improved the bound to\nO.lg1=3C\u0002 C/ expected time by combining the multilevel bucketing structure of\nDenardo and Fox [85] with the heap of Thorup mentioned earlier."
            },
            {
                "source_text": "Eric V. Denardo and Bennett L. Fox. Shortest-route methods: 1. Reaching, pruning, and\nbuckets. Operations Research, 27(1):161\u2013186, 1979.",
                "context_sentence": "Cherkassky, Goldberg, and Silverstein [65] further improved the bound to\nO.lg1=3C\u0002 C/ expected time by combining the multilevel bucketing structure of\nDenardo and Fox [85] with the heap of Thorup mentioned earlier."
            },
            {
                "source_text": "Rajeev Raman. Recent results on the single-source shortest paths problem. SIGACT News,\n28(2):81\u201387, 1997.",
                "context_sentence": "Raman [291]\nfurther improved these results to obtain a bound of O.min.lg1=4C\u0002 C; lg1=3C\u0002 n//,\nfor any \ufb01xed \b > 0."
            },
            {
                "source_text": "C. A. R. Hoare. Quicksort. Computer Journal, 5(1):10\u201315, 1962.",
                "context_sentence": "190\nChapter 7\nQuicksort\nChapter notes\nThe quicksort procedure was invented by Hoare [170]; Hoare\u2019s version appears in\nProblem 7-1."
            },
            {
                "source_text": "Robert Sedgewick.\nImplementing quicksort programs.\nCommunications of the ACM,\n21(10):847\u2013857, 1978.",
                "context_sentence": "Sedgewick [305] and Bent-\nley [43] provide a good reference on the details of implementation and how they\nmatter."
            },
            {
                "source_text": "Jon L. Bentley. Programming Pearls. Addison-Wesley, 1986.",
                "context_sentence": "Sedgewick [305] and Bent-\nley [43] provide a good reference on the details of implementation and how they\nmatter."
            },
            {
                "source_text": "M. D. McIlroy.\nA killer adversary for quicksort.\nSoftware\u2014Practice and Experience,\n29(4):341\u2013344, 1999.",
                "context_sentence": "McIlroy [248] showed how to engineer a \u201ckiller adversary\u201d that produces an\narray on which virtually any implementation of quicksort takes \u201a.n2/ time."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and Selmer M. Johnson. A tournament problem. The American Mathe-\nmatical Monthly, 66(5):387\u2013389, 1959.",
                "context_sentence": "Chapter notes\nThe decision-tree model for studying comparison sorts was introduced by Ford\nand Johnson [110]."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth\u2019s comprehensive treatise on sorting [211] covers many\nvariations on the sorting problem, including the information-theoretic lower bound\non the complexity of sorting given here."
            },
            {
                "source_text": "Michael Ben-Or. Lower bounds for algebraic computation trees. In Proceedings of the\nFifteenth Annual ACM Symposium on Theory of Computing, pages 80\u201386, 1983.",
                "context_sentence": "Ben-Or [39] studied lower bounds for\nsorting using generalizations of the decision-tree model."
            },
            {
                "source_text": "E. J. Isaac and R. C. Singleton.\nSorting by address calculation.\nJournal of the ACM,\n3(3):169\u2013174, 1956.",
                "context_sentence": "Singleton [188]."
            },
            {
                "source_text": "J. I. Munro and V. Raman. Fast stable in-place sorting with O.n/ data moves. Algorithmica,\n16(2):151\u2013160, 1996.\n\nBibliography\n1245",
                "context_sentence": "Munro and Raman [263] give a stable sorting algorithm that performs O.n1C\u0002/\ncomparisons in the worst case, where 0 < \b \u0002 1 is any \ufb01xed constant."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "Generalizing the exponential search trees of\nAndersson [16], Thorup [335] gave an O.n.lg lg n/2/-time sorting algorithm that\ndoes not use multiplication or randomization, and it uses linear space."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "This bound was\nlater improved to O.n\np\nlg n/ time by Andersson [16]."
            },
            {
                "source_text": "Arne Andersson, Torben Hagerup, Stefan Nilsson, and Rajeev Raman. Sorting in linear\ntime? Journal of Computer and System Sciences, 57:74\u201393, 1998.",
                "context_sentence": "Andersson, Hagerup,\nNilsson, and Raman [17] have shown how to sort n integers in O.n lg lg n/ time\nwithout using multiplication, but their method requires storage that can be un-\nbounded in terms of n."
            },
            {
                "source_text": "Mikkel Thorup. Faster deterministic sorting and priority queues in linear space. In Pro-\nceedings of the 9th ACM-SIAM Symposium on Discrete Algorithms, pages 550\u2013555, 1998.",
                "context_sentence": "Generalizing the exponential search trees of\nAndersson [16], Thorup [335] gave an O.n.lg lg n/2/-time sorting algorithm that\ndoes not use multiplication or randomization, and it uses linear space."
            },
            {
                "source_text": "Yijie Han. Improved fast integer sorting in linear space. In Proceedings of the 12th ACM-\nSIAM Symposium on Discrete Algorithms, pages 793\u2013796, 2001.",
                "context_sentence": "Combining\nthese techniques with some new ideas, Han [158] improved the bound for sorting\nto O.n lg lg n lg lg lg n/ time."
            },
            {
                "source_text": "Tom Leighton. Tight bounds on the complexity of parallel sorting. IEEE Transactions on\nComputers, C-34(4):344\u2013354, 1985.",
                "context_sentence": "The columnsort algorithm in Problem 8-7 is by Leighton [227]."
            },
            {
                "source_text": "Manuel Blum, Robert W. Floyd, Vaughan Pratt, Ronald L. Rivest, and Robert E. Tarjan.\nTime bounds for selection. Journal of Computer and System Sciences, 7(4):448\u2013461, 1973.",
                "context_sentence": "Notes for Chapter 9\n227\nChapter notes\nThe worst-case linear-time median-\ufb01nding algorithm was devised by Blum, Floyd,\nPratt, Rivest, and Tarjan [50]."
            },
            {
                "source_text": "C. A. R. Hoare. Algorithm 63 (PARTITION) and algorithm 65 (FIND). Communications\nof the ACM, 4(7):321\u2013322, 1961.",
                "context_sentence": "The fast randomized version is due to Hoare [169]."
            },
            {
                "source_text": "Robert W. Floyd and Ronald L. Rivest. Expected time bounds for selection. Communica-\ntions of the ACM, 18(3):165\u2013172, 1975.",
                "context_sentence": "Floyd and Rivest [108] have developed an improved randomized version that parti-\ntions around an element recursively selected from a small sample of the elements."
            },
            {
                "source_text": "Samuel W. Bent and John W. John. Finding the median requires 2n comparisons. In Pro-\nceedings of the Seventeenth Annual ACM Symposium on Theory of Computing, pages 213\u2013\n216, 1985.",
                "context_sentence": "Bent and John [41] gave a lower bound of 2n comparisons for median\n\ufb01nding, and Sch\u00a8onhage, Paterson, and Pippenger [302] gave an upper bound of 3n."
            },
            {
                "source_text": "A. Sch\u00a8onhage, M. Paterson, and N. Pippenger. Finding the median. Journal of Computer\nand System Sciences, 13(2):184\u2013199, 1976.",
                "context_sentence": "Bent and John [41] gave a lower bound of 2n comparisons for median\n\ufb01nding, and Sch\u00a8onhage, Paterson, and Pippenger [302] gave an upper bound of 3n."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Selecting the median. SIAM Journal on Computing, 28(5):1722\u2013\n1758, 1999.",
                "context_sentence": "Their upper bound [93]\nis slightly less than 2:95n, and their lower bound [94] is .2 C \b/n, for a small\npositive constant \b, thereby improving slightly on related work by Dor et al."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Median selection requires .2 C \b/n comparisons. SIAM Journal\non Discrete Mathematics, 14(3):312\u2013325, 2001.",
                "context_sentence": "Their upper bound [93]\nis slightly less than 2:95n, and their lower bound [94] is .2 C \b/n, for a small\npositive constant \b, thereby improving slightly on related work by Dor et al."
            },
            {
                "source_text": "Dorit Dor, Johan H\u02daastad, Staffan Ulfberg, and Uri Zwick. On lower bounds for selecting\nthe median. SIAM Journal on Discrete Mathematics, 14(3):299\u2013311, 2001.",
                "context_sentence": "[92]."
            },
            {
                "source_text": "Michael S. Paterson. Progress in selection. In Proceedings of the Fifth Scandinavian Work-\nshop on Algorithm Theory, pages 368\u2013379, 1996.",
                "context_sentence": "Paterson [272] describes some of these results along with other related work."
            }
        ]
    },
    "6 Heapsort": {
        "details": {
            "level": 2,
            "start_page": 172,
            "end_page": 191,
            "text_content_snippet": "6\nHeapsort\nIn this chapter, we introduce another sorting algorithm: heapsort. Like merge sort,\nbut unlike insertion sort, heapsort\u2019s running time is O.n lg n/. Like insertion sort,\nbut unlike merge sort, heapsort sorts in place: only a constant number of array\nelements are stored outside the input array at any time. Thus, heapsort combines\nthe better attributes of the two sorting algorithms we have already discussed.\nHeapsort also introduces another algorithm design technique: using a data struc..."
        },
        "sources": [
            {
                "source_text": "J. W. J. Williams. Algorithm 232 (HEAPSORT). Communications of the ACM, 7(6):347\u2013\n348, 1964.",
                "context_sentence": "Chapter notes\nThe heapsort algorithm was invented by Williams [357], who also described how\nto implement a priority queue with a heap."
            },
            {
                "source_text": "Robert W. Floyd. Algorithm 245 (TREESORT). Communications of the ACM, 7(12):701,\n1964.",
                "context_sentence": "The BUILD-MAX-HEAP procedure\nwas suggested by Floyd [106]."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "If the data are b-bit integers, and the computer memory consists of addressable\nb-bit words, Fredman and Willard [115] showed how to implement MINIMUM in\nO.1/ time and INSERT and EXTRACT-MIN in O."
            },
            {
                "source_text": "Mikkel Thorup. On RAM priority queues. SIAM Journal on Computing, 30(1):86\u2013109,\n2000.",
                "context_sentence": "Thorup [337] has\nimproved the O."
            },
            {
                "source_text": "Ravindra K. Ahuja, Kurt Mehlhorn, James B. Orlin, and Robert E. Tarjan. Faster algorithms\nfor the shortest path problem. Journal of the ACM, 37:213\u2013223, 1990.",
                "context_sentence": "For the monotone case, if the data are in-\ntegers in the range 1; 2; : : : ; C, Ahuja, Mehlhorn, Orlin, and Tarjan [8] describe\n\nNotes for Chapter 6\n169\nhow to implement EXTRACT-MIN and INSERT in O.lg C/ amortized time (see\nChapter 17 for more on amortized analysis) and DECREASE-KEY in O.1/ time,\nusing a data structure called a radix heap."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Craig Silverstein. Buckets, heaps, lists and\nmonotone priority queues. SIAM Journal on Computing, 28(4):1326\u20131346, 1999.",
                "context_sentence": "Cherkassky, Goldberg, and Silverstein [65] further improved the bound to\nO.lg1=3C\u0002 C/ expected time by combining the multilevel bucketing structure of\nDenardo and Fox [85] with the heap of Thorup mentioned earlier."
            },
            {
                "source_text": "Eric V. Denardo and Bennett L. Fox. Shortest-route methods: 1. Reaching, pruning, and\nbuckets. Operations Research, 27(1):161\u2013186, 1979.",
                "context_sentence": "Cherkassky, Goldberg, and Silverstein [65] further improved the bound to\nO.lg1=3C\u0002 C/ expected time by combining the multilevel bucketing structure of\nDenardo and Fox [85] with the heap of Thorup mentioned earlier."
            },
            {
                "source_text": "Rajeev Raman. Recent results on the single-source shortest paths problem. SIGACT News,\n28(2):81\u201387, 1997.",
                "context_sentence": "Raman [291]\nfurther improved these results to obtain a bound of O.min.lg1=4C\u0002 C; lg1=3C\u0002 n//,\nfor any \ufb01xed \b > 0."
            }
        ]
    },
    "7 Quicksort": {
        "details": {
            "level": 2,
            "start_page": 191,
            "end_page": 212,
            "text_content_snippet": "7\nQuicksort\nThe quicksort algorithm has a worst-case running time of \u201a.n2/ on an input array\nof n numbers. Despite this slow worst-case running time, quicksort is often the best\npractical choice for sorting because it is remarkably ef\ufb01cient on the average: its\nexpected running time is \u201a.n lg n/, and the constant factors hidden in the \u201a.n lg n/\nnotation are quite small. It also has the advantage of sorting in place (see page 17),\nand it works well even in virtual-memory environments.\nSection 7.1 ..."
        },
        "sources": [
            {
                "source_text": "C. A. R. Hoare. Quicksort. Computer Journal, 5(1):10\u201315, 1962.",
                "context_sentence": "190\nChapter 7\nQuicksort\nChapter notes\nThe quicksort procedure was invented by Hoare [170]; Hoare\u2019s version appears in\nProblem 7-1."
            },
            {
                "source_text": "Robert Sedgewick.\nImplementing quicksort programs.\nCommunications of the ACM,\n21(10):847\u2013857, 1978.",
                "context_sentence": "Sedgewick [305] and Bent-\nley [43] provide a good reference on the details of implementation and how they\nmatter."
            },
            {
                "source_text": "Jon L. Bentley. Programming Pearls. Addison-Wesley, 1986.",
                "context_sentence": "Sedgewick [305] and Bent-\nley [43] provide a good reference on the details of implementation and how they\nmatter."
            },
            {
                "source_text": "M. D. McIlroy.\nA killer adversary for quicksort.\nSoftware\u2014Practice and Experience,\n29(4):341\u2013344, 1999.",
                "context_sentence": "McIlroy [248] showed how to engineer a \u201ckiller adversary\u201d that produces an\narray on which virtually any implementation of quicksort takes \u201a.n2/ time."
            }
        ]
    },
    "8 Sorting in Linear Time": {
        "details": {
            "level": 2,
            "start_page": 212,
            "end_page": 234,
            "text_content_snippet": "8\nSorting in Linear Time\nWe have now introduced several algorithms that can sort n numbers in O.n lg n/\ntime. Merge sort and heapsort achieve this upper bound in the worst case; quicksort\nachieves it on average. Moreover, for each of these algorithms, we can produce a\nsequence of n input numbers that causes the algorithm to run in \u0004.n lg n/ time.\nThese algorithms share an interesting property: the sorted order they determine\nis based only on comparisons between the input elements. We call such s..."
        },
        "sources": [
            {
                "source_text": "Lestor R. Ford, Jr. and Selmer M. Johnson. A tournament problem. The American Mathe-\nmatical Monthly, 66(5):387\u2013389, 1959.",
                "context_sentence": "Chapter notes\nThe decision-tree model for studying comparison sorts was introduced by Ford\nand Johnson [110]."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth\u2019s comprehensive treatise on sorting [211] covers many\nvariations on the sorting problem, including the information-theoretic lower bound\non the complexity of sorting given here."
            },
            {
                "source_text": "Michael Ben-Or. Lower bounds for algebraic computation trees. In Proceedings of the\nFifteenth Annual ACM Symposium on Theory of Computing, pages 80\u201386, 1983.",
                "context_sentence": "Ben-Or [39] studied lower bounds for\nsorting using generalizations of the decision-tree model."
            },
            {
                "source_text": "E. J. Isaac and R. C. Singleton.\nSorting by address calculation.\nJournal of the ACM,\n3(3):169\u2013174, 1956.",
                "context_sentence": "Singleton [188]."
            },
            {
                "source_text": "J. I. Munro and V. Raman. Fast stable in-place sorting with O.n/ data moves. Algorithmica,\n16(2):151\u2013160, 1996.\n\nBibliography\n1245",
                "context_sentence": "Munro and Raman [263] give a stable sorting algorithm that performs O.n1C\u0002/\ncomparisons in the worst case, where 0 < \b \u0002 1 is any \ufb01xed constant."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "Fredman and Willard [115] introduced the fusion tree data\nstructure and used it to sort n integers in O.n lg n= lg lg n/ time."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "Generalizing the exponential search trees of\nAndersson [16], Thorup [335] gave an O.n.lg lg n/2/-time sorting algorithm that\ndoes not use multiplication or randomization, and it uses linear space."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "This bound was\nlater improved to O.n\np\nlg n/ time by Andersson [16]."
            },
            {
                "source_text": "Arne Andersson, Torben Hagerup, Stefan Nilsson, and Rajeev Raman. Sorting in linear\ntime? Journal of Computer and System Sciences, 57:74\u201393, 1998.",
                "context_sentence": "Andersson, Hagerup,\nNilsson, and Raman [17] have shown how to sort n integers in O.n lg lg n/ time\nwithout using multiplication, but their method requires storage that can be un-\nbounded in terms of n."
            },
            {
                "source_text": "Mikkel Thorup. Faster deterministic sorting and priority queues in linear space. In Pro-\nceedings of the 9th ACM-SIAM Symposium on Discrete Algorithms, pages 550\u2013555, 1998.",
                "context_sentence": "Generalizing the exponential search trees of\nAndersson [16], Thorup [335] gave an O.n.lg lg n/2/-time sorting algorithm that\ndoes not use multiplication or randomization, and it uses linear space."
            },
            {
                "source_text": "Yijie Han. Improved fast integer sorting in linear space. In Proceedings of the 12th ACM-\nSIAM Symposium on Discrete Algorithms, pages 793\u2013796, 2001.",
                "context_sentence": "Combining\nthese techniques with some new ideas, Han [158] improved the bound for sorting\nto O.n lg lg n lg lg lg n/ time."
            },
            {
                "source_text": "Tom Leighton. Tight bounds on the complexity of parallel sorting. IEEE Transactions on\nComputers, C-34(4):344\u2013354, 1985.",
                "context_sentence": "The columnsort algorithm in Problem 8-7 is by Leighton [227]."
            }
        ]
    },
    "9 Medians and Order Statistics": {
        "details": {
            "level": 2,
            "start_page": 234,
            "end_page": 249,
            "text_content_snippet": "9\nMedians and Order Statistics\nThe ith order statistic of a set of n elements is the ith smallest element. For\nexample, the minimum of a set of elements is the \ufb01rst order statistic (i D 1),\nand the maximum is the nth order statistic (i D n). A median, informally, is\nthe \u201chalfway point\u201d of the set. When n is odd, the median is unique, occurring at\ni D .n C 1/=2. When n is even, there are two medians, occurring at i D n=2 and\ni D n=2C1. Thus, regardless of the parity of n, medians occur at i D b.n..."
        },
        "sources": [
            {
                "source_text": "Manuel Blum, Robert W. Floyd, Vaughan Pratt, Ronald L. Rivest, and Robert E. Tarjan.\nTime bounds for selection. Journal of Computer and System Sciences, 7(4):448\u2013461, 1973.",
                "context_sentence": "Notes for Chapter 9\n227\nChapter notes\nThe worst-case linear-time median-\ufb01nding algorithm was devised by Blum, Floyd,\nPratt, Rivest, and Tarjan [50]."
            },
            {
                "source_text": "C. A. R. Hoare. Algorithm 63 (PARTITION) and algorithm 65 (FIND). Communications\nof the ACM, 4(7):321\u2013322, 1961.",
                "context_sentence": "The fast randomized version is due to Hoare [169]."
            },
            {
                "source_text": "Robert W. Floyd and Ronald L. Rivest. Expected time bounds for selection. Communica-\ntions of the ACM, 18(3):165\u2013172, 1975.",
                "context_sentence": "Floyd and Rivest [108] have developed an improved randomized version that parti-\ntions around an element recursively selected from a small sample of the elements."
            },
            {
                "source_text": "Samuel W. Bent and John W. John. Finding the median requires 2n comparisons. In Pro-\nceedings of the Seventeenth Annual ACM Symposium on Theory of Computing, pages 213\u2013\n216, 1985.",
                "context_sentence": "Bent and John [41] gave a lower bound of 2n comparisons for median\n\ufb01nding, and Sch\u00a8onhage, Paterson, and Pippenger [302] gave an upper bound of 3n."
            },
            {
                "source_text": "A. Sch\u00a8onhage, M. Paterson, and N. Pippenger. Finding the median. Journal of Computer\nand System Sciences, 13(2):184\u2013199, 1976.",
                "context_sentence": "Bent and John [41] gave a lower bound of 2n comparisons for median\n\ufb01nding, and Sch\u00a8onhage, Paterson, and Pippenger [302] gave an upper bound of 3n."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Selecting the median. SIAM Journal on Computing, 28(5):1722\u2013\n1758, 1999.",
                "context_sentence": "Their upper bound [93]\nis slightly less than 2:95n, and their lower bound [94] is .2 C \b/n, for a small\npositive constant \b, thereby improving slightly on related work by Dor et al."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Median selection requires .2 C \b/n comparisons. SIAM Journal\non Discrete Mathematics, 14(3):312\u2013325, 2001.",
                "context_sentence": "Their upper bound [93]\nis slightly less than 2:95n, and their lower bound [94] is .2 C \b/n, for a small\npositive constant \b, thereby improving slightly on related work by Dor et al."
            },
            {
                "source_text": "Dorit Dor, Johan H\u02daastad, Staffan Ulfberg, and Uri Zwick. On lower bounds for selecting\nthe median. SIAM Journal on Discrete Mathematics, 14(3):299\u2013311, 2001.",
                "context_sentence": "[92]."
            },
            {
                "source_text": "Michael S. Paterson. Progress in selection. In Proceedings of the Fifth Scandinavian Work-\nshop on Algorithm Theory, pages 368\u2013379, 1996.",
                "context_sentence": "Paterson [272] describes some of these results along with other related work."
            }
        ]
    },
    "III Data Structures": {
        "details": {
            "level": 1,
            "start_page": 249,
            "end_page": 377,
            "text_content_snippet": "III\nData Structures\n\nIntroduction\nSets are as fundamental to computer science as they are to mathematics. Whereas\nmathematical sets are unchanging, the sets manipulated by algorithms can grow,\nshrink, or otherwise change over time. We call such sets dynamic. The next \ufb01ve\nchapters present some basic techniques for representing \ufb01nite dynamic sets and\nmanipulating them on a computer.\nAlgorithms may require several different types of operations to be performed on\nsets. For example, many algorithms n..."
        },
        "sources": [
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "Chapter notes\nAho, Hopcroft, and Ullman [6] and Knuth [209] are excellent references for ele-\nmentary data structures."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Chapter notes\nAho, Hopcroft, and Ullman [6] and Knuth [209] are excellent references for ele-\nmentary data structures."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] cites\nA."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Data Structures and Algorithms in Java. John\nWiley & Sons, 1998.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "Michael Main. Data Structures and Other Objects Using Java. Addison-Wesley, 1999.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "Clifford A. Shaffer. A Practical Introduction to Data Structures and Algorithm Analysis.\nPrentice Hall, second edition, 2001.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Gonnet [145] provides experimental data on the perfor-\nmance of many data-structure operations."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Notes for Chapter 11\n285\nChapter notes\nKnuth [211] and Gonnet [145] are excellent references for the analysis of hash-\ning algorithms."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Show that\nbn D\n4n\np\u0006n3=2 .1 C O.1=n// :\nChapter notes\nKnuth [211] contains a good discussion of simple binary search trees as well as\nmany variations."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] suggests that\nA \u0004 ."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Notes for Chapter 11\n285\nChapter notes\nKnuth [211] and Gonnet [145] are excellent references for the analysis of hash-\ning algorithms."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] also discusses\nthem."
            },
            {
                "source_text": "J. Lawrence Carter and Mark N. Wegman. Universal classes of hash functions. Journal of\nComputer and System Sciences, 18(2):143\u2013154, 1979.",
                "context_sentence": "Carter and Wegman introduced the notion of universal classes of hash functions\nin 1979 [58]."
            },
            {
                "source_text": "Michael L. Fredman, J\u00b4anos Koml\u00b4os, and Endre Szemer\u00b4edi. Storing a sparse table with O.1/\nworst case access time. Journal of the ACM, 31(3):538\u2013544, 1984.",
                "context_sentence": "Fredman, Koml\u00b4os, and Szemer\u00b4edi [112] developed the perfect hashing scheme\nfor static sets presented in Section 11.5."
            },
            {
                "source_text": "Martin Dietzfelbinger, Anna Karlin, Kurt Mehlhorn, Friedhelm Meyer auf der Heide, Hans\nRohnert, and Robert E. Tarjan. Dynamic perfect hashing: Upper and lower bounds. SIAM\nJournal on Computing, 23(4):738\u2013761, 1994.",
                "context_sentence": "[86]."
            },
            {
                "source_text": "Javed A. Aslam. A simple bound on the expected height of a randomly built binary search\ntree. Technical Report TR2001-387, Dartmouth College Department of Computer Science,\n2001.",
                "context_sentence": "The proof in Section 12.4 that bounds the expected height of a randomly built\nbinary search tree is due to Aslam [24]."
            },
            {
                "source_text": "Conrado Mart\u00b4\u0131nez and Salvador Roura. Randomized binary search trees. Journal of the\nACM, 45(2):288\u2013323, 1998.",
                "context_sentence": "Mart\u00b4\u0131nez and Roura [243] give randomized\nalgorithms for insertion into and deletion from binary search trees in which the\nresult of either operation is a random binary search tree."
            },
            {
                "source_text": "G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.",
                "context_sentence": "Chapter notes\nThe idea of balancing a search tree is due to Adel\u2019son-Vel\u2019ski\u02d8\u0131 and Landis [2], who\nintroduced a class of balanced search trees called \u201cAVL trees\u201d in 1962, described in\nProblem 13-3."
            },
            {
                "source_text": "R. Bayer and E. M. McCreight. Organization and maintenance of large ordered indexes.\nActa Informatica, 1(3):173\u2013189, 1972.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "R. Bayer. Symmetric binary B-trees: Data structure and maintenance algorithms. Acta\nInformatica, 1(4):290\u2013306, 1972.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "Leo J. Guibas and Robert Sedgewick. A dichromatic framework for balanced trees. In\nProceedings of the 19th Annual Symposium on Foundations of Computer Science, pages\n8\u201321, 1978.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "Arne Andersson. Balanced search trees made simple. In Proceedings of the Third Workshop\non Algorithms and Data Structures, volume 709 of Lecture Notes in Computer Science,\npages 60\u201371. Springer, 1993.",
                "context_sentence": "Andersson [15] gives a simpler-to-code\n\n338\nChapter 13\nRed-Black Trees\nvariant of red-black trees."
            },
            {
                "source_text": "Mark Allen Weiss. Data Structures and Problem Solving Using C++. Addison-Wesley,\nsecond edition, 2000.",
                "context_sentence": "Weiss [351] calls this variant AA-trees."
            },
            {
                "source_text": "Raimund Seidel and C. R. Aragon. Randomized search trees. Algorithmica, 16(4\u20135):464\u2013\n497, 1996.",
                "context_sentence": "Treaps, the subject of Problem 13-4, were proposed by Seidel and Aragon [309]."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. LEDA: A Platform for Combinatorial and Geometric\nComputing. Cambridge University Press, 1999.",
                "context_sentence": "They are the default implementation of a dictionary in LEDA [253], which is a\nwell-implemented collection of data structures and algorithms."
            },
            {
                "source_text": "J. Nievergelt and E. M. Reingold. Binary search trees of bounded balance. SIAM Journal\non Computing, 2(1):33\u201343, 1973.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "H. A. Maurer, Th. Ottmann, and H.-W. Six. Implementing dictionaries using binary trees of\nvery small height. Information Processing Letters, 5(1):11\u201314, 1976.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "Igal Galperin and Ronald L. Rivest. Scapegoat trees. In Proceedings of the 4th ACM-SIAM\nSymposium on Discrete Algorithms, pages 165\u2013174, 1993.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. Self-adjusting binary search trees. Journal of the\nACM, 32(3):652\u2013686, 1985.",
                "context_sentence": "Perhaps\nthe most intriguing are the \u201csplay trees\u201d introduced by Sleator and Tarjan [320],\nwhich are \u201cself-adjusting.\u201d (See Tarjan [330] for a good description of splay trees.)\nSplay trees maintain balance without any explicit balance condition such as color."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Perhaps\nthe most intriguing are the \u201csplay trees\u201d introduced by Sleator and Tarjan [320],\nwhich are \u201cself-adjusting.\u201d (See Tarjan [330] for a good description of splay trees.)\nSplay trees maintain balance without any explicit balance condition such as color."
            },
            {
                "source_text": "William Pugh. Skip lists: A probabilistic alternative to balanced trees. Communications of\nthe ACM, 33(6):668\u2013676, 1990.",
                "context_sentence": "Skip lists [286] provide an alternative to balanced binary trees."
            },
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "Chapter notes\nIn their book, Preparata and Shamos [282] describe several of the interval trees\nthat appear in the literature, citing work by H."
            }
        ]
    },
    "10 Elementary Data Structures": {
        "details": {
            "level": 2,
            "start_page": 253,
            "end_page": 274,
            "text_content_snippet": "10\nElementary Data Structures\nIn this chapter, we examine the representation of dynamic sets by simple data struc-\ntures that use pointers. Although we can construct many complex data structures\nusing pointers, we present only the rudimentary ones: stacks, queues, linked lists,\nand rooted trees. We also show ways to synthesize objects and pointers from ar-\nrays.\n10.1\nStacks and queues\nStacks and queues are dynamic sets in which the element removed from the set\nby the DELETE operation is prespeci..."
        },
        "sources": [
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "Chapter notes\nAho, Hopcroft, and Ullman [6] and Knuth [209] are excellent references for ele-\nmentary data structures."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Chapter notes\nAho, Hopcroft, and Ullman [6] and Knuth [209] are excellent references for ele-\nmentary data structures."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] cites\nA."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Data Structures and Algorithms in Java. John\nWiley & Sons, 1998.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "Michael Main. Data Structures and Other Objects Using Java. Addison-Wesley, 1999.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "Clifford A. Shaffer. A Practical Introduction to Data Structures and Algorithm Analysis.\nPrentice Hall, second edition, 2001.",
                "context_sentence": "Examples of these types of\ntextbooks include Goodrich and Tamassia [147], Main [241], Shaffer [311], and\nWeiss [352, 353, 354]."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Gonnet [145] provides experimental data on the perfor-\nmance of many data-structure operations."
            }
        ]
    },
    "11 Hash Tables": {
        "details": {
            "level": 2,
            "start_page": 274,
            "end_page": 307,
            "text_content_snippet": "11\nHash Tables\nMany applications require a dynamic set that supports only the dictionary opera-\ntions INSERT, SEARCH, and DELETE. For example, a compiler that translates a\nprogramming language maintains a symbol table, in which the keys of elements\nare arbitrary character strings corresponding to identi\ufb01ers in the language. A hash\ntable is an effective data structure for implementing dictionaries. Although search-\ning for an element in a hash table can take as long as searching for an element in..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] suggests that\nA \u0004 ."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Notes for Chapter 11\n285\nChapter notes\nKnuth [211] and Gonnet [145] are excellent references for the analysis of hash-\ning algorithms."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "Notes for Chapter 11\n285\nChapter notes\nKnuth [211] and Gonnet [145] are excellent references for the analysis of hash-\ning algorithms."
            },
            {
                "source_text": "J. Lawrence Carter and Mark N. Wegman. Universal classes of hash functions. Journal of\nComputer and System Sciences, 18(2):143\u2013154, 1979.",
                "context_sentence": "Carter and Wegman introduced the notion of universal classes of hash functions\nin 1979 [58]."
            },
            {
                "source_text": "Michael L. Fredman, J\u00b4anos Koml\u00b4os, and Endre Szemer\u00b4edi. Storing a sparse table with O.1/\nworst case access time. Journal of the ACM, 31(3):538\u2013544, 1984.",
                "context_sentence": "Fredman, Koml\u00b4os, and Szemer\u00b4edi [112] developed the perfect hashing scheme\nfor static sets presented in Section 11.5."
            },
            {
                "source_text": "Martin Dietzfelbinger, Anna Karlin, Kurt Mehlhorn, Friedhelm Meyer auf der Heide, Hans\nRohnert, and Robert E. Tarjan. Dynamic perfect hashing: Upper and lower bounds. SIAM\nJournal on Computing, 23(4):738\u2013761, 1994.",
                "context_sentence": "[86]."
            }
        ]
    },
    "12 Binary Search Trees": {
        "details": {
            "level": 2,
            "start_page": 307,
            "end_page": 329,
            "text_content_snippet": "12\nBinary Search Trees\nThe search tree data structure supports many dynamic-set operations, including\nSEARCH, MINIMUM, MAXIMUM, PREDECESSOR, SUCCESSOR, INSERT, and\nDELETE. Thus, we can use a search tree both as a dictionary and as a priority\nqueue.\nBasic operations on a binary search tree take time proportional to the height of\nthe tree. For a complete binary tree with n nodes, such operations run in \u201a.lg n/\nworst-case time. If the tree is a linear chain of n nodes, however, the same oper-\nation..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Show that\nbn D\n4n\np\u0006n3=2 .1 C O.1=n// :\nChapter notes\nKnuth [211] contains a good discussion of simple binary search trees as well as\nmany variations."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Knuth [211] also discusses\nthem."
            },
            {
                "source_text": "Javed A. Aslam. A simple bound on the expected height of a randomly built binary search\ntree. Technical Report TR2001-387, Dartmouth College Department of Computer Science,\n2001.",
                "context_sentence": "The proof in Section 12.4 that bounds the expected height of a randomly built\nbinary search tree is due to Aslam [24]."
            },
            {
                "source_text": "Conrado Mart\u00b4\u0131nez and Salvador Roura. Randomized binary search trees. Journal of the\nACM, 45(2):288\u2013323, 1998.",
                "context_sentence": "Mart\u00b4\u0131nez and Roura [243] give randomized\nalgorithms for insertion into and deletion from binary search trees in which the\nresult of either operation is a random binary search tree."
            }
        ]
    },
    "13 Red-Black Trees": {
        "details": {
            "level": 2,
            "start_page": 329,
            "end_page": 360,
            "text_content_snippet": "13\nRed-Black Trees\nChapter 12 showed that a binary search tree of height h can support any of the basic\ndynamic-set operations\u2014such as SEARCH, PREDECESSOR, SUCCESSOR, MINI-\nMUM, MAXIMUM, INSERT, and DELETE\u2014in O.h/ time. Thus, the set operations\nare fast if the height of the search tree is small. If its height is large, however, the\nset operations may run no faster than with a linked list. Red-black trees are one\nof many search-tree schemes that are \u201cbalanced\u201d in order to guarantee that basic\ndyn..."
        },
        "sources": [
            {
                "source_text": "G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.",
                "context_sentence": "Chapter notes\nThe idea of balancing a search tree is due to Adel\u2019son-Vel\u2019ski\u02d8\u0131 and Landis [2], who\nintroduced a class of balanced search trees called \u201cAVL trees\u201d in 1962, described in\nProblem 13-3."
            },
            {
                "source_text": "R. Bayer and E. M. McCreight. Organization and maintenance of large ordered indexes.\nActa Informatica, 1(3):173\u2013189, 1972.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "R. Bayer. Symmetric binary B-trees: Data structure and maintenance algorithms. Acta\nInformatica, 1(4):290\u2013306, 1972.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "Leo J. Guibas and Robert Sedgewick. A dichromatic framework for balanced trees. In\nProceedings of the 19th Annual Symposium on Foundations of Computer Science, pages\n8\u201321, 1978.",
                "context_sentence": "Chapter 18 covers a generalization of 2-3 trees\nintroduced by Bayer and McCreight [35], called \u201cB-trees.\u201d\nRed-black trees were invented by Bayer [34] under the name \u201csymmetric binary\nB-trees.\u201d Guibas and Sedgewick [155] studied their properties at length and in-\ntroduced the red/black color convention."
            },
            {
                "source_text": "Arne Andersson. Balanced search trees made simple. In Proceedings of the Third Workshop\non Algorithms and Data Structures, volume 709 of Lecture Notes in Computer Science,\npages 60\u201371. Springer, 1993.",
                "context_sentence": "Andersson [15] gives a simpler-to-code\n\n338\nChapter 13\nRed-Black Trees\nvariant of red-black trees."
            },
            {
                "source_text": "Mark Allen Weiss. Data Structures and Problem Solving Using C++. Addison-Wesley,\nsecond edition, 2000.",
                "context_sentence": "Weiss [351] calls this variant AA-trees."
            },
            {
                "source_text": "Raimund Seidel and C. R. Aragon. Randomized search trees. Algorithmica, 16(4\u20135):464\u2013\n497, 1996.",
                "context_sentence": "Treaps, the subject of Problem 13-4, were proposed by Seidel and Aragon [309]."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. LEDA: A Platform for Combinatorial and Geometric\nComputing. Cambridge University Press, 1999.",
                "context_sentence": "They are the default implementation of a dictionary in LEDA [253], which is a\nwell-implemented collection of data structures and algorithms."
            },
            {
                "source_text": "J. Nievergelt and E. M. Reingold. Binary search trees of bounded balance. SIAM Journal\non Computing, 2(1):33\u201343, 1973.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "H. A. Maurer, Th. Ottmann, and H.-W. Six. Implementing dictionaries using binary trees of\nvery small height. Information Processing Letters, 5(1):11\u201314, 1976.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "Igal Galperin and Ronald L. Rivest. Scapegoat trees. In Proceedings of the 4th ACM-SIAM\nSymposium on Discrete Algorithms, pages 165\u2013174, 1993.",
                "context_sentence": "There are many other variations on balanced binary trees, including weight-\nbalanced trees [264], k-neighbor trees [245], and scapegoat trees [127]."
            },
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. Self-adjusting binary search trees. Journal of the\nACM, 32(3):652\u2013686, 1985.",
                "context_sentence": "Perhaps\nthe most intriguing are the \u201csplay trees\u201d introduced by Sleator and Tarjan [320],\nwhich are \u201cself-adjusting.\u201d (See Tarjan [330] for a good description of splay trees.)\nSplay trees maintain balance without any explicit balance condition such as color."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Perhaps\nthe most intriguing are the \u201csplay trees\u201d introduced by Sleator and Tarjan [320],\nwhich are \u201cself-adjusting.\u201d (See Tarjan [330] for a good description of splay trees.)\nSplay trees maintain balance without any explicit balance condition such as color."
            },
            {
                "source_text": "William Pugh. Skip lists: A probabilistic alternative to balanced trees. Communications of\nthe ACM, 33(6):668\u2013676, 1990.",
                "context_sentence": "Skip lists [286] provide an alternative to balanced binary trees."
            }
        ]
    },
    "14 Augmenting Data Structures": {
        "details": {
            "level": 2,
            "start_page": 360,
            "end_page": 377,
            "text_content_snippet": "14\nAugmenting Data Structures\nSome engineering situations require no more than a \u201ctextbook\u201d data struc-\nture\u2014such as a doubly linked list, a hash table, or a binary search tree\u2014but many\nothers require a dash of creativity. Only in rare situations will you need to cre-\nate an entirely new type of data structure, though. More often, it will suf\ufb01ce to\naugment a textbook data structure by storing additional information in it. You can\nthen program new operations for the data structure to support the ..."
        },
        "sources": [
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "Chapter notes\nIn their book, Preparata and Shamos [282] describe several of the interval trees\nthat appear in the literature, citing work by H."
            }
        ]
    },
    "IV Advanced Design and Analysis Techniques": {
        "details": {
            "level": 1,
            "start_page": 377,
            "end_page": 501,
            "text_content_snippet": "IV\nAdvanced Design and Analysis Techniques\n\nIntroduction\nThis part covers three important techniques used in designing and analyzing ef\ufb01-\ncient algorithms: dynamic programming (Chapter 15), greedy algorithms (Chap-\nter 16), and amortized analysis (Chapter 17). Earlier parts have presented other\nwidely applicable techniques, such as divide-and-conquer, randomization, and how\nto solve recurrences. The techniques in this part are somewhat more sophisticated,\nbut they help us to attack many computat..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Optimum binary search trees. Acta Informatica, 1(1):14\u201325, 1971.",
                "context_sentence": "Exercise 15.5-4 is due to\nKnuth [212]."
            },
            {
                "source_text": "Donald E. Knuth. Optimum binary search trees. Acta Informatica, 1(1):14\u201325, 1971.",
                "context_sentence": "Knuth [212] has shown that there are always roots of optimal subtrees such that\nroot\u0152i; j \u0005 1\u0002 \u0002 root\u0152i; j \u0002 \u0002 root\u0152i C 1; j \u0002 for all 1 \u0002 i < j \u0002 n."
            },
            {
                "source_text": "Richard Bellman. Dynamic Programming. Princeton University Press, 1957.",
                "context_sentence": "Although optimization techniques incorporating elements of\ndynamic programming were known earlier, Bellman provided the area with a solid\nmathematical basis [37]."
            },
            {
                "source_text": "Zvi Galil and Kunsoo Park. Dynamic programming with convexity, concavity and sparsity.\nTheoretical Computer Science, 92(1):49\u201376, 1992.\n\n1238\nBibliography",
                "context_sentence": "Notes for Chapter 15\n413\nGalil and Park [125] classify dynamic-programming algorithms according to the\nsize of the table and the number of other table entries each entry depends on."
            },
            {
                "source_text": "V. Chv\u00b4atal, D. A. Klarner, and D. E. Knuth. Selected combinatorial research problems.\nTechnical Report STAN-CS-72-292, Computer Science Department, Stanford University,\n1972.",
                "context_sentence": "Knuth [70] posed the question of whether subquadratic\nalgorithms for the LCS problem exist."
            },
            {
                "source_text": "William J. Masek and Michael S. Paterson. A faster algorithm computing string edit dis-\ntances. Journal of Computer and System Sciences, 20(1):18\u201331, 1980.\n\n1244\nBibliography",
                "context_sentence": "Masek and Paterson [244] answered this\nquestion in the af\ufb01rmative by giving an algorithm that runs in O.mn= lg n/ time,\nwhere n \u0002 m and the sequences are drawn from a set of bounded size."
            },
            {
                "source_text": "T. G. Szymanski. A special case of the maximal common subsequence problem. Technical\nReport TR-170, Computer Science Laboratory, Princeton University, 1975.",
                "context_sentence": "For the\nspecial case in which no element appears more than once in an input sequence,\nSzymanski [326] shows how to solve the problem in O..n C m/ lg.n C m// time."
            },
            {
                "source_text": "E. N. Gilbert and E. F. Moore. Variable-length binary encodings. Bell System Technical\nJournal, 38(4):933\u2013967, 1959.",
                "context_sentence": "An early paper on variable-length binary encodings by Gilbert and Moore [133]\nhad applications to constructing optimal binary search trees for the case in which all\nprobabilities pi are 0; this paper contains an O.n3/-time algorithm."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft,\nand Ullman [5] present the algorithm from Section 15.5."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "478\nChapter 17\nAmortized Analysis\nChapter notes\nAho, Hopcroft, and Ullman [5] used aggregate analysis to determine the running\ntime of operations on a disjoint-set forest; we shall analyze this data structure us-\ning the potential method in Chapter 21."
            },
            {
                "source_text": "T. C. Hu and A. C. Tucker. Optimal computer search trees and variable-length alphabetic\ncodes. SIAM Journal on Applied Mathematics, 21(4):514\u2013532, 1971.",
                "context_sentence": "Hu and Tucker [184] devised an algorithm for the case in which all\nprobabilities pi are 0 that uses O.n2/ time and O.n/ space; subsequently, Knuth\n[211] reduced the time to O.n lg n/."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Hu and Tucker [184] devised an algorithm for the case in which all\nprobabilities pi are 0 that uses O.n2/ time and O.n/ space; subsequently, Knuth\n[211] reduced the time to O.n lg n/."
            },
            {
                "source_text": "Shai Avidan and Ariel Shamir. Seam carving for content-aware image resizing. ACM Trans-\nactions on Graphics, 26(3), article 10, 2007.",
                "context_sentence": "Problem 15-8 is due to Avidan and Shamir [27], who have posted on the Web a\nwonderful video illustrating this image-compression technique."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "450\nChapter 16\nGreedy Algorithms\nChapter notes\nMuch more material on greedy algorithms and matroids can be found in Lawler\n[224] and Papadimitriou and Steiglitz [271]."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "450\nChapter 16\nGreedy Algorithms\nChapter notes\nMuch more material on greedy algorithms and matroids can be found in Lawler\n[224] and Papadimitriou and Steiglitz [271]."
            },
            {
                "source_text": "Jack Edmonds. Matroids and the greedy algorithm. Mathematical Programming, 1(1):127\u2013\n136, 1971.",
                "context_sentence": "The greedy algorithm \ufb01rst appeared in the combinatorial optimization literature\nin a 1971 article by Edmonds [101], though the theory of matroids dates back to\na 1935 article by Whitney [355]."
            },
            {
                "source_text": "Hassler Whitney. On the abstract properties of linear dependence. American Journal of\nMathematics, 57(3):509\u2013533, 1935.",
                "context_sentence": "The greedy algorithm \ufb01rst appeared in the combinatorial optimization literature\nin a 1971 article by Edmonds [101], though the theory of matroids dates back to\na 1935 article by Whitney [355]."
            },
            {
                "source_text": "F\u02d8anic\u02d8a Gavril. Algorithms for minimum coloring, maximum clique, minimum covering by\ncliques, and maximum independent set of a chordal graph. SIAM Journal on Computing,\n1(2):180\u2013187, 1972.",
                "context_sentence": "Our proof of the correctness of the greedy algorithm for the activity-selection\nproblem is based on that of Gavril [131]."
            },
            {
                "source_text": "Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran. Computer Algorithms. Com-\nputer Science Press, 1998.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "David A. Huffman. A method for the construction of minimum-redundancy codes. Pro-\nceedings of the IRE, 40(9):1098\u20131101, 1952.",
                "context_sentence": "Huffman codes were invented in 1952 [185]; Lelewer and Hirschberg [231] sur-\nveys data-compression techniques known as of 1987."
            },
            {
                "source_text": "Debra A. Lelewer and Daniel S. Hirschberg. Data compression. ACM Computing Surveys,\n19(3):261\u2013296, 1987.",
                "context_sentence": "Huffman codes were invented in 1952 [185]; Lelewer and Hirschberg [231] sur-\nveys data-compression techniques known as of 1987."
            },
            {
                "source_text": "Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Mathe-\nmatics, 160(2):781\u2013793, 2004.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Robert E. Tarjan. Amortized computational complexity. SIAM Journal on Algebraic and\nDiscrete Methods, 6(2):306\u2013318, 1985.",
                "context_sentence": "Tarjan [331] surveys the accounting and\npotential methods of amortized analysis and presents several applications."
            },
            {
                "source_text": "Thomas H. Cormen, Thomas Sundquist, and Leonard F. Wisniewski. Asymptotically tight\nbounds for performing BMMC permutations on parallel disk systems. SIAM Journal on\nComputing, 28(1):105\u2013136, 1998.",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "Robert W. Floyd. Permuting information in idealized two-level storage. In Raymond E.\nMiller and James W. Thatcher, editors, Complexity of Computer Computations, pages 105\u2013\n109. Plenum Press, 1972.\n\nBibliography\n1237",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "David W. Krumme, George Cybenko, and K. N. Venkataraman. Gossiping in minimal time.\nSIAM Journal on Computing, 21(1):111\u2013139, 1992.",
                "context_sentence": "Krumme, Cybenko,\nand Venkataraman [221] applied potential functions to prove lower bounds on gos-\nsiping: communicating a unique item from each vertex in a graph to every other\nvertex."
            }
        ]
    },
    "15 Dynamic Programming": {
        "details": {
            "level": 2,
            "start_page": 380,
            "end_page": 435,
            "text_content_snippet": "15\nDynamic Programming\nDynamic programming, like the divide-and-conquer method, solves problems by\ncombining the solutions to subproblems. (\u201cProgramming\u201d in this context refers\nto a tabular method, not to writing computer code.) As we saw in Chapters 2\nand 4, divide-and-conquer algorithms partition the problem into disjoint subprob-\nlems, solve the subproblems recursively, and then combine their solutions to solve\nthe original problem. In contrast, dynamic programming applies when the subprob-\nl..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Optimum binary search trees. Acta Informatica, 1(1):14\u201325, 1971.",
                "context_sentence": "Exercise 15.5-4 is due to\nKnuth [212]."
            },
            {
                "source_text": "Donald E. Knuth. Optimum binary search trees. Acta Informatica, 1(1):14\u201325, 1971.",
                "context_sentence": "Knuth [212] has shown that there are always roots of optimal subtrees such that\nroot\u0152i; j \u0005 1\u0002 \u0002 root\u0152i; j \u0002 \u0002 root\u0152i C 1; j \u0002 for all 1 \u0002 i < j \u0002 n."
            },
            {
                "source_text": "Richard Bellman. Dynamic Programming. Princeton University Press, 1957.",
                "context_sentence": "Although optimization techniques incorporating elements of\ndynamic programming were known earlier, Bellman provided the area with a solid\nmathematical basis [37]."
            },
            {
                "source_text": "Zvi Galil and Kunsoo Park. Dynamic programming with convexity, concavity and sparsity.\nTheoretical Computer Science, 92(1):49\u201376, 1992.\n\n1238\nBibliography",
                "context_sentence": "Notes for Chapter 15\n413\nGalil and Park [125] classify dynamic-programming algorithms according to the\nsize of the table and the number of other table entries each entry depends on."
            },
            {
                "source_text": "V. Chv\u00b4atal, D. A. Klarner, and D. E. Knuth. Selected combinatorial research problems.\nTechnical Report STAN-CS-72-292, Computer Science Department, Stanford University,\n1972.",
                "context_sentence": "Knuth [70] posed the question of whether subquadratic\nalgorithms for the LCS problem exist."
            },
            {
                "source_text": "William J. Masek and Michael S. Paterson. A faster algorithm computing string edit dis-\ntances. Journal of Computer and System Sciences, 20(1):18\u201331, 1980.\n\n1244\nBibliography",
                "context_sentence": "Masek and Paterson [244] answered this\nquestion in the af\ufb01rmative by giving an algorithm that runs in O.mn= lg n/ time,\nwhere n \u0002 m and the sequences are drawn from a set of bounded size."
            },
            {
                "source_text": "T. G. Szymanski. A special case of the maximal common subsequence problem. Technical\nReport TR-170, Computer Science Laboratory, Princeton University, 1975.",
                "context_sentence": "For the\nspecial case in which no element appears more than once in an input sequence,\nSzymanski [326] shows how to solve the problem in O..n C m/ lg.n C m// time."
            },
            {
                "source_text": "E. N. Gilbert and E. F. Moore. Variable-length binary encodings. Bell System Technical\nJournal, 38(4):933\u2013967, 1959.",
                "context_sentence": "An early paper on variable-length binary encodings by Gilbert and Moore [133]\nhad applications to constructing optimal binary search trees for the case in which all\nprobabilities pi are 0; this paper contains an O.n3/-time algorithm."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft,\nand Ullman [5] present the algorithm from Section 15.5."
            },
            {
                "source_text": "T. C. Hu and A. C. Tucker. Optimal computer search trees and variable-length alphabetic\ncodes. SIAM Journal on Applied Mathematics, 21(4):514\u2013532, 1971.",
                "context_sentence": "Hu and Tucker [184] devised an algorithm for the case in which all\nprobabilities pi are 0 that uses O.n2/ time and O.n/ space; subsequently, Knuth\n[211] reduced the time to O.n lg n/."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "Hu and Tucker [184] devised an algorithm for the case in which all\nprobabilities pi are 0 that uses O.n2/ time and O.n/ space; subsequently, Knuth\n[211] reduced the time to O.n lg n/."
            },
            {
                "source_text": "Shai Avidan and Ariel Shamir. Seam carving for content-aware image resizing. ACM Trans-\nactions on Graphics, 26(3), article 10, 2007.",
                "context_sentence": "Problem 15-8 is due to Avidan and Shamir [27], who have posted on the Web a\nwonderful video illustrating this image-compression technique."
            }
        ]
    },
    "16 Greedy Algorithms": {
        "details": {
            "level": 2,
            "start_page": 435,
            "end_page": 472,
            "text_content_snippet": "16\nGreedy Algorithms\nAlgorithms for optimization problems typically go through a sequence of steps,\nwith a set of choices at each step. For many optimization problems, using dynamic\nprogramming to determine the best choices is overkill; simpler, more ef\ufb01cient al-\ngorithms will do. A greedy algorithm always makes the choice that looks best at\nthe moment. That is, it makes a locally optimal choice in the hope that this choice\nwill lead to a globally optimal solution. This chapter explores optimiza..."
        },
        "sources": [
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "450\nChapter 16\nGreedy Algorithms\nChapter notes\nMuch more material on greedy algorithms and matroids can be found in Lawler\n[224] and Papadimitriou and Steiglitz [271]."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "450\nChapter 16\nGreedy Algorithms\nChapter notes\nMuch more material on greedy algorithms and matroids can be found in Lawler\n[224] and Papadimitriou and Steiglitz [271]."
            },
            {
                "source_text": "Jack Edmonds. Matroids and the greedy algorithm. Mathematical Programming, 1(1):127\u2013\n136, 1971.",
                "context_sentence": "The greedy algorithm \ufb01rst appeared in the combinatorial optimization literature\nin a 1971 article by Edmonds [101], though the theory of matroids dates back to\na 1935 article by Whitney [355]."
            },
            {
                "source_text": "Hassler Whitney. On the abstract properties of linear dependence. American Journal of\nMathematics, 57(3):509\u2013533, 1935.",
                "context_sentence": "The greedy algorithm \ufb01rst appeared in the combinatorial optimization literature\nin a 1971 article by Edmonds [101], though the theory of matroids dates back to\na 1935 article by Whitney [355]."
            },
            {
                "source_text": "F\u02d8anic\u02d8a Gavril. Algorithms for minimum coloring, maximum clique, minimum covering by\ncliques, and maximum independent set of a chordal graph. SIAM Journal on Computing,\n1(2):180\u2013187, 1972.",
                "context_sentence": "Our proof of the correctness of the greedy algorithm for the activity-selection\nproblem is based on that of Gavril [131]."
            },
            {
                "source_text": "Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran. Computer Algorithms. Com-\nputer Science Press, 1998.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "The task-scheduling problem is studied\nin Lawler [224]; Horowitz, Sahni, and Rajasekaran [181]; and Brassard and Bratley\n[54]."
            },
            {
                "source_text": "David A. Huffman. A method for the construction of minimum-redundancy codes. Pro-\nceedings of the IRE, 40(9):1098\u20131101, 1952.",
                "context_sentence": "Huffman codes were invented in 1952 [185]; Lelewer and Hirschberg [231] sur-\nveys data-compression techniques known as of 1987."
            },
            {
                "source_text": "Debra A. Lelewer and Daniel S. Hirschberg. Data compression. ACM Computing Surveys,\n19(3):261\u2013296, 1987.",
                "context_sentence": "Huffman codes were invented in 1952 [185]; Lelewer and Hirschberg [231] sur-\nveys data-compression techniques known as of 1987."
            }
        ]
    },
    "17 Amortized Analysis": {
        "details": {
            "level": 2,
            "start_page": 472,
            "end_page": 501,
            "text_content_snippet": "17\nAmortized Analysis\nIn an amortized analysis, we average the time required to perform a sequence of\ndata-structure operations over all the operations performed. With amortized analy-\nsis, we can show that the average cost of an operation is small, if we average over a\nsequence of operations, even though a single operation within the sequence might\nbe expensive. Amortized analysis differs from average-case analysis in that prob-\nability is not involved; an amortized analysis guarantees the aver..."
        },
        "sources": [
            {
                "source_text": "Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Mathe-\nmatics, 160(2):781\u2013793, 2004.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "478\nChapter 17\nAmortized Analysis\nChapter notes\nAho, Hopcroft, and Ullman [5] used aggregate analysis to determine the running\ntime of operations on a disjoint-set forest; we shall analyze this data structure us-\ning the potential method in Chapter 21."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "The next bit up, A\u01521\u0002, \ufb02ips only every other time: a sequence of n INCREMENT\n\n17.1\nAggregate analysis\n455\n0 0 0 0 0 0 0 0\n0\n0 0 0 0 0 0 0 1\n1\n0 0 0 0 0 0 1 0\n2\n0 0 0 0 0 0 1 1\n3\n0 0 0 0 0 1 0 0\n4\n0 0 0 0 0 1 0 1\n5\n0 0 0 0 0 1 1 0\n6\n0 0 0 0 0 1 1 1\n7\n0 0 0 0 1 0 0 0\n8\n0 0 0 0 1 0 0 1\n9\n0 0 0 0 1 0 1 0\n10\n0 0 0 0 1 0 1 1\n11\n0 0 0 0 1 1 0 0\n12\n0 0 0 0 1 1 0 1\n13\n0 0 0 0 1 1 1 0\n14\n0 0 0 0 1 1 1 1\n15\n0 0 0 1 0 0 0 0\n16\nA[0]\nA[1]\nA[2]\nA[3]\nA[4]\nA[5]\nA[6]\nA[7]\nCounter\nvalue\nTotal\ncost\n1\n3\n4\n7\n8\n10\n11\n15\n16\n18\n19\n22\n23\n25\n26\n31\n0\nFigure 17.2\nAn 8-bit binary counter as its value goes from 0 to 16 by a sequence of 16 INCREMENT\noperations."
            },
            {
                "source_text": "Robert E. Tarjan. Amortized computational complexity. SIAM Journal on Algebraic and\nDiscrete Methods, 6(2):306\u2013318, 1985.",
                "context_sentence": "Tarjan [331] surveys the accounting and\npotential methods of amortized analysis and presents several applications."
            },
            {
                "source_text": "Thomas H. Cormen, Thomas Sundquist, and Leonard F. Wisniewski. Asymptotically tight\nbounds for performing BMMC permutations on parallel disk systems. SIAM Journal on\nComputing, 28(1):105\u2013136, 1998.",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "Robert W. Floyd. Permuting information in idealized two-level storage. In Raymond E.\nMiller and James W. Thatcher, editors, Complexity of Computer Computations, pages 105\u2013\n109. Plenum Press, 1972.\n\nBibliography\n1237",
                "context_sentence": "Examples of potential functions to\nprove lower bounds in I/O complexity appear in works by Cormen, Sundquist, and\nWisniewski [79]; Floyd [107]; and Aggarwal and Vitter [3]."
            },
            {
                "source_text": "David W. Krumme, George Cybenko, and K. N. Venkataraman. Gossiping in minimal time.\nSIAM Journal on Computing, 21(1):111\u2013139, 1992.",
                "context_sentence": "Krumme, Cybenko,\nand Venkataraman [221] applied potential functions to prove lower bounds on gos-\nsiping: communicating a unique item from each vertex in a graph to every other\nvertex."
            }
        ]
    },
    "V Advanced Data Structures": {
        "details": {
            "level": 1,
            "start_page": 501,
            "end_page": 607,
            "text_content_snippet": "V\nAdvanced Data Structures\n\nIntroduction\nThis part returns to studying data structures that support operations on dynamic\nsets, but at a more advanced level than Part III. Two of the chapters, for example,\nmake extensive use of the amortized analysis techniques we saw in Chapter 17.\nChapter 18 presents B-trees, which are balanced search trees speci\ufb01cally de-\nsigned to be stored on disks.\nBecause disks operate much more slowly than\nrandom-access memory, we measure the performance of B-trees not o..."
        },
        "sources": [
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. A data structure for dynamic trees. Journal of\nComputer and System Sciences, 26(3):362\u2013391, 1983.\n\n1248\nBibliography",
                "context_sentence": "Other advanced data structures include the following:\n\u0002\nDynamic trees, introduced by Sleator and Tarjan [319] and discussed by Tarjan\n[330], maintain a forest of disjoint rooted trees."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "\u0002\nSplay trees, developed by Sleator and Tarjan [320] and, again, discussed by\nTarjan [330], are a form of binary search tree on which the standard search-\ntree operations run in O.lg n/ amortized time."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Other advanced data structures include the following:\n\u0002\nDynamic trees, introduced by Sleator and Tarjan [319] and discussed by Tarjan\n[330], maintain a forest of disjoint rooted trees."
            },
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. Self-adjusting binary search trees. Journal of the\nACM, 32(3):652\u2013686, 1985.",
                "context_sentence": "\u0002\nSplay trees, developed by Sleator and Tarjan [320] and, again, discussed by\nTarjan [330], are a form of binary search tree on which the standard search-\ntree operations run in O.lg n/ amortized time."
            },
            {
                "source_text": "James R. Driscoll, Neil Sarnak, Daniel D. Sleator, and Robert E. Tarjan.\nMaking data\nstructures persistent. Journal of Computer and System Sciences, 38(1):86\u2013124, 1989.",
                "context_sentence": "Driscoll, Sarnak, Sleator, and Tarjan [97] present\ntechniques for making linked data structures persistent with only a small time\n\nPart V\nAdvanced Data Structures\n483\nand space cost."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "Fredman and Willard introduced fusion trees [115], which were the \ufb01rst data\nstructure to allow faster dictionary operations when the universe is restricted to\nintegers."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "Several subsequent data structures, including exponential search trees\n[16], have also given improved bounds on some or all of the dictionary opera-\ntions and are mentioned in the chapter notes throughout this book."
            },
            {
                "source_text": "Monika R. Henzinger, Satish Rao, and Harold N. Gabow. Computing vertex connectivity:\nNew bounds from old techniques. Journal of Algorithms, 34(2):222\u2013250, 2000.",
                "context_sentence": "Examples of the queries that they support include vertex connectivity\n[166], edge connectivity, minimum spanning trees [165], biconnectivity, and\ntransitive closure [164]."
            },
            {
                "source_text": "Monika R. Henzinger and Valerie King. Randomized fully dynamic graph algorithms with\npolylogarithmic time per operation. Journal of the ACM, 46(4):502\u2013516, 1999.",
                "context_sentence": "Examples of the queries that they support include vertex connectivity\n[166], edge connectivity, minimum spanning trees [165], biconnectivity, and\ntransitive closure [164]."
            },
            {
                "source_text": "Monika R. Henzinger and Valerie King. Fully dynamic biconnectivity and transitive clo-\nsure. In Proceedings of the 36th Annual Symposium on Foundations of Computer Science,\npages 664\u2013672, 1995.",
                "context_sentence": "Examples of the queries that they support include vertex connectivity\n[166], edge connectivity, minimum spanning trees [165], biconnectivity, and\ntransitive closure [164]."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "Robert Sedgewick. Algorithms. Addison-Wesley, second edition, 1988.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "D. Comer. The ubiquitous B-tree. ACM Computing Surveys, 11(2):121\u2013137, 1979.",
                "context_sentence": "Comer [74] provides a compre-\nhensive survey of B-trees."
            },
            {
                "source_text": "Leo J. Guibas and Robert Sedgewick. A dichromatic framework for balanced trees. In\nProceedings of the 19th Annual Symposium on Foundations of Computer Science, pages\n8\u201321, 1978.",
                "context_sentence": "Guibas and Sedgewick [155] discuss the relationships\namong various kinds of balanced-tree schemes, including red-black trees and 2-3-4\ntrees."
            },
            {
                "source_text": "R. Bayer and E. M. McCreight. Organization and maintenance of large ordered indexes.\nActa Informatica, 1(3):173\u2013189, 1972.",
                "context_sentence": "Bayer and\nMcCreight [35] introduced B-trees in 1972; they did not explain their choice of\nname."
            },
            {
                "source_text": "Michael A. Bender, Erik D. Demaine, and Martin Farach-Colton. Cache-oblivious B-trees.\nIn Proceedings of the 41st Annual Symposium on Foundations of Computer Science, pages\n399\u2013409, 2000.",
                "context_sentence": "Bender, Demaine, and Farach-Colton [40] studied how to make B-trees perform\nwell in the presence of memory-hierarchy effects."
            },
            {
                "source_text": "Michael L. Fredman and Robert E. Tarjan. Fibonacci heaps and their uses in improved\nnetwork optimization algorithms. Journal of the ACM, 34(3):596\u2013615, 1987.",
                "context_sentence": "Chapter notes\nFredman and Tarjan [114] introduced Fibonacci heaps."
            },
            {
                "source_text": "James R. Driscoll, Harold N. Gabow, Ruth Shrairman, and Robert E. Tarjan. Relaxed heaps:\nAn alternative to Fibonacci heaps with applications to parallel computation. Communica-\ntions of the ACM, 31(11):1343\u20131354, 1988.",
                "context_sentence": "Subsequently, Driscoll, Gabow, Shrairman, and Tarjan [96] developed \u201crelaxed\nheaps\u201d as an alternative to Fibonacci heaps."
            },
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time. In Proceedings\nof the 16th Annual Symposium on Foundations of Computer Science, pages 75\u201384, 1975.\n\nBibliography\n1249",
                "context_sentence": "van Emde Boas, who described\nan early form of the idea in 1975 [339]."
            },
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time and linear\nspace. Information Processing Letters, 6(3):80\u201382, 1977.",
                "context_sentence": "Later papers by van Emde Boas [340]\nand van Emde Boas, Kaas, and Zijlstra [341] re\ufb01ned the idea and the exposition."
            },
            {
                "source_text": "P. van Emde Boas, R. Kaas, and E. Zijlstra. Design and implementation of an ef\ufb01cient\npriority queue. Mathematical Systems Theory, 10(1):99\u2013127, 1976.",
                "context_sentence": "Later papers by van Emde Boas [340]\nand van Emde Boas, Kaas, and Zijlstra [341] re\ufb01ned the idea and the exposition."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. Bounded ordered dictionaries in O.log log N/ time and\nO.n/ space. Information Processing Letters, 35(4):183\u2013189, 1990.",
                "context_sentence": "Mehlhorn and N\u00a8aher [252] subsequently extended the ideas to apply to universe\n\n560\nChapter 20\nvan Emde Boas Trees\nsizes that are prime."
            },
            {
                "source_text": "Kurt Mehlhorn.\nSorting and Searching, volume 1 of Data Structures and Algorithms.\nSpringer, 1984.",
                "context_sentence": "Mehlhorn\u2019s book [249] contains a slightly different treatment\nof van Emde Boas trees than the one in this chapter."
            },
            {
                "source_text": "Roman Dementiev, Lutz Kettner, Jens Mehnert, and Peter Sanders. Engineering a sorted list\ndata structure for 32 bit keys. In Proceedings of the Sixth Workshop on Algorithm Engineer-\ning and Experiments and the First Workshop on Analytic Algorithmics and Combinatorics,\npages 142\u2013151, January 2004.",
                "context_sentence": "[83] developed\na nonrecursive, three-level search tree that ran faster than van Emde Boas trees in\ntheir own experiments."
            },
            {
                "source_text": "Hao Wang and Bill Lin. Pipelined van Emde Boas tree: Algorithms, analysis, and ap-\nplications. In 26th IEEE International Conference on Computer Communications, pages\n2471\u20132475, 2007.",
                "context_sentence": "Wang and Lin [347] designed a hardware-pipelined version of van Emde Boas\ntrees, which achieves constant amortized time per operation and uses O.lg lg u/\nstages in the pipeline."
            },
            {
                "source_text": "Robert E. Tarjan. Class notes: Disjoint set union. COS 423, Princeton University, 1999.",
                "context_sentence": "The treatment in Section 21.4\nis adapted from a later analysis by Tarjan [332], which is in turn based on an anal-\nysis by Kozen [220]."
            },
            {
                "source_text": "Dexter C. Kozen. The Design and Analysis of Algorithms. Springer, 1992.",
                "context_sentence": "The treatment in Section 21.4\nis adapted from a later analysis by Tarjan [332], which is in turn based on an anal-\nysis by Kozen [220]."
            },
            {
                "source_text": "Gregory C. Harfst and Edward M. Reingold. A potential-based amortized analysis of the\nunion-\ufb01nd data structure. SIGACT News, 31(3):86\u201395, 2000.",
                "context_sentence": "Harfst and Reingold [161] give a potential-based version of\nTarjan\u2019s earlier bound."
            },
            {
                "source_text": "Gregory C. Harfst and Edward M. Reingold. A potential-based amortized analysis of the\nunion-\ufb01nd data structure. SIGACT News, 31(3):86\u201395, 2000.",
                "context_sentence": "Harfst and Reingold [161] later showed how to make a small change\nto the potential function to adapt their path-compression analysis to these one-pass\nvariants."
            },
            {
                "source_text": "Robert E. Tarjan and Jan van Leeuwen. Worst-case analysis of set union algorithms. Jour-\nnal of the ACM, 31(2):245\u2013281, 1984.",
                "context_sentence": "Tarjan and van Leeuwen [333] discuss variants on the path-compression heuris-\ntic, including \u201cone-pass methods,\u201d which sometimes offer better constant factors\nin their performance than do two-pass methods."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. A linear-time algorithm for a special case of disjoint\nset union. Journal of Computer and System Sciences, 30(2):209\u2013221, 1985.",
                "context_sentence": "Gabow and Tarjan [121] show that in certain applications, the disjoint-set\noperations can be made to run in O.m/ time."
            },
            {
                "source_text": "Robert E. Tarjan. A class of algorithms which require nonlinear time to maintain disjoint\nsets. Journal of Computer and System Sciences, 18(2):110\u2013127, 1979.",
                "context_sentence": "Tarjan [329] showed that a lower bound of \u0004.m y\u02db.m; n// time is required for\noperations on any disjoint-set data structure satisfying certain technical conditions."
            },
            {
                "source_text": "Michael L. Fredman and Michael E. Saks. The cell probe complexity of dynamic data struc-\ntures. In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing,\npages 345\u2013354, 1989.",
                "context_sentence": "This lower bound was later generalized by Fredman and Saks [113], who showed\nthat in the worst case, \u0004.m y\u02db.m; n// .lg n/-bit words of memory must be accessed."
            }
        ]
    },
    "18 B-Trees": {
        "details": {
            "level": 2,
            "start_page": 505,
            "end_page": 526,
            "text_content_snippet": "18\nB-Trees\nB-trees are balanced search trees designed to work well on disks or other direct-\naccess secondary storage devices. B-trees are similar to red-black trees (Chap-\nter 13), but they are better at minimizing disk I/O operations. Many database sys-\ntems use B-trees, or variants of B-trees, to store information.\nB-trees differ from red-black trees in that B-tree nodes may have many children,\nfrom a few to thousands. That is, the \u201cbranching factor\u201d of a B-tree can be quite\nlarge, although i..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "Robert Sedgewick. Algorithms. Addison-Wesley, second edition, 1988.",
                "context_sentence": "(Hint: The costs for joining should tele-\nscope.)\nChapter notes\nKnuth [211], Aho, Hopcroft, and Ullman [5], and Sedgewick [306] give further\ndiscussions of balanced-tree schemes and B-trees."
            },
            {
                "source_text": "D. Comer. The ubiquitous B-tree. ACM Computing Surveys, 11(2):121\u2013137, 1979.",
                "context_sentence": "Comer [74] provides a compre-\nhensive survey of B-trees."
            },
            {
                "source_text": "Leo J. Guibas and Robert Sedgewick. A dichromatic framework for balanced trees. In\nProceedings of the 19th Annual Symposium on Foundations of Computer Science, pages\n8\u201321, 1978.",
                "context_sentence": "Guibas and Sedgewick [155] discuss the relationships\namong various kinds of balanced-tree schemes, including red-black trees and 2-3-4\ntrees."
            },
            {
                "source_text": "R. Bayer and E. M. McCreight. Organization and maintenance of large ordered indexes.\nActa Informatica, 1(3):173\u2013189, 1972.",
                "context_sentence": "Bayer and\nMcCreight [35] introduced B-trees in 1972; they did not explain their choice of\nname."
            },
            {
                "source_text": "Michael A. Bender, Erik D. Demaine, and Martin Farach-Colton. Cache-oblivious B-trees.\nIn Proceedings of the 41st Annual Symposium on Foundations of Computer Science, pages\n399\u2013409, 2000.",
                "context_sentence": "Bender, Demaine, and Farach-Colton [40] studied how to make B-trees perform\nwell in the presence of memory-hierarchy effects."
            }
        ]
    },
    "19 Fibonacci Heaps": {
        "details": {
            "level": 2,
            "start_page": 526,
            "end_page": 552,
            "text_content_snippet": "19\nFibonacci Heaps\nThe Fibonacci heap data structure serves a dual purpose. First, it supports a set of\noperations that constitutes what is known as a \u201cmergeable heap.\u201d Second, several\nFibonacci-heap operations run in constant amortized time, which makes this data\nstructure well suited for applications that invoke these operations frequently.\nMergeable heaps\nA mergeable heap is any data structure that supports the following \ufb01ve operations,\nin which each element has a key:\nMAKE-HEAP./ creates and..."
        },
        "sources": [
            {
                "source_text": "Michael L. Fredman and Robert E. Tarjan. Fibonacci heaps and their uses in improved\nnetwork optimization algorithms. Journal of the ACM, 34(3):596\u2013615, 1987.",
                "context_sentence": "Chapter notes\nFredman and Tarjan [114] introduced Fibonacci heaps."
            },
            {
                "source_text": "James R. Driscoll, Harold N. Gabow, Ruth Shrairman, and Robert E. Tarjan. Relaxed heaps:\nAn alternative to Fibonacci heaps with applications to parallel computation. Communica-\ntions of the ACM, 31(11):1343\u20131354, 1988.",
                "context_sentence": "Subsequently, Driscoll, Gabow, Shrairman, and Tarjan [96] developed \u201crelaxed\nheaps\u201d as an alternative to Fibonacci heaps."
            }
        ]
    },
    "20 van Emde Boas Trees": {
        "details": {
            "level": 2,
            "start_page": 552,
            "end_page": 582,
            "text_content_snippet": "20\nvan Emde Boas Trees\nIn previous chapters, we saw data structures that support the operations of a priority\nqueue\u2014binary heaps in Chapter 6, red-black trees in Chapter 13,1 and Fibonacci\nheaps in Chapter 19. In each of these data structures, at least one important op-\neration took O.lg n/ time, either worst case or amortized. In fact, because each\nof these data structures bases its decisions on comparing keys, the \u0004.n lg n/ lower\nbound for sorting in Section 8.1 tells us that at least one oper..."
        },
        "sources": [
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time. In Proceedings\nof the 16th Annual Symposium on Foundations of Computer Science, pages 75\u201384, 1975.\n\nBibliography\n1249",
                "context_sentence": "van Emde Boas, who described\nan early form of the idea in 1975 [339]."
            },
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time and linear\nspace. Information Processing Letters, 6(3):80\u201382, 1977.",
                "context_sentence": "Later papers by van Emde Boas [340]\nand van Emde Boas, Kaas, and Zijlstra [341] re\ufb01ned the idea and the exposition."
            },
            {
                "source_text": "P. van Emde Boas, R. Kaas, and E. Zijlstra. Design and implementation of an ef\ufb01cient\npriority queue. Mathematical Systems Theory, 10(1):99\u2013127, 1976.",
                "context_sentence": "Later papers by van Emde Boas [340]\nand van Emde Boas, Kaas, and Zijlstra [341] re\ufb01ned the idea and the exposition."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. Bounded ordered dictionaries in O.log log N/ time and\nO.n/ space. Information Processing Letters, 35(4):183\u2013189, 1990.",
                "context_sentence": "Mehlhorn and N\u00a8aher [252] subsequently extended the ideas to apply to universe\n\n560\nChapter 20\nvan Emde Boas Trees\nsizes that are prime."
            },
            {
                "source_text": "Kurt Mehlhorn.\nSorting and Searching, volume 1 of Data Structures and Algorithms.\nSpringer, 1984.",
                "context_sentence": "Mehlhorn\u2019s book [249] contains a slightly different treatment\nof van Emde Boas trees than the one in this chapter."
            },
            {
                "source_text": "Roman Dementiev, Lutz Kettner, Jens Mehnert, and Peter Sanders. Engineering a sorted list\ndata structure for 32 bit keys. In Proceedings of the Sixth Workshop on Algorithm Engineer-\ning and Experiments and the First Workshop on Analytic Algorithmics and Combinatorics,\npages 142\u2013151, January 2004.",
                "context_sentence": "[83] developed\na nonrecursive, three-level search tree that ran faster than van Emde Boas trees in\ntheir own experiments."
            },
            {
                "source_text": "Hao Wang and Bill Lin. Pipelined van Emde Boas tree: Algorithms, analysis, and ap-\nplications. In 26th IEEE International Conference on Computer Communications, pages\n2471\u20132475, 2007.",
                "context_sentence": "Wang and Lin [347] designed a hardware-pipelined version of van Emde Boas\ntrees, which achieves constant amortized time per operation and uses O.lg lg u/\nstages in the pipeline."
            }
        ]
    },
    "21 Data Structures for Disjoint Sets": {
        "details": {
            "level": 2,
            "start_page": 582,
            "end_page": 607,
            "text_content_snippet": "21\nData Structures for Disjoint Sets\nSome applications involve grouping n distinct elements into a collection of disjoint\nsets. These applications often need to perform two operations in particular: \ufb01nding\nthe unique set that contains a given element and uniting two sets. This chapter\nexplores methods for maintaining a data structure that supports these operations.\nSection 21.1 describes the operations supported by a disjoint-set data structure\nand presents a simple application. In Section 21.2,..."
        },
        "sources": [
            {
                "source_text": "Robert E. Tarjan. Class notes: Disjoint set union. COS 423, Princeton University, 1999.",
                "context_sentence": "The treatment in Section 21.4\nis adapted from a later analysis by Tarjan [332], which is in turn based on an anal-\nysis by Kozen [220]."
            },
            {
                "source_text": "Dexter C. Kozen. The Design and Analysis of Algorithms. Springer, 1992.",
                "context_sentence": "The treatment in Section 21.4\nis adapted from a later analysis by Tarjan [332], which is in turn based on an anal-\nysis by Kozen [220]."
            },
            {
                "source_text": "Gregory C. Harfst and Edward M. Reingold. A potential-based amortized analysis of the\nunion-\ufb01nd data structure. SIGACT News, 31(3):86\u201395, 2000.",
                "context_sentence": "Harfst and Reingold [161] give a potential-based version of\nTarjan\u2019s earlier bound."
            },
            {
                "source_text": "Gregory C. Harfst and Edward M. Reingold. A potential-based amortized analysis of the\nunion-\ufb01nd data structure. SIGACT News, 31(3):86\u201395, 2000.",
                "context_sentence": "Harfst and Reingold [161] later showed how to make a small change\nto the potential function to adapt their path-compression analysis to these one-pass\nvariants."
            },
            {
                "source_text": "Robert E. Tarjan and Jan van Leeuwen. Worst-case analysis of set union algorithms. Jour-\nnal of the ACM, 31(2):245\u2013281, 1984.",
                "context_sentence": "Tarjan and van Leeuwen [333] discuss variants on the path-compression heuris-\ntic, including \u201cone-pass methods,\u201d which sometimes offer better constant factors\nin their performance than do two-pass methods."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. A linear-time algorithm for a special case of disjoint\nset union. Journal of Computer and System Sciences, 30(2):209\u2013221, 1985.",
                "context_sentence": "Gabow and Tarjan [121] show that in certain applications, the disjoint-set\noperations can be made to run in O.m/ time."
            },
            {
                "source_text": "Robert E. Tarjan. A class of algorithms which require nonlinear time to maintain disjoint\nsets. Journal of Computer and System Sciences, 18(2):110\u2013127, 1979.",
                "context_sentence": "Tarjan [329] showed that a lower bound of \u0004.m y\u02db.m; n// time is required for\noperations on any disjoint-set data structure satisfying certain technical conditions."
            },
            {
                "source_text": "Michael L. Fredman and Michael E. Saks. The cell probe complexity of dynamic data struc-\ntures. In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing,\npages 345\u2013354, 1989.",
                "context_sentence": "This lower bound was later generalized by Fredman and Saks [113], who showed\nthat in the worst case, \u0004.m y\u02db.m; n// .lg n/-bit words of memory must be accessed."
            }
        ]
    },
    "VI Graph Algorithms": {
        "details": {
            "level": 1,
            "start_page": 607,
            "end_page": 789,
            "text_content_snippet": "VI\nGraph Algorithms\n\nIntroduction\nGraph problems pervade computer science, and algorithms for working with them\nare fundamental to the \ufb01eld. Hundreds of interesting computational problems are\ncouched in terms of graphs. In this part, we touch on a few of the more signi\ufb01cant\nones.\nChapter 22 shows how we can represent a graph in a computer and then discusses\nalgorithms based on searching a graph using either breadth-\ufb01rst search or depth-\n\ufb01rst search. The chapter gives two applications of depth-\ufb01r..."
        },
        "sources": [
            {
                "source_text": "Shimon Even. Graph Algorithms. Computer Science Press, 1979.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Shimon Even. Graph Algorithms. Computer Science Press, 1979.",
                "context_sentence": "Chapter notes\nEven [103] and Tarjan [330] are excellent references for graph algorithms."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "MAYBE-MST-C.G; w/\n1\nT D ;\n2\nfor each edge e, taken in arbitrary order\n3\nT D T [ feg\n4\nif T has a cycle c\n5\nlet e0 be a maximum-weight edge on c\n6\nT D T \u0005 fe0g\n7\nreturn T\nChapter notes\nTarjan [330] surveys the minimum-spanning-tree problem and provides excellent\nadvanced material."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Chapter notes\nEven [103] and Tarjan [330] are excellent references for graph algorithms."
            },
            {
                "source_text": "Edward F. Moore. The shortest path through a maze. In Proceedings of the International\nSymposium on the Theory of Switching, pages 285\u2013292. Harvard University Press, 1959.",
                "context_sentence": "Breadth-\ufb01rst search was discovered by Moore [260] in the context of \ufb01nding\npaths through mazes."
            },
            {
                "source_text": "C. Y. Lee. An algorithm for path connection and its applications. IRE Transactions on\nElectronic Computers, EC-10(3):346\u2013365, 1961.",
                "context_sentence": "Lee [226] independently discovered the same algorithm in\nthe context of routing wires on circuit boards."
            },
            {
                "source_text": "John E. Hopcroft and Robert E. Tarjan. Ef\ufb01cient algorithms for graph manipulation. Com-\nmunications of the ACM, 16(6):372\u2013378, 1973.",
                "context_sentence": "Hopcroft and Tarjan [178] advocated the use of the adjacency-list representation\nover the adjacency-matrix representation for sparse graphs and were the \ufb01rst to\nrecognize the algorithmic importance of depth-\ufb01rst search."
            },
            {
                "source_text": "Robert E. Tarjan. Depth \ufb01rst search and linear graph algorithms. SIAM Journal on Com-\nputing, 1(2):146\u2013160, 1972.",
                "context_sentence": "Tarjan [327] gave a linear-time algorithm for \ufb01nding strongly connected compo-\nnents."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "The algorithm for strongly connected components in Section 22.5 is adapted\nfrom Aho, Hopcroft, and Ullman [6], who credit it to S."
            },
            {
                "source_text": "M. Sharir. A strong-connectivity algorithm and its applications in data \ufb02ow analysis. Com-\nputers and Mathematics with Applications, 7(1):67\u201372, 1981.",
                "context_sentence": "Sharir [314]."
            },
            {
                "source_text": "Harold N. Gabow. Path-based depth-\ufb01rst search for strong and biconnected components.\nInformation Processing Letters, 74(3\u20134):107\u2013114, 2000.",
                "context_sentence": "Gabow [119] also developed an algorithm for strongly con-\nnected components that is based on contracting cycles and uses two stacks to make\nit run in linear time."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] was the \ufb01rst to give a linear-time algorithm for\ntopological sorting."
            },
            {
                "source_text": "Ronald L. Graham and Pavol Hell. On the history of the minimum spanning tree problem.\nAnnals of the History of Computing, 7(1):43\u201357, 1985.",
                "context_sentence": "Graham and Hell [151] compiled a history of the minimum-\nspanning-tree problem."
            },
            {
                "source_text": "Joseph B. Kruskal, Jr. On the shortest spanning subtree of a graph and the traveling salesman\nproblem. Proceedings of the American Mathematical Society, 7(1):48\u201350, 1956.",
                "context_sentence": "Kruskal\u2019s algorithm was\nreported by Kruskal [222] in 1956."
            },
            {
                "source_text": "R. C. Prim. Shortest connection networks and some generalizations. Bell System Technical\nJournal, 36(6):1389\u20131401, 1957.",
                "context_sentence": "The algorithm commonly known as Prim\u2019s\nalgorithm was indeed invented by Prim [285], but it was also invented earlier by\nV."
            },
            {
                "source_text": "Michael L. Fredman and Robert E. Tarjan. Fibonacci heaps and their uses in improved\nnetwork optimization algorithms. Journal of the ACM, 34(3):596\u2013615, 1987.",
                "context_sentence": "For sparser graphs, using a combination of the ideas from\nPrim\u2019s algorithm, Kruskal\u2019s algorithm, and Bor\u02d9uvka\u2019s algorithm, together with ad-\nvanced data structures, Fredman and Tarjan [114] give an algorithm that runs in\nO.E lg\u0004 V / time."
            },
            {
                "source_text": "Harold N. Gabow, Z. Galil, T. Spencer, and Robert E. Tarjan. Ef\ufb01cient algorithms for \ufb01nd-\ning minimum spanning trees in undirected and directed graphs. Combinatorica, 6(2):109\u2013\n122, 1986.",
                "context_sentence": "Gabow, Galil, Spencer, and Tarjan [120] improved this algo-\nrithm to run in O.E lg lg\u0004 V / time."
            },
            {
                "source_text": "Bernard Chazelle. A minimum spanning tree algorithm with inverse-Ackermann type com-\nplexity. Journal of the ACM, 47(6):1028\u20131047, 2000.",
                "context_sentence": "Chazelle [60] gives an algorithm that runs\nin O.E y\u02db.E; V // time, where y\u02db.E; V / is the functional inverse of Ackermann\u2019s\nfunction."
            },
            {
                "source_text": "Valerie King.\nA simpler minimum spanning tree veri\ufb01cation algorithm.\nAlgorithmica,\n18(2):263\u2013270, 1997.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "J. Koml\u00b4os. Linear veri\ufb01cation for spanning trees. Combinatorica, 5(1):57\u201365, 1985.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "Brandon Dixon, Monika Rauch, and Robert E. Tarjan. Veri\ufb01cation and sensitivity analysis\nof minimum spanning trees in linear time. SIAM Journal on Computing, 21(6):1184\u20131192,\n1992.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "David R. Karger, Philip N. Klein, and Robert E. Tarjan. A randomized linear-time algorithm\nto \ufb01nd minimum spanning trees. Journal of the ACM, 42(2):321\u2013328, 1995.",
                "context_sentence": "Karger, Klein, and Tarjan [195] give a randomized\nminimum-spanning-tree algorithm that runs in O.V C E/ expected time."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Trans-dichotomous algorithms for minimum span-\nning trees and shortest paths. Journal of Computer and System Sciences, 48(3):533\u2013551,\n1994.",
                "context_sentence": "Fredman and Willard [116] showed how to \ufb01nd a minimum spanning tree in\nO.V CE/ time using a deterministic algorithm that is not comparison based."
            },
            {
                "source_text": "E. W. Dijkstra. A note on two problems in connexion with graphs. Numerische Mathematik,\n1(1):269\u2013271, 1959.\n\n1236\nBibliography",
                "context_sentence": "Chapter notes\nDijkstra\u2019s algorithm [88] appeared in 1959, but it contained no mention of a priority\nqueue."
            },
            {
                "source_text": "Richard Bellman. On a routing problem. Quarterly of Applied Mathematics, 16(1):87\u201390,\n1958.",
                "context_sentence": "The Bellman-Ford algorithm is based on separate algorithms by Bellman\n[38] and Ford [109]."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press,\n1962.",
                "context_sentence": "The Ford-Fulkerson method is due to Ford and Fulkerson [109], who originated\nthe formal study of many of the problems in the area of network \ufb02ow, including\nthe maximum-\ufb02ow and bipartite-matching problems."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press,\n1962.",
                "context_sentence": "The Bellman-Ford algorithm is based on separate algorithms by Bellman\n[38] and Ford [109]."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Lawler [224] describes the linear-time algorithm for shortest paths in\na dag, which he considers part of the folklore."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Chapter notes\nLawler [224] has a good discussion of the all-pairs shortest-paths problem, al-\nthough he does not analyze solutions for sparse graphs."
            },
            {
                "source_text": "Ravindra K. Ahuja, Kurt Mehlhorn, James B. Orlin, and Robert E. Tarjan. Faster algorithms\nfor the shortest path problem. Journal of the ACM, 37:213\u2013223, 1990.",
                "context_sentence": "Ahuja, Mehlhorn,\nOrlin, and Tarjan [8] give an algorithm that runs in O.E C V\np\nlg W / time on\ngraphs with nonnegative edge weights, where W is the largest weight of any edge\nin the graph."
            },
            {
                "source_text": "Mikkel Thorup. On RAM priority queues. SIAM Journal on Computing, 30(1):86\u2013109,\n2000.",
                "context_sentence": "The best bounds are by Thorup [337], who gives an algorithm that\nruns in O.E lg lg V / time, and by Raman [291], who gives an algorithm that runs\nin O\n\u000b\nE C V min\n\u02da\n.lg V /1=3C\u0002; .lg W /1=4C\u0002\n\f\ntime."
            },
            {
                "source_text": "Rajeev Raman. Recent results on the single-source shortest paths problem. SIGACT News,\n28(2):81\u201387, 1997.",
                "context_sentence": "The best bounds are by Thorup [337], who gives an algorithm that\nruns in O.E lg lg V / time, and by Raman [291], who gives an algorithm that runs\nin O\n\u000b\nE C V min\n\u02da\n.lg V /1=3C\u0002; .lg W /1=4C\u0002\n\f\ntime."
            },
            {
                "source_text": "Mikkel Thorup. Undirected single-source shortest paths with positive integer weights in\nlinear time. Journal of the ACM, 46(3):362\u2013394, 1999.",
                "context_sentence": "For undirected graphs with integer weights, Thorup [336] gives an O.V C E/-\ntime algorithm for single-source shortest paths."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. Faster scaling algorithms for network problems.\nSIAM Journal on Computing, 18(5):1013\u20131036, 1989.",
                "context_sentence": "For graphs with negative edge weights, an algorithm due to Gabow and Tar-\njan [122] runs in O."
            },
            {
                "source_text": "Andrew V. Goldberg. Scaling algorithms for the shortest paths problem. SIAM Journal on\nComputing, 24(3):494\u2013504, 1995.",
                "context_sentence": "p\nV E lg.V W // time, and one by Goldberg [137] runs in\nO."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Tomasz Radzik. Shortest paths algorithms:\nTheory and experimental evaluation. Mathematical Programming, 73(2):129\u2013174, 1996.",
                "context_sentence": "Cherkassky, Goldberg, and Radzik [64] conducted extensive experiments com-\nparing various shortest-path algorithms."
            },
            {
                "source_text": "Robert W. Floyd.\nAlgorithm 97 (SHORTEST PATH).\nCommunications of the ACM,\n5(6):345, 1962.",
                "context_sentence": "The Floyd-Warshall algorithm is due to\nFloyd [105], who based it on a theorem of Warshall [349] that describes how to\ncompute the transitive closure of boolean matrices."
            },
            {
                "source_text": "Stephen Warshall. A theorem on boolean matrices. Journal of the ACM, 9(1):11\u201312, 1962.",
                "context_sentence": "The Floyd-Warshall algorithm is due to\nFloyd [105], who based it on a theorem of Warshall [349] that describes how to\ncompute the transitive closure of boolean matrices."
            },
            {
                "source_text": "Donald B. Johnson. Ef\ufb01cient algorithms for shortest paths in sparse networks. Journal of\nthe ACM, 24(1):1\u201313, 1977.",
                "context_sentence": "Johnson\u2019s algorithm is taken\nfrom [192]."
            },
            {
                "source_text": "Michael L. Fredman. New bounds on the complexity of the shortest path problem. SIAM\nJournal on Computing, 5(1):83\u201389, 1976.",
                "context_sentence": "Fredman [111] shows how to solve the all-\npairs shortest paths problem using O.V 5=2/ comparisons between sums of edge\n\nNotes for Chapter 25\n707\nweights and obtains an algorithm that runs in O.V 3.lg lg V= lg V /1=3/ time, which\nis slightly better than the running time of the Floyd-Warshall algorithm."
            },
            {
                "source_text": "Yijie Han. An O.n3.log log n= log n/5=4/ time algorithm for all pairs shortest path. Algo-\nrithmica, 51(4):428\u2013434, 2008.",
                "context_sentence": "Han [159]\nreduced the running time to O.V 3.lg lg V= lg V /5=4/."
            },
            {
                "source_text": "Don Coppersmith and Shmuel Winograd. Matrix multiplication via arithmetic progression.\nJournal of Symbolic Computation, 9(3):251\u2013280, 1990.",
                "context_sentence": "< 2:376 [78]."
            },
            {
                "source_text": "Raimund Seidel. On the all-pairs-shortest-path problem in unweighted undirected graphs.\nJournal of Computer and System Sciences, 51(3):400\u2013403, 1995.",
                "context_sentence": "Galil and Margalit [123, 124] and Seidel [308] designed algo-\nrithms that solve the all-pairs shortest paths problem in undirected, unweighted\ngraphs in .V !p.V // time, where p.n/ denotes a particular function that is poly-\nlogarithmically bounded in n."
            },
            {
                "source_text": "Avi Shoshan and Uri Zwick.\nAll pairs shortest paths in undirected graphs with integer\nweights. In Proceedings of the 40th Annual Symposium on Foundations of Computer Sci-\nence, pages 605\u2013614, 1999.",
                "context_sentence": "The asymptotically fastest such algorithm, by Shoshan and\nZwick [316], runs in time O.W V !p.V W //."
            },
            {
                "source_text": "David R. Karger, Daphne Koller, and Steven J. Phillips. Finding the hidden path: Time\nbounds for all-pairs shortest paths. SIAM Journal on Computing, 22(6):1199\u20131217, 1993.",
                "context_sentence": "Karger, Koller, and Phillips [196] and independently McGeoch [247] have given\na time bound that depends on E\u0004, the set of edges in E that participate in some\nshortest path."
            },
            {
                "source_text": "C. C. McGeoch.\nAll pairs shortest paths and the essential subgraph.\nAlgorithmica,\n13(5):426\u2013441, 1995.",
                "context_sentence": "Karger, Koller, and Phillips [196] and independently McGeoch [247] have given\na time bound that depends on E\u0004, the set of edges in E that participate in some\nshortest path."
            },
            {
                "source_text": "Surender Baswana, Ramesh Hariharan, and Sandeep Sen.\nImproved decremental algo-\nrithms for maintaining transitive closure and all-pairs shortest paths. Journal of Algorithms,\n62(2):74\u201392, 2007.",
                "context_sentence": "Baswana, Hariharan, and Sen [33] examined decremental algorithms for main-\ntaining all-pairs shortest paths and transitive-closure information."
            },
            {
                "source_text": "Camil Demetrescu and Giuseppe F. Italiano. Fully dynamic all pairs shortest paths with real\nedge weights. Journal of Computer and System Sciences, 72(5):813\u2013837, 2006.",
                "context_sentence": "Demetrescu and Italiano [84]\nshowed how to handle update and query operations when edges are both inserted\nand deleted, as long as each given edge has a bounded range of possible values\ndrawn from the real numbers."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft, and Ullman [5] de\ufb01ned an algebraic structure known as a \u201cclosed\nsemiring,\u201d which serves as a general framework for solving path problems in di-\nrected graphs."
            },
            {
                "source_text": "Bruce M. Maggs and Serge A. Plotkin.\nMinimum-cost spanning tree as a path-\ufb01nding\nproblem. Information Processing Letters, 26(6):291\u2013293, 1988.",
                "context_sentence": "Maggs and Plotkin [240] showed how to \ufb01nd minimum spanning trees\nusing a closed semiring."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Andrew V. Goldberg, \u00b4Eva Tardos, and Robert E. Tarjan. Network \ufb02ow algorithms. In Bern-\nhard Korte, L\u00b4aszl\u00b4o Lov\u00b4asz, Hans J\u00a8urgen Pr\u00a8omel, and Alexander Schrijver, editors, Paths,\nFlows, and VLSI-Layout, pages 101\u2013164. Springer, 1990.",
                "context_sentence": "Goldberg, Tardos, and Tarjan [139] also provide a nice survey of algorithms\nfor network-\ufb02ow problems, and Schrijver [304] has written an interesting review\nof historical developments in the \ufb01eld of network \ufb02ows."
            },
            {
                "source_text": "Alexander Schrijver. Paths and \ufb02ows\u2014A historical survey. CWI Quarterly, 6(3):169\u2013183,\n1993.",
                "context_sentence": "Goldberg, Tardos, and Tarjan [139] also provide a nice survey of algorithms\nfor network-\ufb02ow problems, and Schrijver [304] has written an interesting review\nof historical developments in the \ufb01eld of network \ufb02ows."
            },
            {
                "source_text": "Jack Edmonds and Richard M. Karp. Theoretical improvements in the algorithmic ef\ufb01-\nciency for network \ufb02ow problems. Journal of the ACM, 19(2):248\u2013264, 1972.",
                "context_sentence": "Many early implementations\nof the Ford-Fulkerson method found augmenting paths using breadth-\ufb01rst search;\nEdmonds and Karp [102], and independently Dinic [89], proved that this strategy\nyields a polynomial-time algorithm."
            },
            {
                "source_text": "E. A. Dinic. Algorithm for solution of a problem of maximum \ufb02ow in a network with power\nestimation. Soviet Mathematics Doklady, 11(5):1277\u20131280, 1970.",
                "context_sentence": "Many early implementations\nof the Ford-Fulkerson method found augmenting paths using breadth-\ufb01rst search;\nEdmonds and Karp [102], and independently Dinic [89], proved that this strategy\nyields a polynomial-time algorithm."
            },
            {
                "source_text": "E. A. Dinic. Algorithm for solution of a problem of maximum \ufb02ow in a network with power\nestimation. Soviet Mathematics Doklady, 11(5):1277\u20131280, 1970.",
                "context_sentence": "A related idea, that of using \u201cblocking \ufb02ows,\u201d\nwas also \ufb01rst developed by Dinic [89]."
            },
            {
                "source_text": "A. V. Karzanov. Determining the maximal \ufb02ow in a network by the method of pre\ufb02ows.\nSoviet Mathematics Doklady, 15(2):434\u2013437, 1974.\n\n1242\nBibliography",
                "context_sentence": "Karzanov [202] \ufb01rst developed the idea of\npre\ufb02ows."
            },
            {
                "source_text": "Andrew V. Goldberg. Ef\ufb01cient Graph Algorithms for Sequential and Parallel Computers.\nPhD thesis, Department of Electrical Engineering and Computer Science, MIT, 1987.",
                "context_sentence": "The push-relabel method is due to Goldberg [136] and Goldberg and Tar-\njan [140]."
            },
            {
                "source_text": "Andrew V. Goldberg and Robert E. Tarjan. A new approach to the maximum \ufb02ow problem.\nJournal of the ACM, 35(4):921\u2013940, 1988.",
                "context_sentence": "The push-relabel method is due to Goldberg [136] and Goldberg and Tar-\njan [140]."
            },
            {
                "source_text": "Ravindra K. Ahuja and James B. Orlin. A fast and simple algorithm for the maximum \ufb02ow\nproblem. Operations Research, 37(5):748\u2013759, 1989.",
                "context_sentence": "Ahuja and Orlin [9] and\nAhuja, Orlin, and Tarjan [10] gave algorithms that used scaling."
            },
            {
                "source_text": "Ravindra K. Ahuja, James B. Orlin, and Robert E. Tarjan. Improved time bounds for the\nmaximum \ufb02ow problem. SIAM Journal on Computing, 18(5):939\u2013954, 1989.",
                "context_sentence": "Ahuja and Orlin [9] and\nAhuja, Orlin, and Tarjan [10] gave algorithms that used scaling."
            },
            {
                "source_text": "Joseph Cheriyan and S. N. Maheshwari. Analysis of pre\ufb02ow push algorithms for maximum\nnetwork \ufb02ow. SIAM Journal on Computing, 18(6):1057\u20131086, 1989.",
                "context_sentence": "Cheriyan and\nMaheshwari [62] proposed pushing \ufb02ow from the over\ufb02owing vertex of maximum\nheight."
            },
            {
                "source_text": "Joseph Cheriyan and Torben Hagerup. A randomized maximum-\ufb02ow algorithm. SIAM\nJournal on Computing, 24(2):203\u2013226, 1995.",
                "context_sentence": "Cheriyan and Hagerup [61] suggested randomly permuting the neighbor\nlists, and several researchers [14, 204, 276] developed clever derandomizations of\nthis idea, leading to a sequence of faster algorithms."
            },
            {
                "source_text": "Valerie King, Satish Rao, and Robert E. Tarjan. A faster deterministic maximum \ufb02ow algo-\nrithm. Journal of Algorithms, 17(3):447\u2013474, 1994.",
                "context_sentence": "The algorithm of King, Rao,\nand Tarjan [204] is the fastest such algorithm and runs in O.VE logE=.V lg V / V /\ntime."
            },
            {
                "source_text": "Andrew V. Goldberg and Satish Rao. Beyond the \ufb02ow decomposition barrier. Journal of\nthe ACM, 45(5):783\u2013797, 1998.",
                "context_sentence": "The asymptotically fastest algorithm to date for the maximum-\ufb02ow problem, by\nGoldberg and Rao [138], runs in time O.min.V 2=3; E1=2/E lg.V 2=E C 2/ lg C/,\nwhere C D max.u;\u0005/2E c.u; \u0003/."
            },
            {
                "source_text": "Boris V. Cherkassky and Andrew V. Goldberg. On implementing the push-relabel method\nfor the maximum \ufb02ow problem. Algorithmica, 19(4):390\u2013410, 1997.",
                "context_sentence": "A study\nby Cherkassky and Goldberg [63] underscores the importance of using two heuris-\ntics when implementing a push-relabel algorithm."
            },
            {
                "source_text": "John E. Hopcroft and Richard M. Karp. An n5=2 algorithm for maximum matchings in\nbipartite graphs. SIAM Journal on Computing, 2(4):225\u2013231, 1973.",
                "context_sentence": "The best algorithm to date for maximum bipartite matching, discovered by\nHopcroft and Karp [176], runs in O."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz and M. D. Plummer. Matching Theory, volume 121 of Annals of Discrete\nMathematics. North Holland, 1986.",
                "context_sentence": "The book by Lov\u00b4asz and Plummer [239] is an excellent reference on matching\nproblems."
            }
        ]
    },
    "22 Elementary Graph Algorithms": {
        "details": {
            "level": 2,
            "start_page": 610,
            "end_page": 645,
            "text_content_snippet": "22\nElementary Graph Algorithms\nThis chapter presents methods for representing a graph and for searching a graph.\nSearching a graph means systematically following the edges of the graph so as to\nvisit the vertices of the graph. A graph-searching algorithm can discover much\nabout the structure of a graph. Many algorithms begin by searching their input\ngraph to obtain this structural information. Several other graph algorithms elabo-\nrate on basic graph searching. Techniques for searching a graph l..."
        },
        "sources": [
            {
                "source_text": "Shimon Even. Graph Algorithms. Computer Science Press, 1979.",
                "context_sentence": "Chapter notes\nEven [103] and Tarjan [330] are excellent references for graph algorithms."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Chapter notes\nEven [103] and Tarjan [330] are excellent references for graph algorithms."
            },
            {
                "source_text": "Edward F. Moore. The shortest path through a maze. In Proceedings of the International\nSymposium on the Theory of Switching, pages 285\u2013292. Harvard University Press, 1959.",
                "context_sentence": "Breadth-\ufb01rst search was discovered by Moore [260] in the context of \ufb01nding\npaths through mazes."
            },
            {
                "source_text": "C. Y. Lee. An algorithm for path connection and its applications. IRE Transactions on\nElectronic Computers, EC-10(3):346\u2013365, 1961.",
                "context_sentence": "Lee [226] independently discovered the same algorithm in\nthe context of routing wires on circuit boards."
            },
            {
                "source_text": "John E. Hopcroft and Robert E. Tarjan. Ef\ufb01cient algorithms for graph manipulation. Com-\nmunications of the ACM, 16(6):372\u2013378, 1973.",
                "context_sentence": "Hopcroft and Tarjan [178] advocated the use of the adjacency-list representation\nover the adjacency-matrix representation for sparse graphs and were the \ufb01rst to\nrecognize the algorithmic importance of depth-\ufb01rst search."
            },
            {
                "source_text": "Robert E. Tarjan. Depth \ufb01rst search and linear graph algorithms. SIAM Journal on Com-\nputing, 1(2):146\u2013160, 1972.",
                "context_sentence": "Tarjan [327] gave a linear-time algorithm for \ufb01nding strongly connected compo-\nnents."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "The algorithm for strongly connected components in Section 22.5 is adapted\nfrom Aho, Hopcroft, and Ullman [6], who credit it to S."
            },
            {
                "source_text": "M. Sharir. A strong-connectivity algorithm and its applications in data \ufb02ow analysis. Com-\nputers and Mathematics with Applications, 7(1):67\u201372, 1981.",
                "context_sentence": "Sharir [314]."
            },
            {
                "source_text": "Harold N. Gabow. Path-based depth-\ufb01rst search for strong and biconnected components.\nInformation Processing Letters, 74(3\u20134):107\u2013114, 2000.",
                "context_sentence": "Gabow [119] also developed an algorithm for strongly con-\nnected components that is based on contracting cycles and uses two stacks to make\nit run in linear time."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] was the \ufb01rst to give a linear-time algorithm for\ntopological sorting."
            }
        ]
    },
    "23 Minimum Spanning Trees": {
        "details": {
            "level": 2,
            "start_page": 645,
            "end_page": 664,
            "text_content_snippet": "23\nMinimum Spanning Trees\nElectronic circuit designs often need to make the pins of several components elec-\ntrically equivalent by wiring them together. To interconnect a set of n pins, we can\nuse an arrangement of n \u0005 1 wires, each connecting two pins. Of all such arrange-\nments, the one that uses the least amount of wire is usually the most desirable.\nWe can model this wiring problem with a connected, undirected graph G D\n.V; E/, where V is the set of pins, E is the set of possible interconne..."
        },
        "sources": [
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "MAYBE-MST-C.G; w/\n1\nT D ;\n2\nfor each edge e, taken in arbitrary order\n3\nT D T [ feg\n4\nif T has a cycle c\n5\nlet e0 be a maximum-weight edge on c\n6\nT D T \u0005 fe0g\n7\nreturn T\nChapter notes\nTarjan [330] surveys the minimum-spanning-tree problem and provides excellent\nadvanced material."
            },
            {
                "source_text": "Ronald L. Graham and Pavol Hell. On the history of the minimum spanning tree problem.\nAnnals of the History of Computing, 7(1):43\u201357, 1985.",
                "context_sentence": "Graham and Hell [151] compiled a history of the minimum-\nspanning-tree problem."
            },
            {
                "source_text": "Joseph B. Kruskal, Jr. On the shortest spanning subtree of a graph and the traveling salesman\nproblem. Proceedings of the American Mathematical Society, 7(1):48\u201350, 1956.",
                "context_sentence": "Kruskal\u2019s algorithm was\nreported by Kruskal [222] in 1956."
            },
            {
                "source_text": "R. C. Prim. Shortest connection networks and some generalizations. Bell System Technical\nJournal, 36(6):1389\u20131401, 1957.",
                "context_sentence": "The algorithm commonly known as Prim\u2019s\nalgorithm was indeed invented by Prim [285], but it was also invented earlier by\nV."
            },
            {
                "source_text": "Michael L. Fredman and Robert E. Tarjan. Fibonacci heaps and their uses in improved\nnetwork optimization algorithms. Journal of the ACM, 34(3):596\u2013615, 1987.",
                "context_sentence": "For sparser graphs, using a combination of the ideas from\nPrim\u2019s algorithm, Kruskal\u2019s algorithm, and Bor\u02d9uvka\u2019s algorithm, together with ad-\nvanced data structures, Fredman and Tarjan [114] give an algorithm that runs in\nO.E lg\u0004 V / time."
            },
            {
                "source_text": "Harold N. Gabow, Z. Galil, T. Spencer, and Robert E. Tarjan. Ef\ufb01cient algorithms for \ufb01nd-\ning minimum spanning trees in undirected and directed graphs. Combinatorica, 6(2):109\u2013\n122, 1986.",
                "context_sentence": "Gabow, Galil, Spencer, and Tarjan [120] improved this algo-\nrithm to run in O.E lg lg\u0004 V / time."
            },
            {
                "source_text": "Bernard Chazelle. A minimum spanning tree algorithm with inverse-Ackermann type com-\nplexity. Journal of the ACM, 47(6):1028\u20131047, 2000.",
                "context_sentence": "Chazelle [60] gives an algorithm that runs\nin O.E y\u02db.E; V // time, where y\u02db.E; V / is the functional inverse of Ackermann\u2019s\nfunction."
            },
            {
                "source_text": "Valerie King.\nA simpler minimum spanning tree veri\ufb01cation algorithm.\nAlgorithmica,\n18(2):263\u2013270, 1997.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "J. Koml\u00b4os. Linear veri\ufb01cation for spanning trees. Combinatorica, 5(1):57\u201365, 1985.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "Brandon Dixon, Monika Rauch, and Robert E. Tarjan. Veri\ufb01cation and sensitivity analysis\nof minimum spanning trees in linear time. SIAM Journal on Computing, 21(6):1184\u20131192,\n1992.",
                "context_sentence": "King [203] gives a linear-time algorithm to verify a spanning\ntree, building on earlier work of Koml\u00b4os [215] and Dixon, Rauch, and Tarjan [90]."
            },
            {
                "source_text": "David R. Karger, Philip N. Klein, and Robert E. Tarjan. A randomized linear-time algorithm\nto \ufb01nd minimum spanning trees. Journal of the ACM, 42(2):321\u2013328, 1995.",
                "context_sentence": "Karger, Klein, and Tarjan [195] give a randomized\nminimum-spanning-tree algorithm that runs in O.V C E/ expected time."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Trans-dichotomous algorithms for minimum span-\nning trees and shortest paths. Journal of Computer and System Sciences, 48(3):533\u2013551,\n1994.",
                "context_sentence": "Fredman and Willard [116] showed how to \ufb01nd a minimum spanning tree in\nO.V CE/ time using a deterministic algorithm that is not comparison based."
            }
        ]
    },
    "24 Single-Source Shortest Paths": {
        "details": {
            "level": 2,
            "start_page": 664,
            "end_page": 705,
            "text_content_snippet": "24\nSingle-Source Shortest Paths\nProfessor Patrick wishes to \ufb01nd the shortest possible route from Phoenix to Indi-\nanapolis. Given a road map of the United States on which the distance between\neach pair of adjacent intersections is marked, how can she determine this shortest\nroute?\nOne possible way would be to enumerate all the routes from Phoenix to Indi-\nanapolis, add up the distances on each route, and select the shortest. It is easy to\nsee, however, that even disallowing routes that contain c..."
        },
        "sources": [
            {
                "source_text": "E. W. Dijkstra. A note on two problems in connexion with graphs. Numerische Mathematik,\n1(1):269\u2013271, 1959.\n\n1236\nBibliography",
                "context_sentence": "Chapter notes\nDijkstra\u2019s algorithm [88] appeared in 1959, but it contained no mention of a priority\nqueue."
            },
            {
                "source_text": "Richard Bellman. On a routing problem. Quarterly of Applied Mathematics, 16(1):87\u201390,\n1958.",
                "context_sentence": "The Bellman-Ford algorithm is based on separate algorithms by Bellman\n[38] and Ford [109]."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press,\n1962.",
                "context_sentence": "The Bellman-Ford algorithm is based on separate algorithms by Bellman\n[38] and Ford [109]."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Lawler [224] describes the linear-time algorithm for shortest paths in\na dag, which he considers part of the folklore."
            },
            {
                "source_text": "Ravindra K. Ahuja, Kurt Mehlhorn, James B. Orlin, and Robert E. Tarjan. Faster algorithms\nfor the shortest path problem. Journal of the ACM, 37:213\u2013223, 1990.",
                "context_sentence": "Ahuja, Mehlhorn,\nOrlin, and Tarjan [8] give an algorithm that runs in O.E C V\np\nlg W / time on\ngraphs with nonnegative edge weights, where W is the largest weight of any edge\nin the graph."
            },
            {
                "source_text": "Mikkel Thorup. On RAM priority queues. SIAM Journal on Computing, 30(1):86\u2013109,\n2000.",
                "context_sentence": "The best bounds are by Thorup [337], who gives an algorithm that\nruns in O.E lg lg V / time, and by Raman [291], who gives an algorithm that runs\nin O\n\u000b\nE C V min\n\u02da\n.lg V /1=3C\u0002; .lg W /1=4C\u0002\n\f\ntime."
            },
            {
                "source_text": "Rajeev Raman. Recent results on the single-source shortest paths problem. SIGACT News,\n28(2):81\u201387, 1997.",
                "context_sentence": "The best bounds are by Thorup [337], who gives an algorithm that\nruns in O.E lg lg V / time, and by Raman [291], who gives an algorithm that runs\nin O\n\u000b\nE C V min\n\u02da\n.lg V /1=3C\u0002; .lg W /1=4C\u0002\n\f\ntime."
            },
            {
                "source_text": "Mikkel Thorup. Undirected single-source shortest paths with positive integer weights in\nlinear time. Journal of the ACM, 46(3):362\u2013394, 1999.",
                "context_sentence": "For undirected graphs with integer weights, Thorup [336] gives an O.V C E/-\ntime algorithm for single-source shortest paths."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. Faster scaling algorithms for network problems.\nSIAM Journal on Computing, 18(5):1013\u20131036, 1989.",
                "context_sentence": "For graphs with negative edge weights, an algorithm due to Gabow and Tar-\njan [122] runs in O."
            },
            {
                "source_text": "Andrew V. Goldberg. Scaling algorithms for the shortest paths problem. SIAM Journal on\nComputing, 24(3):494\u2013504, 1995.",
                "context_sentence": "p\nV E lg.V W // time, and one by Goldberg [137] runs in\nO."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Tomasz Radzik. Shortest paths algorithms:\nTheory and experimental evaluation. Mathematical Programming, 73(2):129\u2013174, 1996.",
                "context_sentence": "Cherkassky, Goldberg, and Radzik [64] conducted extensive experiments com-\nparing various shortest-path algorithms."
            }
        ]
    },
    "25 All-Pairs Shortest Paths": {
        "details": {
            "level": 2,
            "start_page": 705,
            "end_page": 729,
            "text_content_snippet": "25\nAll-Pairs Shortest Paths\nIn this chapter, we consider the problem of \ufb01nding shortest paths between all pairs\nof vertices in a graph. This problem might arise in making a table of distances be-\ntween all pairs of cities for a road atlas. As in Chapter 24, we are given a weighted,\ndirected graph G D .V; E/ with a weight function w W E ! R that maps edges\nto real-valued weights. We wish to \ufb01nd, for every pair of vertices u; \u0003 2 V , a\nshortest (least-weight) path from u to \u0003, where the weight of ..."
        },
        "sources": [
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Chapter notes\nLawler [224] has a good discussion of the all-pairs shortest-paths problem, al-\nthough he does not analyze solutions for sparse graphs."
            },
            {
                "source_text": "Robert W. Floyd.\nAlgorithm 97 (SHORTEST PATH).\nCommunications of the ACM,\n5(6):345, 1962.",
                "context_sentence": "The Floyd-Warshall algorithm is due to\nFloyd [105], who based it on a theorem of Warshall [349] that describes how to\ncompute the transitive closure of boolean matrices."
            },
            {
                "source_text": "Stephen Warshall. A theorem on boolean matrices. Journal of the ACM, 9(1):11\u201312, 1962.",
                "context_sentence": "The Floyd-Warshall algorithm is due to\nFloyd [105], who based it on a theorem of Warshall [349] that describes how to\ncompute the transitive closure of boolean matrices."
            },
            {
                "source_text": "Donald B. Johnson. Ef\ufb01cient algorithms for shortest paths in sparse networks. Journal of\nthe ACM, 24(1):1\u201313, 1977.",
                "context_sentence": "Johnson\u2019s algorithm is taken\nfrom [192]."
            },
            {
                "source_text": "Michael L. Fredman. New bounds on the complexity of the shortest path problem. SIAM\nJournal on Computing, 5(1):83\u201389, 1976.",
                "context_sentence": "Fredman [111] shows how to solve the all-\npairs shortest paths problem using O.V 5=2/ comparisons between sums of edge\n\nNotes for Chapter 25\n707\nweights and obtains an algorithm that runs in O.V 3.lg lg V= lg V /1=3/ time, which\nis slightly better than the running time of the Floyd-Warshall algorithm."
            },
            {
                "source_text": "Yijie Han. An O.n3.log log n= log n/5=4/ time algorithm for all pairs shortest path. Algo-\nrithmica, 51(4):428\u2013434, 2008.",
                "context_sentence": "Han [159]\nreduced the running time to O.V 3.lg lg V= lg V /5=4/."
            },
            {
                "source_text": "Don Coppersmith and Shmuel Winograd. Matrix multiplication via arithmetic progression.\nJournal of Symbolic Computation, 9(3):251\u2013280, 1990.",
                "context_sentence": "< 2:376 [78]."
            },
            {
                "source_text": "Raimund Seidel. On the all-pairs-shortest-path problem in unweighted undirected graphs.\nJournal of Computer and System Sciences, 51(3):400\u2013403, 1995.",
                "context_sentence": "Galil and Margalit [123, 124] and Seidel [308] designed algo-\nrithms that solve the all-pairs shortest paths problem in undirected, unweighted\ngraphs in .V !p.V // time, where p.n/ denotes a particular function that is poly-\nlogarithmically bounded in n."
            },
            {
                "source_text": "Avi Shoshan and Uri Zwick.\nAll pairs shortest paths in undirected graphs with integer\nweights. In Proceedings of the 40th Annual Symposium on Foundations of Computer Sci-\nence, pages 605\u2013614, 1999.",
                "context_sentence": "The asymptotically fastest such algorithm, by Shoshan and\nZwick [316], runs in time O.W V !p.V W //."
            },
            {
                "source_text": "David R. Karger, Daphne Koller, and Steven J. Phillips. Finding the hidden path: Time\nbounds for all-pairs shortest paths. SIAM Journal on Computing, 22(6):1199\u20131217, 1993.",
                "context_sentence": "Karger, Koller, and Phillips [196] and independently McGeoch [247] have given\na time bound that depends on E\u0004, the set of edges in E that participate in some\nshortest path."
            },
            {
                "source_text": "C. C. McGeoch.\nAll pairs shortest paths and the essential subgraph.\nAlgorithmica,\n13(5):426\u2013441, 1995.",
                "context_sentence": "Karger, Koller, and Phillips [196] and independently McGeoch [247] have given\na time bound that depends on E\u0004, the set of edges in E that participate in some\nshortest path."
            },
            {
                "source_text": "Surender Baswana, Ramesh Hariharan, and Sandeep Sen.\nImproved decremental algo-\nrithms for maintaining transitive closure and all-pairs shortest paths. Journal of Algorithms,\n62(2):74\u201392, 2007.",
                "context_sentence": "Baswana, Hariharan, and Sen [33] examined decremental algorithms for main-\ntaining all-pairs shortest paths and transitive-closure information."
            },
            {
                "source_text": "Camil Demetrescu and Giuseppe F. Italiano. Fully dynamic all pairs shortest paths with real\nedge weights. Journal of Computer and System Sciences, 72(5):813\u2013837, 2006.",
                "context_sentence": "Demetrescu and Italiano [84]\nshowed how to handle update and query operations when edges are both inserted\nand deleted, as long as each given edge has a bounded range of possible values\ndrawn from the real numbers."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Aho, Hopcroft, and Ullman [5] de\ufb01ned an algebraic structure known as a \u201cclosed\nsemiring,\u201d which serves as a general framework for solving path problems in di-\nrected graphs."
            },
            {
                "source_text": "Bruce M. Maggs and Serge A. Plotkin.\nMinimum-cost spanning tree as a path-\ufb01nding\nproblem. Information Processing Letters, 26(6):291\u2013293, 1988.",
                "context_sentence": "Maggs and Plotkin [240] showed how to \ufb01nd minimum spanning trees\nusing a closed semiring."
            }
        ]
    },
    "26 Maximum Flow": {
        "details": {
            "level": 2,
            "start_page": 729,
            "end_page": 789,
            "text_content_snippet": "26\nMaximum Flow\nJust as we can model a road map as a directed graph in order to \ufb01nd the shortest\npath from one point to another, we can also interpret a directed graph as a \u201c\ufb02ow\nnetwork\u201d and use it to answer questions about material \ufb02ows. Imagine a mate-\nrial coursing through a system from a source, where the material is produced, to\na sink, where it is consumed. The source produces the material at some steady\nrate, and the sink consumes the material at the same rate. The \u201c\ufb02ow\u201d of the mate-\nrial..."
        },
        "sources": [
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Shimon Even. Graph Algorithms. Computer Science Press, 1979.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "Chapter notes\nAhuja, Magnanti, and Orlin [7], Even [103], Lawler [224], Papadimitriou and Stei-\nglitz [271], and Tarjan [330] are good references for network \ufb02ow and related algo-\nrithms."
            },
            {
                "source_text": "Andrew V. Goldberg, \u00b4Eva Tardos, and Robert E. Tarjan. Network \ufb02ow algorithms. In Bern-\nhard Korte, L\u00b4aszl\u00b4o Lov\u00b4asz, Hans J\u00a8urgen Pr\u00a8omel, and Alexander Schrijver, editors, Paths,\nFlows, and VLSI-Layout, pages 101\u2013164. Springer, 1990.",
                "context_sentence": "Goldberg, Tardos, and Tarjan [139] also provide a nice survey of algorithms\nfor network-\ufb02ow problems, and Schrijver [304] has written an interesting review\nof historical developments in the \ufb01eld of network \ufb02ows."
            },
            {
                "source_text": "Alexander Schrijver. Paths and \ufb02ows\u2014A historical survey. CWI Quarterly, 6(3):169\u2013183,\n1993.",
                "context_sentence": "Goldberg, Tardos, and Tarjan [139] also provide a nice survey of algorithms\nfor network-\ufb02ow problems, and Schrijver [304] has written an interesting review\nof historical developments in the \ufb01eld of network \ufb02ows."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press,\n1962.",
                "context_sentence": "The Ford-Fulkerson method is due to Ford and Fulkerson [109], who originated\nthe formal study of many of the problems in the area of network \ufb02ow, including\nthe maximum-\ufb02ow and bipartite-matching problems."
            },
            {
                "source_text": "Jack Edmonds and Richard M. Karp. Theoretical improvements in the algorithmic ef\ufb01-\nciency for network \ufb02ow problems. Journal of the ACM, 19(2):248\u2013264, 1972.",
                "context_sentence": "Many early implementations\nof the Ford-Fulkerson method found augmenting paths using breadth-\ufb01rst search;\nEdmonds and Karp [102], and independently Dinic [89], proved that this strategy\nyields a polynomial-time algorithm."
            },
            {
                "source_text": "E. A. Dinic. Algorithm for solution of a problem of maximum \ufb02ow in a network with power\nestimation. Soviet Mathematics Doklady, 11(5):1277\u20131280, 1970.",
                "context_sentence": "Many early implementations\nof the Ford-Fulkerson method found augmenting paths using breadth-\ufb01rst search;\nEdmonds and Karp [102], and independently Dinic [89], proved that this strategy\nyields a polynomial-time algorithm."
            },
            {
                "source_text": "E. A. Dinic. Algorithm for solution of a problem of maximum \ufb02ow in a network with power\nestimation. Soviet Mathematics Doklady, 11(5):1277\u20131280, 1970.",
                "context_sentence": "A related idea, that of using \u201cblocking \ufb02ows,\u201d\nwas also \ufb01rst developed by Dinic [89]."
            },
            {
                "source_text": "A. V. Karzanov. Determining the maximal \ufb02ow in a network by the method of pre\ufb02ows.\nSoviet Mathematics Doklady, 15(2):434\u2013437, 1974.\n\n1242\nBibliography",
                "context_sentence": "Karzanov [202] \ufb01rst developed the idea of\npre\ufb02ows."
            },
            {
                "source_text": "Andrew V. Goldberg. Ef\ufb01cient Graph Algorithms for Sequential and Parallel Computers.\nPhD thesis, Department of Electrical Engineering and Computer Science, MIT, 1987.",
                "context_sentence": "The push-relabel method is due to Goldberg [136] and Goldberg and Tar-\njan [140]."
            },
            {
                "source_text": "Andrew V. Goldberg and Robert E. Tarjan. A new approach to the maximum \ufb02ow problem.\nJournal of the ACM, 35(4):921\u2013940, 1988.",
                "context_sentence": "The push-relabel method is due to Goldberg [136] and Goldberg and Tar-\njan [140]."
            },
            {
                "source_text": "Ravindra K. Ahuja and James B. Orlin. A fast and simple algorithm for the maximum \ufb02ow\nproblem. Operations Research, 37(5):748\u2013759, 1989.",
                "context_sentence": "Ahuja and Orlin [9] and\nAhuja, Orlin, and Tarjan [10] gave algorithms that used scaling."
            },
            {
                "source_text": "Ravindra K. Ahuja, James B. Orlin, and Robert E. Tarjan. Improved time bounds for the\nmaximum \ufb02ow problem. SIAM Journal on Computing, 18(5):939\u2013954, 1989.",
                "context_sentence": "Ahuja and Orlin [9] and\nAhuja, Orlin, and Tarjan [10] gave algorithms that used scaling."
            },
            {
                "source_text": "Joseph Cheriyan and S. N. Maheshwari. Analysis of pre\ufb02ow push algorithms for maximum\nnetwork \ufb02ow. SIAM Journal on Computing, 18(6):1057\u20131086, 1989.",
                "context_sentence": "Cheriyan and\nMaheshwari [62] proposed pushing \ufb02ow from the over\ufb02owing vertex of maximum\nheight."
            },
            {
                "source_text": "Joseph Cheriyan and Torben Hagerup. A randomized maximum-\ufb02ow algorithm. SIAM\nJournal on Computing, 24(2):203\u2013226, 1995.",
                "context_sentence": "Cheriyan and Hagerup [61] suggested randomly permuting the neighbor\nlists, and several researchers [14, 204, 276] developed clever derandomizations of\nthis idea, leading to a sequence of faster algorithms."
            },
            {
                "source_text": "Valerie King, Satish Rao, and Robert E. Tarjan. A faster deterministic maximum \ufb02ow algo-\nrithm. Journal of Algorithms, 17(3):447\u2013474, 1994.",
                "context_sentence": "The algorithm of King, Rao,\nand Tarjan [204] is the fastest such algorithm and runs in O.VE logE=.V lg V / V /\ntime."
            },
            {
                "source_text": "Andrew V. Goldberg and Satish Rao. Beyond the \ufb02ow decomposition barrier. Journal of\nthe ACM, 45(5):783\u2013797, 1998.",
                "context_sentence": "The asymptotically fastest algorithm to date for the maximum-\ufb02ow problem, by\nGoldberg and Rao [138], runs in time O.min.V 2=3; E1=2/E lg.V 2=E C 2/ lg C/,\nwhere C D max.u;\u0005/2E c.u; \u0003/."
            },
            {
                "source_text": "Boris V. Cherkassky and Andrew V. Goldberg. On implementing the push-relabel method\nfor the maximum \ufb02ow problem. Algorithmica, 19(4):390\u2013410, 1997.",
                "context_sentence": "A study\nby Cherkassky and Goldberg [63] underscores the importance of using two heuris-\ntics when implementing a push-relabel algorithm."
            },
            {
                "source_text": "John E. Hopcroft and Richard M. Karp. An n5=2 algorithm for maximum matchings in\nbipartite graphs. SIAM Journal on Computing, 2(4):225\u2013231, 1973.",
                "context_sentence": "The best algorithm to date for maximum bipartite matching, discovered by\nHopcroft and Karp [176], runs in O."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz and M. D. Plummer. Matching Theory, volume 121 of Annals of Discrete\nMathematics. North Holland, 1986.",
                "context_sentence": "The book by Lov\u00b4asz and Plummer [239] is an excellent reference on matching\nproblems."
            }
        ]
    },
    "VII Selected Topics": {
        "details": {
            "level": 1,
            "start_page": 789,
            "end_page": 1163,
            "text_content_snippet": "VII\nSelected Topics\n\nIntroduction\nThis part contains a selection of algorithmic topics that extend and complement\nearlier material in this book. Some chapters introduce new models of computation\nsuch as circuits or parallel computers. Others cover specialized domains such as\ncomputational geometry or number theory. The last two chapters discuss some of\nthe known limitations to the design of ef\ufb01cient algorithms and introduce techniques\nfor coping with those limitations.\nChapter 27 presents an alg..."
        },
        "sources": [
            {
                "source_text": "Cilk Arts, Inc., Burlington, Massachusetts. Cilk++ Programmer\u2019s Guide, 2008. Available\nat http://www.cilk.com/archive/docs/cilk1guide.\n\nBibliography\n1235",
                "context_sentence": "The multithreaded pseudocode and programming model were heavily in\ufb02uenced\nby the Cilk [51, 118] project at MIT and the Cilk++ [71] extensions to C++ dis-\ntributed by Cilk Arts, Inc."
            },
            {
                "source_text": "Cilk Arts, Inc., Burlington, Massachusetts. Cilk++ Programmer\u2019s Guide, 2008. Available\nat http://www.cilk.com/archive/docs/cilk1guide.\n\nBibliography\n1235",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Barbara Chapman, Gabriele Jost, and Ruud van der Pas. Using OpenMP: Portable Shared\nMemory Parallel Programming. The MIT Press, 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Daan Leijen and Judd Hall.\nOptimize managed code for multi-core machines.\nMSDN\nMagazine, October 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "James Reinders. Intel Threading Building Blocks: Out\ufb01tting C++ for Multi-core Processor\nParallelism. O\u2019Reilly Media, Inc., 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Don Dailey and Charles E. Leiserson. Using Cilk to write multiprocessor chess programs.\nIn H. J. van den Herik and B. Monien, editors, Advances in Computer Games, volume 9,\npages 25\u201352. University of Maastricht, Netherlands, 2001.",
                "context_sentence": "A chess lesson\nWe close this section with a true story that occurred during the development of\nthe world-class multithreaded chess-playing program ?Socrates [80], although the\ntimings below have been simpli\ufb01ed for exposition."
            },
            {
                "source_text": "Ronald L. Graham. Bounds for certain multiprocessor anomalies. Bell System Technical\nJournal, 45(9):1563\u20131581, 1966.",
                "context_sentence": "812\nChapter 27\nMultithreaded Algorithms\nGraham [149] and Brent [55] showed that there exist schedulers achieving the\nbound of Theorem 27.1."
            },
            {
                "source_text": "Ronald L. Graham. Bounds for certain multiprocessor anomalies. Bell System Technical\nJournal, 45(9):1563\u20131581, 1966.",
                "context_sentence": "The \ufb01rst such\nalgorithm is often credited to Graham [149]."
            },
            {
                "source_text": "Richard P. Brent. The parallel evaluation of general arithmetic expressions. Journal of the\nACM, 21(2):201\u2013206, 1974.",
                "context_sentence": "812\nChapter 27\nMultithreaded Algorithms\nGraham [149] and Brent [55] showed that there exist schedulers achieving the\nbound of Theorem 27.1."
            },
            {
                "source_text": "Derek L. Eager, John Zahorjan, and Edward D. Lazowska. Speedup versus ef\ufb01ciency in\nparallel systems. IEEE Transactions on Computers, 38(3):408\u2013423, 1989.",
                "context_sentence": "Eager, Zahorjan, and Lazowska [98] showed that any\ngreedy scheduler achieves this bound and proposed the methodology of using work\nand span (although not by those names) to analyze parallel algorithms."
            },
            {
                "source_text": "Guy E. Blelloch. Scan Primitives and Parallel Vector Models. PhD thesis, Department of\nElectrical Engineering and Computer Science, MIT, 1989. Available as MIT Laboratory for\nComputer Science Technical Report MIT/LCS/TR-463.",
                "context_sentence": "Blelloch\n[47] developed an algorithmic programming model based on work and span (which\nhe called the \u201cdepth\u201d of the computation) for data-parallel programming."
            },
            {
                "source_text": "Robert D. Blumofe and Charles E. Leiserson. Scheduling multithreaded computations by\nwork stealing. Journal of the ACM, 46(5):720\u2013748, 1999.",
                "context_sentence": "Blumofe\nand Leiserson [52] gave a distributed scheduling algorithm for dynamic multi-\nthreading based on randomized \u201cwork-stealing\u201d and showed that it achieves the\nbound E \u0152TP \u0002 \u0002 T1=P C O.T1/."
            },
            {
                "source_text": "Nimar S. Arora, Robert D. Blumofe, and C. Greg Plaxton. Thread scheduling for multipro-\ngrammed multiprocessors. In Proceedings of the 10th Annual ACM Symposium on Parallel\nAlgorithms and Architectures, pages 119\u2013129, 1998.",
                "context_sentence": "Arora, Blumofe, and Plaxton [19] and Blelloch,\nGibbons, and Matias [49] also provided provably good algorithms for scheduling\ndynamic multithreaded computations."
            },
            {
                "source_text": "Guy E. Blelloch, Phillip B. Gibbons, and Yossi Matias. Provably ef\ufb01cient scheduling for\nlanguages with \ufb01ne-grained parallelism. In Proceedings of the 7th Annual ACM Symposium\non Parallel Algorithms and Architectures, pages 1\u201312, 1995.",
                "context_sentence": "Arora, Blumofe, and Plaxton [19] and Blelloch,\nGibbons, and Matias [49] also provided provably good algorithms for scheduling\ndynamic multithreaded computations."
            },
            {
                "source_text": "Selim G. Akl. The Design and Analysis of Parallel Algorithms. Prentice Hall, 1989.",
                "context_sentence": "The multithreaded merge-sorting algorithm\nwas inspired by an algorithm of Akl [12]."
            },
            {
                "source_text": "Leslie Lamport. How to make a multiprocessor computer that correctly executes multipro-\ncess programs. IEEE Transactions on Computers, C-28(9):690\u2013691, 1979.\n\nBibliography\n1243",
                "context_sentence": "The notion of sequential consistency is due to Lamport [223]."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "Golub and Van Loan [144] discuss numerical stability."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "The books by Strang [323, 324] and Golub and Van Loan [144] contain good\ntreatments of the SVD."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "The following are especially readable: George\nand Liu [132], Golub and Van Loan [144], Press, Teukolsky, Vetterling, and Flan-\nnery [283, 284], and Strang [323, 324]."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "We refer you to the excellent book by Golub and\nVan Loan [144] for a thorough discussion of stability issues."
            },
            {
                "source_text": "Alan George and Joseph W-H Liu. Computer Solution of Large Sparse Positive De\ufb01nite\nSystems. Prentice Hall, 1981.",
                "context_sentence": "The following are especially readable: George\nand Liu [132], Golub and Van Loan [144], Press, Teukolsky, Vetterling, and Flan-\nnery [283, 284], and Strang [323, 324]."
            },
            {
                "source_text": "Volker Strassen. Gaussian elimination is not optimal. Numerische Mathematik, 14(3):354\u2013\n356, 1969.",
                "context_sentence": "In his famous paper\n[325], Strassen showed that an n\tn matrix can be inverted in O.nlg 7/ time."
            },
            {
                "source_text": "Shmuel Winograd. On the algebraic complexity of functions. In Actes du Congr`es Interna-\ntional des Math\u00b4ematiciens, volume 3, pages 283\u2013288, 1970.",
                "context_sentence": "Wino-\ngrad [358] originally proved that matrix multiplication is no harder than matrix\ninversion, and the converse is due to Aho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Chapter notes\nThe relation of string matching to the theory of \ufb01nite automata is discussed by\nAho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Wino-\ngrad [358] originally proved that matrix multiplication is no harder than matrix\ninversion, and the converse is due to Aho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Gilbert Strang. Linear Algebra and Its Applications. Thomson Brooks/Cole, fourth edition,\n2006.",
                "context_sentence": "Strang [324] has an excellent presentation of symmetric positive-de\ufb01nite matri-\nces and of linear algebra in general."
            },
            {
                "source_text": "V. Chv\u00b4atal. Linear Programming. W. H. Freeman and Company, 1983.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "V. Chv\u00b4atal. Linear Programming. W. H. Freeman and Company, 1983.",
                "context_sentence": "This history appears in a num-\nber of places, including the notes in [69] and [197]."
            },
            {
                "source_text": "Saul Gass. Linear Programming: Methods and Applications. International Thomson Pub-\nlishing, fourth edition, 1975.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Howard Karloff. Linear Programming. Birkh\u00a8auser, 1991.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Howard Karloff. Linear Programming. Birkh\u00a8auser, 1991.",
                "context_sentence": "This history appears in a num-\nber of places, including the notes in [69] and [197]."
            },
            {
                "source_text": "Alexander Schrijver. Theory of Linear and Integer Programming. John Wiley & Sons,\n1986.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Robert J. Vanderbei. Linear Programming: Foundations and Extensions. Kluwer Academic\nPublishers, 1996.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Many other books give a good coverage of linear programming, including those\nby Papadimitriou and Steiglitz [271] and Ahuja, Magnanti, and Orlin [7]."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Several other texts, such as Garey and Johnson [129]\nand Papadimitriou and Steiglitz [271], have signi\ufb01cant coverage of approximation\nalgorithms as well."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "Many other books give a good coverage of linear programming, including those\nby Papadimitriou and Steiglitz [271] and Ahuja, Magnanti, and Orlin [7]."
            },
            {
                "source_text": "M. Gr\u00a8otschel, L\u00b4aszl\u00b4o Lov\u00b4asz, and Alexander Schrijver. Geometric Algorithms and Combi-\nnatorial Optimization. Springer, 1988.",
                "context_sentence": "Gr\u00a8otschel, Lov\u00b4asz, and Schrijver\n[154] describe how to use the ellipsoid algorithm to solve a variety of problems in\ncombinatorial optimization."
            },
            {
                "source_text": "N. Karmarkar. A new polynomial-time algorithm for linear programming. Combinatorica,\n4(4):373\u2013395, 1984.",
                "context_sentence": "Karmarkar\u2019s paper [198] includes a description of the \ufb01rst interior-point algo-\nrithm."
            },
            {
                "source_text": "D. Goldfarb and M. J. Todd. Linear programming. In G. L. Nemhauser, A. H. G. Rinnooy-\nKan, and M. J. Todd, editors, Handbook in Operations Research and Management Science,\nVol. 1, Optimization, pages 73\u2013170. Elsevier Science Publishers, 1989.",
                "context_sentence": "Good sur-\nveys appear in the article of Goldfarb and Todd [141] and the book by Ye [361]."
            },
            {
                "source_text": "Yinyu Ye. Interior Point Algorithms: Theory and Analysis. John Wiley & Sons, 1997.",
                "context_sentence": "Good sur-\nveys appear in the article of Goldfarb and Todd [141] and the book by Ye [361]."
            },
            {
                "source_text": "Daniel A. Spielman and Shang-Hua Teng. Smoothed analysis of algorithms: Why the sim-\nplex algorithm usually takes polynomial time. Journal of the ACM, 51(3):385\u2013463, 2004.",
                "context_sentence": "Spielman and\nTeng [322] made progress in this area, introducing the \u201csmoothed analysis of algo-\nrithms\u201d and applying it to the simplex algorithm."
            },
            {
                "source_text": "James B. Orlin. A polynomial time primal network simplex algorithm for minimum cost\n\ufb02ows. Mathematical Programming, 78(1):109\u2013129, 1997.",
                "context_sentence": "See, for exam-\nple, the article by Orlin [268] and the citations therein."
            },
            {
                "source_text": "Charles Van Loan. Computational Frameworks for the Fast Fourier Transform. Society for\nIndustrial and Applied Mathematics, 1992.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "Charles Van Loan. Computational Frameworks for the Fast Fourier Transform. Society for\nIndustrial and Applied Mathematics, 1992.",
                "context_sentence": "Chapter notes\nVan Loan\u2019s book [343] provides an outstanding treatment of the fast Fourier trans-\nform."
            },
            {
                "source_text": "Alan V. Oppenheim and Ronald W. Schafer, with John R. Buck.\nDiscrete-Time Signal\nProcessing. Prentice Hall, second edition, 1998.",
                "context_sentence": "For an excellent introduction\nto signal processing, a popular FFT application area, see the texts by Oppenheim\nand Schafer [266] and Oppenheim and Willsky [267]."
            },
            {
                "source_text": "Alan V. Oppenheim and Alan S. Willsky, with S. Hamid Nawab. Signals and Systems.\nPrentice Hall, second edition, 1997.",
                "context_sentence": "For an excellent introduction\nto signal processing, a popular FFT application area, see the texts by Oppenheim\nand Schafer [266] and Oppenheim and Willsky [267]."
            },
            {
                "source_text": "Rafael C. Gonzalez and Richard E. Woods. Digital Image Processing. Addison-Wesley,\n1992.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "William K. Pratt. Digital Image Processing. John Wiley & Sons, fourth edition, 2007.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "Richard Tolimieri, Myoung An, and Chao Lu. Mathematics of Multidimensional Fourier\nTransform Algorithms. Springer, second edition, 1997.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "James W. Cooley and John W. Tukey. An algorithm for the machine calculation of complex\nFourier series. Mathematics of Computation, 19(90):297\u2013301, 1965.",
                "context_sentence": "Cooley and Tukey [76] are widely credited with devising the FFT in the 1960s."
            },
            {
                "source_text": "Michael T. Heideman, Don H. Johnson, and C. Sidney Burrus. Gauss and the history of the\nFast Fourier Transform. IEEE ASSP Magazine, 1(4):14\u201321, 1984.",
                "context_sentence": "Although Press,\nTeukolsky, Vetterling, and Flannery attribute the origins of the method to Runge\nand K\u00a8onig in 1924, an article by Heideman, Johnson, and Burrus [163] traces the\nhistory of the FFT as far back as C."
            },
            {
                "source_text": "Matteo Frigo and Steven G. Johnson. The design and implementation of FFTW3. Proceed-\nings of the IEEE, 93(2):216\u2013231, 2005.",
                "context_sentence": "Frigo and Johnson [117] developed a fast and \ufb02exible implementation of the\nFFT, called FFTW (\u201cfastest Fourier transform in the West\u201d)."
            },
            {
                "source_text": "Antony F. Ware. Fast approximate Fourier transforms for irregularly spaced data. SIAM\nReview, 40(4):838\u2013856, 1998.",
                "context_sentence": "The article by Ware [348] provides an overview."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "Chapter notes\nNiven and Zuckerman [265] provide an excellent introduction to elementary num-\nber theory."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "We omit the proof (but see, for example, Niven and Zuckerman [265])."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "We omit the proof of the following theorem, which is\nproven by Niven and Zuckerman [265]."
            },
            {
                "source_text": "Gary L. Miller. Riemann\u2019s hypothesis and tests for primality. Journal of Computer and\nSystem Sciences, 13(3):300\u2013317, 1976.",
                "context_sentence": "The randomized primality-testing algorithm presented here is due to Miller [255]\nand Rabin [289]; it is the fastest randomized primality-testing algorithm known,\nto within constant factors."
            },
            {
                "source_text": "Gary L. Miller. Riemann\u2019s hypothesis and tests for primality. Journal of Computer and\nSystem Sciences, 13(3):300\u2013317, 1976.",
                "context_sentence": "See Miller [255].)\n31.7-3\n?"
            },
            {
                "source_text": "Carl Pomerance.\nOn the distribution of pseudoprimes.\nMathematics of Computation,\n37(156):587\u2013593, 1981.",
                "context_sentence": "Using more\nprecise estimates due to Pomerance [279] of the number of base-2 pseudoprimes of\na given size, we may estimate that a randomly chosen 512-bit number that is called\nprime by the above procedure has less than one chance in 1020 of being a base-2\npseudoprime, and a randomly chosen 1024-bit number that is called prime has less\nthan one chance in 1041 of being a base-2 pseudoprime."
            },
            {
                "source_text": "Donald E. Knuth. Seminumerical Algorithms, volume 2 of The Art of Computer Program-\nming. Addison-Wesley, 1969. Third edition, 1997.",
                "context_sentence": "Knuth [210] discusses the origin of Euclid\u2019s algorithm."
            },
            {
                "source_text": "Donald E. Knuth. Seminumerical Algorithms, volume 2 of The Art of Computer Program-\nming. Addison-Wesley, 1969. Third edition, 1997.",
                "context_sentence": "Knuth [210] contains a good discussion of algorithms for \ufb01nding the\n\nNotes for Chapter 31\n983\ngreatest common divisor, as well as other basic number-theoretic algorithms."
            },
            {
                "source_text": "Eric Bach. Number-theoretic algorithms. In Annual Review of Computer Science, volume 4,\npages 119\u2013172. Annual Reviews, Inc., 1990.",
                "context_sentence": "Bach\n[30] and Riesel [295] provide more recent surveys of computational number the-\nory."
            },
            {
                "source_text": "Hans Riesel. Prime Numbers and Computer Methods for Factorization, volume 126 of\nProgress in Mathematics. Birkh\u00a8auser, second edition, 1994.",
                "context_sentence": "Bach\n[30] and Riesel [295] provide more recent surveys of computational number the-\nory."
            },
            {
                "source_text": "John D. Dixon. Factorization and primality tests. The American Mathematical Monthly,\n91(6):333\u2013352, 1984.",
                "context_sentence": "Dixon [91] gives an overview of factorization and primality testing."
            },
            {
                "source_text": "Carl Pomerance, editor. Proceedings of the AMS Symposia in Applied Mathematics: Com-\nputational Number Theory and Cryptography. American Mathematical Society, 1990.",
                "context_sentence": "The\nconference proceedings edited by Pomerance [280] contains several excellent sur-\nvey articles."
            },
            {
                "source_text": "Eric Bach and Jeffrey Shallit. Algorithmic Number Theory\u2014Volume I: Ef\ufb01cient Algorithms.\nThe MIT Press, 1996.",
                "context_sentence": "More recently, Bach and Shallit [31] have provided an exceptional\noverview of the basics of computational number theory."
            },
            {
                "source_text": "Jeffrey Shallit. Origins of the analysis of the Euclidean algorithm. Historia Mathematica,\n21(4):401\u2013419, 1994.",
                "context_sentence": "Shallit [312] chronicles the history of\nthe analysis of Euclid\u2019s algorithm."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithm for testing primality. Journal of Number Theory,\n12(1):128\u2013138, 1980.",
                "context_sentence": "The randomized primality-testing algorithm presented here is due to Miller [255]\nand Rabin [289]; it is the fastest randomized primality-testing algorithm known,\nto within constant factors."
            },
            {
                "source_text": "Eric Bach. Private communication, 1989.",
                "context_sentence": "The proof of Theorem 31.39 is a slight adaptation of\none suggested by Bach [29]."
            },
            {
                "source_text": "Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Mathe-\nmatics, 160(2):781\u2013793, 2004.",
                "context_sentence": "In 2002, however, Agrawal, Kayal, and\nSaxema [4] surprised everyone with their deterministic polynomial-time primality-\ntesting algorithm."
            },
            {
                "source_text": "H. Cohen and H. W. Lenstra, Jr. Primality testing and Jacobi sums. Mathematics of Com-\nputation, 42(165):297\u2013330, 1984.",
                "context_sentence": "Until then, the fastest deterministic primality testing algorithm\nknown, due to Cohen and Lenstra [73], ran in time .lg n/O.lg lg lg n/ on input n, which\nis just slightly superpolynomial."
            },
            {
                "source_text": "Pierre Beauchemin, Gilles Brassard, Claude Cr\u00b4epeau, Claude Goutier, and Carl Pomerance.\nThe generation of random numbers that are probably prime. Journal of Cryptology, 1(1):53\u2013\n64, 1988.",
                "context_sentence": "The problem of \ufb01nding large \u201crandom\u201d primes is nicely discussed in an article\nby Beauchemin, Brassard, Cr\u00b4epeau, Goutier, and Pomerance [36]."
            },
            {
                "source_text": "Whit\ufb01eld Dif\ufb01e and Martin E. Hellman. New directions in cryptography. IEEE Transac-\ntions on Information Theory, IT-22(6):644\u2013654, 1976.",
                "context_sentence": "The concept of a public-key cryptosystem is due to Dif\ufb01e and Hellman [87]."
            },
            {
                "source_text": "Ronald L. Rivest, Adi Shamir, and Leonard M. Adleman. A method for obtaining digital\nsignatures and public-key cryptosystems.\nCommunications of the ACM, 21(2):120\u2013126,\n1978. See also U.S. Patent 4,405,829.",
                "context_sentence": "The RSA cryptosystem was proposed in 1977 by Rivest, Shamir, and Adleman\n[296]."
            },
            {
                "source_text": "Sha\ufb01Goldwasser and Silvio Micali. Probabilistic encryption. Journal of Computer and\nSystem Sciences, 28(2):270\u2013299, 1984.\n\nBibliography\n1239",
                "context_sentence": "For ex-\nample, Goldwasser and Micali [142] show that randomization can be an effective\ntool in the design of secure public-key encryption schemes."
            },
            {
                "source_text": "Sha\ufb01Goldwasser, Silvio Micali, and Ronald L. Rivest. A digital signature scheme secure\nagainst adaptive chosen-message attacks.\nSIAM Journal on Computing, 17(2):281\u2013308,\n1988.",
                "context_sentence": "For signature schemes,\n\n984\nChapter 31\nNumber-Theoretic Algorithms\nGoldwasser, Micali, and Rivest [143] present a digital-signature scheme for which\nevery conceivable type of forgery is provably as dif\ufb01cult as factoring."
            },
            {
                "source_text": "Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. Handbook of Applied\nCryptography. CRC Press, 1997.",
                "context_sentence": "Menezes,\nvan Oorschot, and Vanstone [254] provide an overview of applied cryptography."
            },
            {
                "source_text": "J. M. Pollard. A Monte Carlo method for factorization. BIT, 15(3):331\u2013334, 1975.",
                "context_sentence": "The rho heuristic for integer factorization was invented by Pollard [277]."
            },
            {
                "source_text": "Richard P. Brent. An improved Monte Carlo factorization algorithm. BIT, 20(2):176\u2013184,\n1980.",
                "context_sentence": "The\nversion presented here is a variant proposed by Brent [56]."
            },
            {
                "source_text": "J. P. Buhler, H. W. Lenstra, Jr., and Carl Pomerance. Factoring integers with the number\n\ufb01eld sieve. In A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number\nField Sieve, volume 1554 of Lecture Notes in Mathematics, pages 50\u201394. Springer, 1993.",
                "context_sentence": "The general number-\ufb01eld sieve factoring algorithm (as developed by Buh-\nler, Lenstra, and Pomerance [57] as an extension of the ideas in the number-\ufb01eld\nsieve factoring algorithm by Pollard [278] and Lenstra et al."
            },
            {
                "source_text": "J. M. Pollard. Factoring with cubic integers. In A. K. Lenstra and H. W. Lenstra, Jr., editors,\nThe Development of the Number Field Sieve, volume 1554 of Lecture Notes in Mathematics,\npages 4\u201310. Springer, 1993.",
                "context_sentence": "The general number-\ufb01eld sieve factoring algorithm (as developed by Buh-\nler, Lenstra, and Pomerance [57] as an extension of the ideas in the number-\ufb01eld\nsieve factoring algorithm by Pollard [278] and Lenstra et al."
            },
            {
                "source_text": "A. K. Lenstra, H. W. Lenstra, Jr., M. S. Manasse, and J. M. Pollard. The number \ufb01eld sieve.\nIn A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number Field Sieve,\nvolume 1554 of Lecture Notes in Mathematics, pages 11\u201342. Springer, 1993.",
                "context_sentence": "[232] and re\ufb01ned by\nCoppersmith [77] and others) is perhaps the most ef\ufb01cient such algorithm in gen-\neral for large inputs."
            },
            {
                "source_text": "Don Coppersmith.\nModi\ufb01cations to the number \ufb01eld sieve.\nJournal of Cryptology,\n6(3):169\u2013180, 1993.",
                "context_sentence": "[232] and re\ufb01ned by\nCoppersmith [77] and others) is perhaps the most ef\ufb01cient such algorithm in gen-\neral for large inputs."
            },
            {
                "source_text": "H. W. Lenstra, Jr.\nFactoring integers with elliptic curves.\nAnnals of Mathematics,\n126(3):649\u2013673, 1987.",
                "context_sentence": "The elliptic-curve method due to Lenstra [233] may be more effective for some\ninputs than the number-\ufb01eld sieve method, since, like Pollard\u2019s rho method, it can\n\ufb01nd a small prime factor p quite quickly."
            },
            {
                "source_text": "Donald E. Knuth, James H. Morris, Jr., and Vaughan R. Pratt. Fast pattern matching in\nstrings. SIAM Journal on Computing, 6(2):323\u2013350, 1977.",
                "context_sentence": "The Knuth-Morris-Pratt algorithm [214] was\ninvented independently by Knuth and Pratt and by Morris; they published their\nwork jointly."
            },
            {
                "source_text": "Edward M. Reingold, Kenneth J. Urban, and David Gries. K-M-P string matching revisited.\nInformation Processing Letters, 64(5):217\u2013223, 1997.",
                "context_sentence": "Reingold, Urban, and Gries [294] give an alternative treatment of the\nKnuth-Morris-Pratt algorithm."
            },
            {
                "source_text": "Richard M. Karp and Michael O. Rabin. Ef\ufb01cient randomized pattern-matching algorithms.\nIBM Journal of Research and Development, 31(2):249\u2013260, 1987.",
                "context_sentence": "The Rabin-Karp algorithm was proposed by Karp\nand Rabin [201]."
            },
            {
                "source_text": "Zvi Galil and Joel Seiferas. Time-space-optimal string matching. Journal of Computer and\nSystem Sciences, 26(3):280\u2013294, 1983.",
                "context_sentence": "Galil and Seiferas [126] give an interesting deterministic linear-\ntime string-matching algorithm that uses only O.1/ space beyond that required to\nstore the pattern and text."
            },
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "The O.n lg n/-time divide-and-conquer algorithm for \ufb01nding the closest pair of\npoints is by Shamos and appears in Preparata and Shamos [282]."
            },
            {
                "source_text": "Herbert Edelsbrunner. Algorithms in Combinatorial Geometry, volume 10 of EATCS Mono-\ngraphs on Theoretical Computer Science. Springer, 1987.",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Joseph O\u2019Rourke. Computational Geometry in C. Cambridge University Press, second\nedition, 1998.",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Michael I. Shamos and Dan Hoey. Geometric intersection problems. In Proceedings of the\n17th Annual Symposium on Foundations of Computer Science, pages 208\u2013215, 1976.",
                "context_sentence": "The algorithm of Section 33.2, which determines whether any segments inter-\nsect, is due to Shamos and Hoey [313]."
            },
            {
                "source_text": "Ronald L. Graham. An ef\ufb01cient algorithm for determining the convex hull of a \ufb01nite planar\nset. Information Processing Letters, 1(4):132\u2013133, 1972.",
                "context_sentence": "The original version of Graham\u2019s scan is given by Graham [150]."
            },
            {
                "source_text": "R. A. Jarvis. On the identi\ufb01cation of the convex hull of a \ufb01nite set of points in the plane.\nInformation Processing Letters, 2(1):18\u201321, 1973.",
                "context_sentence": "The package-\nwrapping algorithm is due to Jarvis [189]."
            },
            {
                "source_text": "Andrew C.-C. Yao. A lower bound to \ufb01nding convex hulls. Journal of the ACM, 28(4):780\u2013\n787, 1981.",
                "context_sentence": "Using a decision-tree model of com-\nputation, Yao [359] proved a worst-case lower bound of \u0004.n lg n/ for the running\ntime of any convex-hull algorithm."
            },
            {
                "source_text": "D. G. Kirkpatrick and R. Seidel. The ultimate planar convex hull algorithm? SIAM Journal\non Computing, 15(2):287\u2013299, 1986.",
                "context_sentence": "When the number of vertices h of the con-\nvex hull is taken into account, the prune-and-search algorithm of Kirkpatrick and\nSeidel [206], which takes O.n lg h/ time, is asymptotically optimal."
            },
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and\nComputation. Addison-Wesley, 1979.",
                "context_sentence": "1See Hopcroft and Ullman [180] or Lewis and Papadimitriou [236] for a thorough treatment of the\nTuring-machine model."
            },
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and\nComputation. Addison-Wesley, 1979.",
                "context_sentence": "Hopcroft and Ullman [180] give a good presentation of NP-completeness in terms of\nnondeterministic models of computation."
            },
            {
                "source_text": "Harry R. Lewis and Christos H. Papadimitriou. Elements of the Theory of Computation.\nPrentice Hall, second edition, 1998.",
                "context_sentence": "1See Hopcroft and Ullman [180] or Lewis and Papadimitriou [236] for a thorough treatment of the\nTuring-machine model."
            },
            {
                "source_text": "Harry R. Lewis and Christos H. Papadimitriou. Elements of the Theory of Computation.\nPrentice Hall, second edition, 1998.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "J. Hartmanis and R. E. Stearns. On the computational complexity of algorithms. Transac-\ntions of the American Mathematical Society, 117:285\u2013306, May 1965.\n\n1240\nBibliography",
                "context_sentence": "Let L be the language accepted by some\n6For more on complexity classes, see the seminal paper by Hartmanis and Stearns [162]."
            },
            {
                "source_text": "Michael R. Garey and David S. Johnson. Computers and Intractability: A Guide to the\nTheory of NP-Completeness. W. H. Freeman, 1979.",
                "context_sentence": "Chapter notes\nThe book by Garey and Johnson [129] provides a wonderful guide to NP-complete-\nness, discussing the theory at length and providing a catalogue of many problems\nthat were known to be NP-complete in 1979."
            },
            {
                "source_text": "Michael R. Garey and David S. Johnson. Computers and Intractability: A Guide to the\nTheory of NP-Completeness. W. H. Freeman, 1979.",
                "context_sentence": "Several other texts, such as Garey and Johnson [129]\nand Papadimitriou and Steiglitz [271], have signi\ufb01cant coverage of approximation\nalgorithms as well."
            },
            {
                "source_text": "John E. Hopcroft, Rajeev Motwani, and Jeffrey D. Ullman. Introduction to Automata The-\nory, Languages, and Computation. Addison Wesley, third edition, 2006.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Christos H. Papadimitriou. Computational Complexity. Addison-Wesley, 1994.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Michael Sipser. Introduction to the Theory of Computation. Thomson Course Technology,\nsecond edition, 2006.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. McGraw-Hill,\n2008.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Richard Johnsonbaugh and Marcus Schaefer. Algorithms. Pearson Prentice Hall, 2004.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Jon Kleinberg and \u00b4Eva Tardos. Algorithm Design. Addison-Wesley, 2006.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Alan Cobham. The intrinsic computational dif\ufb01culty of functions. In Proceedings of the\n1964 Congress for Logic, Methodology, and the Philosophy of Science, pages 24\u201330. North-\nHolland, 1964.",
                "context_sentence": "The class P was introduced in 1964 by Cobham [72] and, independently, in 1965\nby Edmonds [100], who also introduced the class NP and conjectured that P \u00a4 NP."
            },
            {
                "source_text": "Jack Edmonds. Paths, trees, and \ufb02owers. Canadian Journal of Mathematics, 17:449\u2013467,\n1965.",
                "context_sentence": "The class P was introduced in 1964 by Cobham [72] and, independently, in 1965\nby Edmonds [100], who also introduced the class NP and conjectured that P \u00a4 NP."
            },
            {
                "source_text": "Stephen Cook. The complexity of theorem proving procedures. In Proceedings of the Third\nAnnual ACM Symposium on Theory of Computing, pages 151\u2013158, 1971.",
                "context_sentence": "The notion of NP-completeness was proposed in 1971 by Cook [75], who gave\nthe \ufb01rst NP-completeness proofs for formula satis\ufb01ability and 3-CNF satis\ufb01abil-\nity."
            },
            {
                "source_text": "L. A. Levin. Universal sorting problems. Problemy Peredachi Informatsii, 9(3):265\u2013266,\n1973. In Russian.",
                "context_sentence": "Levin [234] independently discovered the notion, giving an NP-completeness\nproof for a tiling problem."
            },
            {
                "source_text": "Richard M. Karp. Reducibility among combinatorial problems. In Raymond E. Miller and\nJames W. Thatcher, editors, Complexity of Computer Computations, pages 85\u2013103. Plenum\nPress, 1972.",
                "context_sentence": "Karp [199] introduced the methodology of reductions\nin 1972 and demonstrated the rich variety of NP-complete problems."
            },
            {
                "source_text": "Sanjeev Arora. Probabilistic checking of proofs and the hardness of approximation prob-\nlems. PhD thesis, University of California, Berkeley, 1994.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "The vertex-cover problem has been studied exten-\nsively (Hochbaum [172] lists 16 different approximation algorithms for this prob-\nlem), but all the approximation ratios are at least 2 \u0005 o.1/."
            },
            {
                "source_text": "Sanjeev Arora.\nThe approximability of NP-hard problems.\nIn Proceedings of the 30th\nAnnual ACM Symposium on Theory of Computing, pages 337\u2013348, 1998.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Ernst W. Mayr, Hans J\u00a8urgen Pr\u00a8omel, and Angelika Steger, editors. Lectures on Proof Veri\ufb01-\ncation and Approximation Algorithms, volume 1367 of Lecture Notes in Computer Science.\nSpringer, 1998.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "David S. Johnson. The NP-completeness column: An ongoing guide\u2014The tale of the sec-\nond prover. Journal of Algorithms, 13(3):502\u2013524, 1992.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Michael R. Garey, R. L. Graham, and J. D. Ullman. Worst-case analyis of memory al-\nlocation algorithms. In Proceedings of the Fourth Annual ACM Symposium on Theory of\nComputing, pages 143\u2013150, 1972.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "The randomized algorithm for MAX-3-CNF satis\ufb01ability is implicit in the work\nof Johnson [190]."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.\nComplexity and Approximation: Combinatorial Optimization Problems and Their Approx-\nimability Properties. Springer, 1999.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Vijay V. Vazirani. Approximation Algorithms. Springer, 2001.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "David B. Shmoys. Computing near-optimal solutions to combinatorial optimization prob-\nlems. In William Cook, L\u00b4aszl\u00b4o Lov\u00b4asz, and Paul Seymour, editors, Combinatorial Opti-\nmization, volume 20 of DIMACS Series in Discrete Mathematics and Theoretical Computer\nScience. American Mathematical Society, 1995.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Philip N. Klein and Neal E. Young. Approximation algorithms for NP-hard optimization\nproblems. In CRC Handbook on Algorithms, pages 34-1\u201334-19. CRC Press, 1999.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Eugene L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys, editors. The\nTraveling Salesman Problem. John Wiley & Sons, 1985.",
                "context_sentence": "Lawler, Lenstra, Rinnooy Kan, and Shmoys [225] provide an\nextensive treatment of approximation algorithms for the traveling-salesman prob-\nlem."
            },
            {
                "source_text": "D. J. Rosenkrantz, R. E. Stearns, and P. M. Lewis. An analysis of several heuristics for the\ntraveling salesman problem. SIAM Journal on Computing, 6(3):563\u2013581, 1977.",
                "context_sentence": "The algorithm APPROX-TSP-TOUR appears in a paper by Rosenkrantz, Stearns,\nand Lewis [298]."
            },
            {
                "source_text": "Sanjeev Arora. Polynomial time approximation schemes for euclidean traveling salesman\nand other geometric problems. Journal of the ACM, 45(5):753\u2013782, 1998.",
                "context_sentence": "Arora [22] and Mitchell [257] have shown that if the points are in the euclidean\nplane, there is a polynomial-time approximation scheme."
            },
            {
                "source_text": "Joseph S. B. Mitchell. Guillotine subdivisions approximate polygonal subdivisions: A sim-\nple polynomial-time approximation scheme for geometric TSP, k-MST, and related prob-\nlems. SIAM Journal on Computing, 28(4):1298\u20131309, 1999.",
                "context_sentence": "Arora [22] and Mitchell [257] have shown that if the points are in the euclidean\nplane, there is a polynomial-time approximation scheme."
            },
            {
                "source_text": "S. Sahni and T. Gonzalez.\nP-complete approximation problems.\nJournal of the ACM,\n23(3):555\u2013565, 1976.",
                "context_sentence": "Theorem 35.3 is due to\nSahni and Gonzalez [301]."
            },
            {
                "source_text": "V. Chv\u00b4atal. A greedy heuristic for the set-covering problem. Mathematics of Operations\nResearch, 4(3):233\u2013235, 1979.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz. On the ratio of optimal integral and fractional covers. Discrete Mathemat-\nics, 13(4):383\u2013390, 1975.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "Oscar H. Ibarra and Chul E. Kim. Fast approximation algorithms for the knapsack and sum\nof subset problems. Journal of the ACM, 22(4):463\u2013468, 1975.",
                "context_sentence": "The algorithm APPROX-SUBSET-SUM and its analysis are loosely modeled after\nrelated approximation algorithms for the knapsack and subset-sum problems by\nIbarra and Kim [187]."
            },
            {
                "source_text": "Daniel Bienstock and Benjamin McClosky. Tightening simplex mixed-integer sets with\nguaranteed bounds. Optimization Online, July 2008.",
                "context_sentence": "Problem 35-7 is a combinatorial version of a more general result on approximat-\ning knapsack-type integer programs by Bienstock and McClosky [45]."
            },
            {
                "source_text": "Dorit S. Hochbaum. Ef\ufb01cient bounds for the stable set, vertex cover and set packing prob-\nlems. Discrete Applied Mathematics, 6(3):243\u2013254, 1983.",
                "context_sentence": "The weighted vertex-cover algorithm is by Hochbaum [171]."
            },
            {
                "source_text": "P. Raghavan and C. D. Thompson. Randomized rounding: A technique for provably good\nalgorithms and algorithmic proofs. Combinatorica, 7(4):365\u2013374, 1987.",
                "context_sentence": "This technique was \ufb01rst used by Raghavan\nand Thompson [290], and it has had many subsequent uses."
            },
            {
                "source_text": "Rajeev Motwani, Joseph (Sef\ufb01) Naor, and Prabakhar Raghavan. Randomized approxima-\ntion algorithms in combinatorial optimization. In Dorit Hochbaum, editor, Approximation\nAlgorithms for NP-Hard Problems, chapter 11, pages 447\u2013481. PWS Publishing Company,\n1997.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson. The primal-dual method for approximation\nalgorithms and its application to network design problems. In Dorit S. Hochbaum, editor,\nApproximation Algorithms for NP-Hard Problems, pages 144\u2013191. PWS Publishing Com-\npany, 1997.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Tom Leighton and Satish Rao. Multicommodity max-\ufb02ow min-cut theorems and their use\nin designing approximation algorithms. Journal of the ACM, 46(6):787\u2013832, 1999.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson.\nImproved approximation algorithms for\nmaximum cut and satis\ufb01ability problems using semide\ufb01nite programming. Journal of the\nACM, 42(6):1115\u20131145, 1995.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Sanjeev Arora and Carsten Lund. Hardness of approximations. In Dorit S. Hochbaum,\neditor, Approximation Algorithms for NP-Hard Problems, pages 399\u2013446. PWS Publishing\nCompany, 1997.",
                "context_sentence": "In addition to the references there,\nthe chapter by Arora and Lund [23] contains a good description of the relation-\nship between probabilistically checkable proofs and the hardness of approximating\nvarious problems."
            }
        ]
    },
    "27 Multithreaded Algorithms": {
        "details": {
            "level": 2,
            "start_page": 793,
            "end_page": 834,
            "text_content_snippet": "27\nMultithreaded Algorithms\nThe vast majority of algorithms in this book are serial algorithms suitable for\nrunning on a uniprocessor computer in which only one instruction executes at a\ntime. In this chapter, we shall extend our algorithmic model to encompass parallel\nalgorithms, which can run on a multiprocessor computer that permits multiple\ninstructions to execute concurrently. In particular, we shall explore the elegant\nmodel of dynamic multithreaded algorithms, which are amenable to algori..."
        },
        "sources": [
            {
                "source_text": "Cilk Arts, Inc., Burlington, Massachusetts. Cilk++ Programmer\u2019s Guide, 2008. Available\nat http://www.cilk.com/archive/docs/cilk1guide.\n\nBibliography\n1235",
                "context_sentence": "The multithreaded pseudocode and programming model were heavily in\ufb02uenced\nby the Cilk [51, 118] project at MIT and the Cilk++ [71] extensions to C++ dis-\ntributed by Cilk Arts, Inc."
            },
            {
                "source_text": "Cilk Arts, Inc., Burlington, Massachusetts. Cilk++ Programmer\u2019s Guide, 2008. Available\nat http://www.cilk.com/archive/docs/cilk1guide.\n\nBibliography\n1235",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Barbara Chapman, Gabriele Jost, and Ruud van der Pas. Using OpenMP: Portable Shared\nMemory Parallel Programming. The MIT Press, 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Daan Leijen and Judd Hall.\nOptimize managed code for multi-core machines.\nMSDN\nMagazine, October 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "James Reinders. Intel Threading Building Blocks: Out\ufb01tting C++ for Multi-core Processor\nParallelism. O\u2019Reilly Media, Inc., 2007.",
                "context_sentence": "A grow-\ning number of concurrency platforms support one variant or another of dynamic\nmultithreading, including Cilk [51, 118], Cilk++ [71], OpenMP [59], Task Par-\nallel Library [230], and Threading Building Blocks [292]."
            },
            {
                "source_text": "Don Dailey and Charles E. Leiserson. Using Cilk to write multiprocessor chess programs.\nIn H. J. van den Herik and B. Monien, editors, Advances in Computer Games, volume 9,\npages 25\u201352. University of Maastricht, Netherlands, 2001.",
                "context_sentence": "A chess lesson\nWe close this section with a true story that occurred during the development of\nthe world-class multithreaded chess-playing program ?Socrates [80], although the\ntimings below have been simpli\ufb01ed for exposition."
            },
            {
                "source_text": "Ronald L. Graham. Bounds for certain multiprocessor anomalies. Bell System Technical\nJournal, 45(9):1563\u20131581, 1966.",
                "context_sentence": "812\nChapter 27\nMultithreaded Algorithms\nGraham [149] and Brent [55] showed that there exist schedulers achieving the\nbound of Theorem 27.1."
            },
            {
                "source_text": "Richard P. Brent. The parallel evaluation of general arithmetic expressions. Journal of the\nACM, 21(2):201\u2013206, 1974.",
                "context_sentence": "812\nChapter 27\nMultithreaded Algorithms\nGraham [149] and Brent [55] showed that there exist schedulers achieving the\nbound of Theorem 27.1."
            },
            {
                "source_text": "Derek L. Eager, John Zahorjan, and Edward D. Lazowska. Speedup versus ef\ufb01ciency in\nparallel systems. IEEE Transactions on Computers, 38(3):408\u2013423, 1989.",
                "context_sentence": "Eager, Zahorjan, and Lazowska [98] showed that any\ngreedy scheduler achieves this bound and proposed the methodology of using work\nand span (although not by those names) to analyze parallel algorithms."
            },
            {
                "source_text": "Guy E. Blelloch. Scan Primitives and Parallel Vector Models. PhD thesis, Department of\nElectrical Engineering and Computer Science, MIT, 1989. Available as MIT Laboratory for\nComputer Science Technical Report MIT/LCS/TR-463.",
                "context_sentence": "Blelloch\n[47] developed an algorithmic programming model based on work and span (which\nhe called the \u201cdepth\u201d of the computation) for data-parallel programming."
            },
            {
                "source_text": "Robert D. Blumofe and Charles E. Leiserson. Scheduling multithreaded computations by\nwork stealing. Journal of the ACM, 46(5):720\u2013748, 1999.",
                "context_sentence": "Blumofe\nand Leiserson [52] gave a distributed scheduling algorithm for dynamic multi-\nthreading based on randomized \u201cwork-stealing\u201d and showed that it achieves the\nbound E \u0152TP \u0002 \u0002 T1=P C O.T1/."
            },
            {
                "source_text": "Nimar S. Arora, Robert D. Blumofe, and C. Greg Plaxton. Thread scheduling for multipro-\ngrammed multiprocessors. In Proceedings of the 10th Annual ACM Symposium on Parallel\nAlgorithms and Architectures, pages 119\u2013129, 1998.",
                "context_sentence": "Arora, Blumofe, and Plaxton [19] and Blelloch,\nGibbons, and Matias [49] also provided provably good algorithms for scheduling\ndynamic multithreaded computations."
            },
            {
                "source_text": "Guy E. Blelloch, Phillip B. Gibbons, and Yossi Matias. Provably ef\ufb01cient scheduling for\nlanguages with \ufb01ne-grained parallelism. In Proceedings of the 7th Annual ACM Symposium\non Parallel Algorithms and Architectures, pages 1\u201312, 1995.",
                "context_sentence": "Arora, Blumofe, and Plaxton [19] and Blelloch,\nGibbons, and Matias [49] also provided provably good algorithms for scheduling\ndynamic multithreaded computations."
            },
            {
                "source_text": "Selim G. Akl. The Design and Analysis of Parallel Algorithms. Prentice Hall, 1989.",
                "context_sentence": "The multithreaded merge-sorting algorithm\nwas inspired by an algorithm of Akl [12]."
            },
            {
                "source_text": "Leslie Lamport. How to make a multiprocessor computer that correctly executes multipro-\ncess programs. IEEE Transactions on Computers, C-28(9):690\u2013691, 1979.\n\nBibliography\n1243",
                "context_sentence": "The notion of sequential consistency is due to Lamport [223]."
            }
        ]
    },
    "28 Matrix Operations": {
        "details": {
            "level": 2,
            "start_page": 834,
            "end_page": 864,
            "text_content_snippet": "28\nMatrix Operations\nBecause operations on matrices lie at the heart of scienti\ufb01c computing, ef\ufb01cient al-\ngorithms for working with matrices have many practical applications. This chapter\nfocuses on how to multiply matrices and solve sets of simultaneous linear equa-\ntions. Appendix D reviews the basics of matrices.\nSection 28.1 shows how to solve a set of linear equations using LUP decomposi-\ntions. Then, Section 28.2 explores the close relationship between multiplying and\ninverting matrices. F..."
        },
        "sources": [
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "Golub and Van Loan [144] discuss numerical stability."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "The books by Strang [323, 324] and Golub and Van Loan [144] contain good\ntreatments of the SVD."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "The following are especially readable: George\nand Liu [132], Golub and Van Loan [144], Press, Teukolsky, Vetterling, and Flan-\nnery [283, 284], and Strang [323, 324]."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "We refer you to the excellent book by Golub and\nVan Loan [144] for a thorough discussion of stability issues."
            },
            {
                "source_text": "Alan George and Joseph W-H Liu. Computer Solution of Large Sparse Positive De\ufb01nite\nSystems. Prentice Hall, 1981.",
                "context_sentence": "The following are especially readable: George\nand Liu [132], Golub and Van Loan [144], Press, Teukolsky, Vetterling, and Flan-\nnery [283, 284], and Strang [323, 324]."
            },
            {
                "source_text": "Volker Strassen. Gaussian elimination is not optimal. Numerische Mathematik, 14(3):354\u2013\n356, 1969.",
                "context_sentence": "In his famous paper\n[325], Strassen showed that an n\tn matrix can be inverted in O.nlg 7/ time."
            },
            {
                "source_text": "Shmuel Winograd. On the algebraic complexity of functions. In Actes du Congr`es Interna-\ntional des Math\u00b4ematiciens, volume 3, pages 283\u2013288, 1970.",
                "context_sentence": "Wino-\ngrad [358] originally proved that matrix multiplication is no harder than matrix\ninversion, and the converse is due to Aho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Wino-\ngrad [358] originally proved that matrix multiplication is no harder than matrix\ninversion, and the converse is due to Aho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Gilbert Strang. Linear Algebra and Its Applications. Thomson Brooks/Cole, fourth edition,\n2006.",
                "context_sentence": "Strang [324] has an excellent presentation of symmetric positive-de\ufb01nite matri-\nces and of linear algebra in general."
            }
        ]
    },
    "29 Linear Programming": {
        "details": {
            "level": 2,
            "start_page": 864,
            "end_page": 919,
            "text_content_snippet": "29\nLinear Programming\nMany problems take the form of maximizing or minimizing an objective, given\nlimited resources and competing constraints. If we can specify the objective as\na linear function of certain variables, and if we can specify the constraints on\nresources as equalities or inequalities on those variables, then we have a linear-\nprogramming problem. Linear programs arise in a variety of practical applica-\ntions. We begin by studying an application in electoral politics.\nA political pr..."
        },
        "sources": [
            {
                "source_text": "V. Chv\u00b4atal. Linear Programming. W. H. Freeman and Company, 1983.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "V. Chv\u00b4atal. Linear Programming. W. H. Freeman and Company, 1983.",
                "context_sentence": "This history appears in a num-\nber of places, including the notes in [69] and [197]."
            },
            {
                "source_text": "Saul Gass. Linear Programming: Methods and Applications. International Thomson Pub-\nlishing, fourth edition, 1975.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Howard Karloff. Linear Programming. Birkh\u00a8auser, 1991.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Howard Karloff. Linear Programming. Birkh\u00a8auser, 1991.",
                "context_sentence": "This history appears in a num-\nber of places, including the notes in [69] and [197]."
            },
            {
                "source_text": "Alexander Schrijver. Theory of Linear and Integer Programming. John Wiley & Sons,\n1986.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Robert J. Vanderbei. Linear Programming: Foundations and Extensions. Kluwer Academic\nPublishers, 1996.",
                "context_sentence": "A num-\nber of books are devoted exclusively to linear programming, including those by\nChv\u00b4atal [69], Gass [130], Karloff [197], Schrijver [303], and Vanderbei [344]."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Many other books give a good coverage of linear programming, including those\nby Papadimitriou and Steiglitz [271] and Ahuja, Magnanti, and Orlin [7]."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "Many other books give a good coverage of linear programming, including those\nby Papadimitriou and Steiglitz [271] and Ahuja, Magnanti, and Orlin [7]."
            },
            {
                "source_text": "M. Gr\u00a8otschel, L\u00b4aszl\u00b4o Lov\u00b4asz, and Alexander Schrijver. Geometric Algorithms and Combi-\nnatorial Optimization. Springer, 1988.",
                "context_sentence": "Gr\u00a8otschel, Lov\u00b4asz, and Schrijver\n[154] describe how to use the ellipsoid algorithm to solve a variety of problems in\ncombinatorial optimization."
            },
            {
                "source_text": "N. Karmarkar. A new polynomial-time algorithm for linear programming. Combinatorica,\n4(4):373\u2013395, 1984.",
                "context_sentence": "Karmarkar\u2019s paper [198] includes a description of the \ufb01rst interior-point algo-\nrithm."
            },
            {
                "source_text": "D. Goldfarb and M. J. Todd. Linear programming. In G. L. Nemhauser, A. H. G. Rinnooy-\nKan, and M. J. Todd, editors, Handbook in Operations Research and Management Science,\nVol. 1, Optimization, pages 73\u2013170. Elsevier Science Publishers, 1989.",
                "context_sentence": "Good sur-\nveys appear in the article of Goldfarb and Todd [141] and the book by Ye [361]."
            },
            {
                "source_text": "Yinyu Ye. Interior Point Algorithms: Theory and Analysis. John Wiley & Sons, 1997.",
                "context_sentence": "Good sur-\nveys appear in the article of Goldfarb and Todd [141] and the book by Ye [361]."
            },
            {
                "source_text": "Daniel A. Spielman and Shang-Hua Teng. Smoothed analysis of algorithms: Why the sim-\nplex algorithm usually takes polynomial time. Journal of the ACM, 51(3):385\u2013463, 2004.",
                "context_sentence": "Spielman and\nTeng [322] made progress in this area, introducing the \u201csmoothed analysis of algo-\nrithms\u201d and applying it to the simplex algorithm."
            },
            {
                "source_text": "James B. Orlin. A polynomial time primal network simplex algorithm for minimum cost\n\ufb02ows. Mathematical Programming, 78(1):109\u2013129, 1997.",
                "context_sentence": "See, for exam-\nple, the article by Orlin [268] and the citations therein."
            }
        ]
    },
    "30 Polynomials and the FFT": {
        "details": {
            "level": 2,
            "start_page": 919,
            "end_page": 947,
            "text_content_snippet": "30\nPolynomials and the FFT\nThe straightforward method of adding two polynomials of degree n takes \u201a.n/\ntime, but the straightforward method of multiplying them takes \u201a.n2/ time. In this\nchapter, we shall show how the fast Fourier transform, or FFT, can reduce the time\nto multiply polynomials to \u201a.n lg n/.\nThe most common use for Fourier transforms, and hence the FFT, is in signal\nprocessing. A signal is given in the time domain: as a function mapping time to\namplitude. Fourier analysis allows us..."
        },
        "sources": [
            {
                "source_text": "Charles Van Loan. Computational Frameworks for the Fast Fourier Transform. Society for\nIndustrial and Applied Mathematics, 1992.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "Charles Van Loan. Computational Frameworks for the Fast Fourier Transform. Society for\nIndustrial and Applied Mathematics, 1992.",
                "context_sentence": "Chapter notes\nVan Loan\u2019s book [343] provides an outstanding treatment of the fast Fourier trans-\nform."
            },
            {
                "source_text": "Alan V. Oppenheim and Ronald W. Schafer, with John R. Buck.\nDiscrete-Time Signal\nProcessing. Prentice Hall, second edition, 1998.",
                "context_sentence": "For an excellent introduction\nto signal processing, a popular FFT application area, see the texts by Oppenheim\nand Schafer [266] and Oppenheim and Willsky [267]."
            },
            {
                "source_text": "Alan V. Oppenheim and Alan S. Willsky, with S. Hamid Nawab. Signals and Systems.\nPrentice Hall, second edition, 1997.",
                "context_sentence": "For an excellent introduction\nto signal processing, a popular FFT application area, see the texts by Oppenheim\nand Schafer [266] and Oppenheim and Willsky [267]."
            },
            {
                "source_text": "Rafael C. Gonzalez and Richard E. Woods. Digital Image Processing. Addison-Wesley,\n1992.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "William K. Pratt. Digital Image Processing. John Wiley & Sons, fourth edition, 2007.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "Richard Tolimieri, Myoung An, and Chao Lu. Mathematics of Multidimensional Fourier\nTransform Algorithms. Springer, second edition, 1997.",
                "context_sentence": "The books by Gonzalez and\nWoods [146] and Pratt [281] discuss multidimensional Fourier transforms and their\nuse in image processing, and books by Tolimieri, An, and Lu [338] and Van Loan\n[343] discuss the mathematics of multidimensional fast Fourier transforms."
            },
            {
                "source_text": "James W. Cooley and John W. Tukey. An algorithm for the machine calculation of complex\nFourier series. Mathematics of Computation, 19(90):297\u2013301, 1965.",
                "context_sentence": "Cooley and Tukey [76] are widely credited with devising the FFT in the 1960s."
            },
            {
                "source_text": "Michael T. Heideman, Don H. Johnson, and C. Sidney Burrus. Gauss and the history of the\nFast Fourier Transform. IEEE ASSP Magazine, 1(4):14\u201321, 1984.",
                "context_sentence": "Although Press,\nTeukolsky, Vetterling, and Flannery attribute the origins of the method to Runge\nand K\u00a8onig in 1924, an article by Heideman, Johnson, and Burrus [163] traces the\nhistory of the FFT as far back as C."
            },
            {
                "source_text": "Matteo Frigo and Steven G. Johnson. The design and implementation of FFTW3. Proceed-\nings of the IEEE, 93(2):216\u2013231, 2005.",
                "context_sentence": "Frigo and Johnson [117] developed a fast and \ufb02exible implementation of the\nFFT, called FFTW (\u201cfastest Fourier transform in the West\u201d)."
            },
            {
                "source_text": "Antony F. Ware. Fast approximate Fourier transforms for irregularly spaced data. SIAM\nReview, 40(4):838\u2013856, 1998.",
                "context_sentence": "The article by Ware [348] provides an overview."
            }
        ]
    },
    "31 Number-Theoretic Algorithms": {
        "details": {
            "level": 2,
            "start_page": 947,
            "end_page": 1006,
            "text_content_snippet": "31\nNumber-Theoretic Algorithms\nNumber theory was once viewed as a beautiful but largely useless subject in pure\nmathematics. Today number-theoretic algorithms are used widely, due in large part\nto the invention of cryptographic schemes based on large prime numbers. These\nschemes are feasible because we can \ufb01nd large primes easily, and they are secure\nbecause we do not know how to factor the product of large primes (or solve related\nproblems, such as computing discrete logarithms) ef\ufb01ciently. Thi..."
        },
        "sources": [
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "Chapter notes\nNiven and Zuckerman [265] provide an excellent introduction to elementary num-\nber theory."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "We omit the proof (but see, for example, Niven and Zuckerman [265])."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "We omit the proof of the following theorem, which is\nproven by Niven and Zuckerman [265]."
            },
            {
                "source_text": "Gary L. Miller. Riemann\u2019s hypothesis and tests for primality. Journal of Computer and\nSystem Sciences, 13(3):300\u2013317, 1976.",
                "context_sentence": "The randomized primality-testing algorithm presented here is due to Miller [255]\nand Rabin [289]; it is the fastest randomized primality-testing algorithm known,\nto within constant factors."
            },
            {
                "source_text": "Gary L. Miller. Riemann\u2019s hypothesis and tests for primality. Journal of Computer and\nSystem Sciences, 13(3):300\u2013317, 1976.",
                "context_sentence": "See Miller [255].)\n31.7-3\n?"
            },
            {
                "source_text": "Carl Pomerance.\nOn the distribution of pseudoprimes.\nMathematics of Computation,\n37(156):587\u2013593, 1981.",
                "context_sentence": "Using more\nprecise estimates due to Pomerance [279] of the number of base-2 pseudoprimes of\na given size, we may estimate that a randomly chosen 512-bit number that is called\nprime by the above procedure has less than one chance in 1020 of being a base-2\npseudoprime, and a randomly chosen 1024-bit number that is called prime has less\nthan one chance in 1041 of being a base-2 pseudoprime."
            },
            {
                "source_text": "Donald E. Knuth. Seminumerical Algorithms, volume 2 of The Art of Computer Program-\nming. Addison-Wesley, 1969. Third edition, 1997.",
                "context_sentence": "Knuth [210] discusses the origin of Euclid\u2019s algorithm."
            },
            {
                "source_text": "Donald E. Knuth. Seminumerical Algorithms, volume 2 of The Art of Computer Program-\nming. Addison-Wesley, 1969. Third edition, 1997.",
                "context_sentence": "Knuth [210] contains a good discussion of algorithms for \ufb01nding the\n\nNotes for Chapter 31\n983\ngreatest common divisor, as well as other basic number-theoretic algorithms."
            },
            {
                "source_text": "Eric Bach. Number-theoretic algorithms. In Annual Review of Computer Science, volume 4,\npages 119\u2013172. Annual Reviews, Inc., 1990.",
                "context_sentence": "Bach\n[30] and Riesel [295] provide more recent surveys of computational number the-\nory."
            },
            {
                "source_text": "Hans Riesel. Prime Numbers and Computer Methods for Factorization, volume 126 of\nProgress in Mathematics. Birkh\u00a8auser, second edition, 1994.",
                "context_sentence": "Bach\n[30] and Riesel [295] provide more recent surveys of computational number the-\nory."
            },
            {
                "source_text": "John D. Dixon. Factorization and primality tests. The American Mathematical Monthly,\n91(6):333\u2013352, 1984.",
                "context_sentence": "Dixon [91] gives an overview of factorization and primality testing."
            },
            {
                "source_text": "Carl Pomerance, editor. Proceedings of the AMS Symposia in Applied Mathematics: Com-\nputational Number Theory and Cryptography. American Mathematical Society, 1990.",
                "context_sentence": "The\nconference proceedings edited by Pomerance [280] contains several excellent sur-\nvey articles."
            },
            {
                "source_text": "Eric Bach and Jeffrey Shallit. Algorithmic Number Theory\u2014Volume I: Ef\ufb01cient Algorithms.\nThe MIT Press, 1996.",
                "context_sentence": "More recently, Bach and Shallit [31] have provided an exceptional\noverview of the basics of computational number theory."
            },
            {
                "source_text": "Jeffrey Shallit. Origins of the analysis of the Euclidean algorithm. Historia Mathematica,\n21(4):401\u2013419, 1994.",
                "context_sentence": "Shallit [312] chronicles the history of\nthe analysis of Euclid\u2019s algorithm."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithm for testing primality. Journal of Number Theory,\n12(1):128\u2013138, 1980.",
                "context_sentence": "The randomized primality-testing algorithm presented here is due to Miller [255]\nand Rabin [289]; it is the fastest randomized primality-testing algorithm known,\nto within constant factors."
            },
            {
                "source_text": "Eric Bach. Private communication, 1989.",
                "context_sentence": "The proof of Theorem 31.39 is a slight adaptation of\none suggested by Bach [29]."
            },
            {
                "source_text": "Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Mathe-\nmatics, 160(2):781\u2013793, 2004.",
                "context_sentence": "In 2002, however, Agrawal, Kayal, and\nSaxema [4] surprised everyone with their deterministic polynomial-time primality-\ntesting algorithm."
            },
            {
                "source_text": "H. Cohen and H. W. Lenstra, Jr. Primality testing and Jacobi sums. Mathematics of Com-\nputation, 42(165):297\u2013330, 1984.",
                "context_sentence": "Until then, the fastest deterministic primality testing algorithm\nknown, due to Cohen and Lenstra [73], ran in time .lg n/O.lg lg lg n/ on input n, which\nis just slightly superpolynomial."
            },
            {
                "source_text": "Pierre Beauchemin, Gilles Brassard, Claude Cr\u00b4epeau, Claude Goutier, and Carl Pomerance.\nThe generation of random numbers that are probably prime. Journal of Cryptology, 1(1):53\u2013\n64, 1988.",
                "context_sentence": "The problem of \ufb01nding large \u201crandom\u201d primes is nicely discussed in an article\nby Beauchemin, Brassard, Cr\u00b4epeau, Goutier, and Pomerance [36]."
            },
            {
                "source_text": "Whit\ufb01eld Dif\ufb01e and Martin E. Hellman. New directions in cryptography. IEEE Transac-\ntions on Information Theory, IT-22(6):644\u2013654, 1976.",
                "context_sentence": "The concept of a public-key cryptosystem is due to Dif\ufb01e and Hellman [87]."
            },
            {
                "source_text": "Ronald L. Rivest, Adi Shamir, and Leonard M. Adleman. A method for obtaining digital\nsignatures and public-key cryptosystems.\nCommunications of the ACM, 21(2):120\u2013126,\n1978. See also U.S. Patent 4,405,829.",
                "context_sentence": "The RSA cryptosystem was proposed in 1977 by Rivest, Shamir, and Adleman\n[296]."
            },
            {
                "source_text": "Sha\ufb01Goldwasser and Silvio Micali. Probabilistic encryption. Journal of Computer and\nSystem Sciences, 28(2):270\u2013299, 1984.\n\nBibliography\n1239",
                "context_sentence": "For ex-\nample, Goldwasser and Micali [142] show that randomization can be an effective\ntool in the design of secure public-key encryption schemes."
            },
            {
                "source_text": "Sha\ufb01Goldwasser, Silvio Micali, and Ronald L. Rivest. A digital signature scheme secure\nagainst adaptive chosen-message attacks.\nSIAM Journal on Computing, 17(2):281\u2013308,\n1988.",
                "context_sentence": "For signature schemes,\n\n984\nChapter 31\nNumber-Theoretic Algorithms\nGoldwasser, Micali, and Rivest [143] present a digital-signature scheme for which\nevery conceivable type of forgery is provably as dif\ufb01cult as factoring."
            },
            {
                "source_text": "Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. Handbook of Applied\nCryptography. CRC Press, 1997.",
                "context_sentence": "Menezes,\nvan Oorschot, and Vanstone [254] provide an overview of applied cryptography."
            },
            {
                "source_text": "J. M. Pollard. A Monte Carlo method for factorization. BIT, 15(3):331\u2013334, 1975.",
                "context_sentence": "The rho heuristic for integer factorization was invented by Pollard [277]."
            },
            {
                "source_text": "Richard P. Brent. An improved Monte Carlo factorization algorithm. BIT, 20(2):176\u2013184,\n1980.",
                "context_sentence": "The\nversion presented here is a variant proposed by Brent [56]."
            },
            {
                "source_text": "J. P. Buhler, H. W. Lenstra, Jr., and Carl Pomerance. Factoring integers with the number\n\ufb01eld sieve. In A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number\nField Sieve, volume 1554 of Lecture Notes in Mathematics, pages 50\u201394. Springer, 1993.",
                "context_sentence": "The general number-\ufb01eld sieve factoring algorithm (as developed by Buh-\nler, Lenstra, and Pomerance [57] as an extension of the ideas in the number-\ufb01eld\nsieve factoring algorithm by Pollard [278] and Lenstra et al."
            },
            {
                "source_text": "J. M. Pollard. Factoring with cubic integers. In A. K. Lenstra and H. W. Lenstra, Jr., editors,\nThe Development of the Number Field Sieve, volume 1554 of Lecture Notes in Mathematics,\npages 4\u201310. Springer, 1993.",
                "context_sentence": "The general number-\ufb01eld sieve factoring algorithm (as developed by Buh-\nler, Lenstra, and Pomerance [57] as an extension of the ideas in the number-\ufb01eld\nsieve factoring algorithm by Pollard [278] and Lenstra et al."
            },
            {
                "source_text": "A. K. Lenstra, H. W. Lenstra, Jr., M. S. Manasse, and J. M. Pollard. The number \ufb01eld sieve.\nIn A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number Field Sieve,\nvolume 1554 of Lecture Notes in Mathematics, pages 11\u201342. Springer, 1993.",
                "context_sentence": "[232] and re\ufb01ned by\nCoppersmith [77] and others) is perhaps the most ef\ufb01cient such algorithm in gen-\neral for large inputs."
            },
            {
                "source_text": "Don Coppersmith.\nModi\ufb01cations to the number \ufb01eld sieve.\nJournal of Cryptology,\n6(3):169\u2013180, 1993.",
                "context_sentence": "[232] and re\ufb01ned by\nCoppersmith [77] and others) is perhaps the most ef\ufb01cient such algorithm in gen-\neral for large inputs."
            },
            {
                "source_text": "H. W. Lenstra, Jr.\nFactoring integers with elliptic curves.\nAnnals of Mathematics,\n126(3):649\u2013673, 1987.",
                "context_sentence": "The elliptic-curve method due to Lenstra [233] may be more effective for some\ninputs than the number-\ufb01eld sieve method, since, like Pollard\u2019s rho method, it can\n\ufb01nd a small prime factor p quite quickly."
            }
        ]
    },
    "32 String Matching": {
        "details": {
            "level": 2,
            "start_page": 1006,
            "end_page": 1035,
            "text_content_snippet": "32\nString Matching\nText-editing programs frequently need to \ufb01nd all occurrences of a pattern in the\ntext. Typically, the text is a document being edited, and the pattern searched for is a\nparticular word supplied by the user. Ef\ufb01cient algorithms for this problem\u2014called\n\u201cstring matching\u201d\u2014can greatly aid the responsiveness of the text-editing program.\nAmong their many other applications, string-matching algorithms search for par-\nticular patterns in DNA sequences. Internet search engines also use ..."
        },
        "sources": [
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "Chapter notes\nThe relation of string matching to the theory of \ufb01nite automata is discussed by\nAho, Hopcroft, and Ullman [5]."
            },
            {
                "source_text": "Donald E. Knuth, James H. Morris, Jr., and Vaughan R. Pratt. Fast pattern matching in\nstrings. SIAM Journal on Computing, 6(2):323\u2013350, 1977.",
                "context_sentence": "The Knuth-Morris-Pratt algorithm [214] was\ninvented independently by Knuth and Pratt and by Morris; they published their\nwork jointly."
            },
            {
                "source_text": "Edward M. Reingold, Kenneth J. Urban, and David Gries. K-M-P string matching revisited.\nInformation Processing Letters, 64(5):217\u2013223, 1997.",
                "context_sentence": "Reingold, Urban, and Gries [294] give an alternative treatment of the\nKnuth-Morris-Pratt algorithm."
            },
            {
                "source_text": "Richard M. Karp and Michael O. Rabin. Ef\ufb01cient randomized pattern-matching algorithms.\nIBM Journal of Research and Development, 31(2):249\u2013260, 1987.",
                "context_sentence": "The Rabin-Karp algorithm was proposed by Karp\nand Rabin [201]."
            },
            {
                "source_text": "Zvi Galil and Joel Seiferas. Time-space-optimal string matching. Journal of Computer and\nSystem Sciences, 26(3):280\u2013294, 1983.",
                "context_sentence": "Galil and Seiferas [126] give an interesting deterministic linear-\ntime string-matching algorithm that uses only O.1/ space beyond that required to\nstore the pattern and text."
            }
        ]
    },
    "33 Computational Geometry": {
        "details": {
            "level": 2,
            "start_page": 1035,
            "end_page": 1069,
            "text_content_snippet": "33\nComputational Geometry\nComputational geometry is the branch of computer science that studies algorithms\nfor solving geometric problems. In modern engineering and mathematics, com-\nputational geometry has applications in such diverse \ufb01elds as computer graphics,\nrobotics, VLSI design, computer-aided design, molecular modeling, metallurgy,\nmanufacturing, textile layout, forestry, and statistics. The input to a computational-\ngeometry problem is typically a description of a set of geometric objec..."
        },
        "sources": [
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "The O.n lg n/-time divide-and-conquer algorithm for \ufb01nding the closest pair of\npoints is by Shamos and appears in Preparata and Shamos [282]."
            },
            {
                "source_text": "Herbert Edelsbrunner. Algorithms in Combinatorial Geometry, volume 10 of EATCS Mono-\ngraphs on Theoretical Computer Science. Springer, 1987.",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Joseph O\u2019Rourke. Computational Geometry in C. Cambridge University Press, second\nedition, 1998.",
                "context_sentence": "Books on computational geometry include those by Preparata and\nShamos [282], Edelsbrunner [99], and O\u2019Rourke [269]."
            },
            {
                "source_text": "Michael I. Shamos and Dan Hoey. Geometric intersection problems. In Proceedings of the\n17th Annual Symposium on Foundations of Computer Science, pages 208\u2013215, 1976.",
                "context_sentence": "The algorithm of Section 33.2, which determines whether any segments inter-\nsect, is due to Shamos and Hoey [313]."
            },
            {
                "source_text": "Ronald L. Graham. An ef\ufb01cient algorithm for determining the convex hull of a \ufb01nite planar\nset. Information Processing Letters, 1(4):132\u2013133, 1972.",
                "context_sentence": "The original version of Graham\u2019s scan is given by Graham [150]."
            },
            {
                "source_text": "R. A. Jarvis. On the identi\ufb01cation of the convex hull of a \ufb01nite set of points in the plane.\nInformation Processing Letters, 2(1):18\u201321, 1973.",
                "context_sentence": "The package-\nwrapping algorithm is due to Jarvis [189]."
            },
            {
                "source_text": "Andrew C.-C. Yao. A lower bound to \ufb01nding convex hulls. Journal of the ACM, 28(4):780\u2013\n787, 1981.",
                "context_sentence": "Using a decision-tree model of com-\nputation, Yao [359] proved a worst-case lower bound of \u0004.n lg n/ for the running\ntime of any convex-hull algorithm."
            },
            {
                "source_text": "D. G. Kirkpatrick and R. Seidel. The ultimate planar convex hull algorithm? SIAM Journal\non Computing, 15(2):287\u2013299, 1986.",
                "context_sentence": "When the number of vertices h of the con-\nvex hull is taken into account, the prune-and-search algorithm of Kirkpatrick and\nSeidel [206], which takes O.n lg h/ time, is asymptotically optimal."
            }
        ]
    },
    "34 NP-Completeness": {
        "details": {
            "level": 2,
            "start_page": 1069,
            "end_page": 1127,
            "text_content_snippet": "34\nNP-Completeness\nAlmost all the algorithms we have studied thus far have been polynomial-time al-\ngorithms: on inputs of size n, their worst-case running time is O.nk/ for some con-\nstant k. You might wonder whether all problems can be solved in polynomial time.\nThe answer is no. For example, there are problems, such as Turing\u2019s famous \u201cHalt-\ning Problem,\u201d that cannot be solved by any computer, no matter how much time we\nallow. There are also problems that can be solved, but not in time O.nk/ ..."
        },
        "sources": [
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and\nComputation. Addison-Wesley, 1979.",
                "context_sentence": "1See Hopcroft and Ullman [180] or Lewis and Papadimitriou [236] for a thorough treatment of the\nTuring-machine model."
            },
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and\nComputation. Addison-Wesley, 1979.",
                "context_sentence": "Hopcroft and Ullman [180] give a good presentation of NP-completeness in terms of\nnondeterministic models of computation."
            },
            {
                "source_text": "Harry R. Lewis and Christos H. Papadimitriou. Elements of the Theory of Computation.\nPrentice Hall, second edition, 1998.",
                "context_sentence": "1See Hopcroft and Ullman [180] or Lewis and Papadimitriou [236] for a thorough treatment of the\nTuring-machine model."
            },
            {
                "source_text": "Harry R. Lewis and Christos H. Papadimitriou. Elements of the Theory of Computation.\nPrentice Hall, second edition, 1998.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "J. Hartmanis and R. E. Stearns. On the computational complexity of algorithms. Transac-\ntions of the American Mathematical Society, 117:285\u2013306, May 1965.\n\n1240\nBibliography",
                "context_sentence": "Let L be the language accepted by some\n6For more on complexity classes, see the seminal paper by Hartmanis and Stearns [162]."
            },
            {
                "source_text": "Michael R. Garey and David S. Johnson. Computers and Intractability: A Guide to the\nTheory of NP-Completeness. W. H. Freeman, 1979.",
                "context_sentence": "Chapter notes\nThe book by Garey and Johnson [129] provides a wonderful guide to NP-complete-\nness, discussing the theory at length and providing a catalogue of many problems\nthat were known to be NP-complete in 1979."
            },
            {
                "source_text": "John E. Hopcroft, Rajeev Motwani, and Jeffrey D. Ullman. Introduction to Automata The-\nory, Languages, and Computation. Addison Wesley, third edition, 2006.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Christos H. Papadimitriou. Computational Complexity. Addison-Wesley, 1994.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Michael Sipser. Introduction to the Theory of Computation. Thomson Course Technology,\nsecond edition, 2006.",
                "context_sentence": "Hopcroft, Motwani, and Ullman [177], Lewis\nand Papadimitriou [236], Papadimitriou [270], and Sipser [317] have good treat-\nments of NP-completeness in the context of complexity theory."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. McGraw-Hill,\n2008.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Richard Johnsonbaugh and Marcus Schaefer. Algorithms. Pearson Prentice Hall, 2004.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Jon Kleinberg and \u00b4Eva Tardos. Algorithm Design. Addison-Wesley, 2006.",
                "context_sentence": "NP-completeness\nand several reductions also appear in books by Aho, Hopcroft, and Ullman [5];\nDasgupta, Papadimitriou, and Vazirani [82]; Johnsonbaugh and Schaefer [193];\nand Kleinberg and Tardos [208]."
            },
            {
                "source_text": "Alan Cobham. The intrinsic computational dif\ufb01culty of functions. In Proceedings of the\n1964 Congress for Logic, Methodology, and the Philosophy of Science, pages 24\u201330. North-\nHolland, 1964.",
                "context_sentence": "The class P was introduced in 1964 by Cobham [72] and, independently, in 1965\nby Edmonds [100], who also introduced the class NP and conjectured that P \u00a4 NP."
            },
            {
                "source_text": "Jack Edmonds. Paths, trees, and \ufb02owers. Canadian Journal of Mathematics, 17:449\u2013467,\n1965.",
                "context_sentence": "The class P was introduced in 1964 by Cobham [72] and, independently, in 1965\nby Edmonds [100], who also introduced the class NP and conjectured that P \u00a4 NP."
            },
            {
                "source_text": "Stephen Cook. The complexity of theorem proving procedures. In Proceedings of the Third\nAnnual ACM Symposium on Theory of Computing, pages 151\u2013158, 1971.",
                "context_sentence": "The notion of NP-completeness was proposed in 1971 by Cook [75], who gave\nthe \ufb01rst NP-completeness proofs for formula satis\ufb01ability and 3-CNF satis\ufb01abil-\nity."
            },
            {
                "source_text": "L. A. Levin. Universal sorting problems. Problemy Peredachi Informatsii, 9(3):265\u2013266,\n1973. In Russian.",
                "context_sentence": "Levin [234] independently discovered the notion, giving an NP-completeness\nproof for a tiling problem."
            },
            {
                "source_text": "Richard M. Karp. Reducibility among combinatorial problems. In Raymond E. Miller and\nJames W. Thatcher, editors, Complexity of Computer Computations, pages 85\u2013103. Plenum\nPress, 1972.",
                "context_sentence": "Karp [199] introduced the methodology of reductions\nin 1972 and demonstrated the rich variety of NP-complete problems."
            },
            {
                "source_text": "Sanjeev Arora. Probabilistic checking of proofs and the hardness of approximation prob-\nlems. PhD thesis, University of California, Berkeley, 1994.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Sanjeev Arora.\nThe approximability of NP-hard problems.\nIn Proceedings of the 30th\nAnnual ACM Symposium on Theory of Computing, pages 337\u2013348, 1998.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "Ernst W. Mayr, Hans J\u00a8urgen Pr\u00a8omel, and Angelika Steger, editors. Lectures on Proof Veri\ufb01-\ncation and Approximation Algorithms, volume 1367 of Lecture Notes in Computer Science.\nSpringer, 1998.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            },
            {
                "source_text": "David S. Johnson. The NP-completeness column: An ongoing guide\u2014The tale of the sec-\nond prover. Journal of Algorithms, 13(3):502\u2013524, 1992.",
                "context_sentence": "An introduction to this area can be found\nin Arora\u2019s thesis [20]; a chapter by Arora and Lund in Hochbaum [172]; a survey\narticle by Arora [21]; a book edited by Mayr, Pr\u00a8omel, and Steger [246]; and a\nsurvey article by Johnson [191]."
            }
        ]
    },
    "35 Approximation Algorithms": {
        "details": {
            "level": 2,
            "start_page": 1127,
            "end_page": 1163,
            "text_content_snippet": "35\nApproximation Algorithms\nMany problems of practical signi\ufb01cance are NP-complete, yet they are too impor-\ntant to abandon merely because we don\u2019t know how to \ufb01nd an optimal solution in\npolynomial time. Even if a problem is NP-complete, there may be hope. We have at\nleast three ways to get around NP-completeness. First, if the actual inputs are small,\nan algorithm with exponential running time may be perfectly satisfactory. Second,\nwe may be able to isolate important special cases that we can s..."
        },
        "sources": [
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "The vertex-cover problem has been studied exten-\nsively (Hochbaum [172] lists 16 different approximation algorithms for this prob-\nlem), but all the approximation ratios are at least 2 \u0005 o.1/."
            },
            {
                "source_text": "Michael R. Garey, R. L. Graham, and J. D. Ullman. Worst-case analyis of memory al-\nlocation algorithms. In Proceedings of the Fourth Annual ACM Symposium on Theory of\nComputing, pages 143\u2013150, 1972.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "The randomized algorithm for MAX-3-CNF satis\ufb01ability is implicit in the work\nof Johnson [190]."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "Hochbaum\n[172] credits Garey, Graham, and Ullman [128] and Johnson [190] with formal-\nizing the concept of a polynomial-time approximation algorithm."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "Ronald L. Graham. Bounds for certain multiprocessor anomalies. Bell System Technical\nJournal, 45(9):1563\u20131581, 1966.",
                "context_sentence": "The \ufb01rst such\nalgorithm is often credited to Graham [149]."
            },
            {
                "source_text": "G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.\nComplexity and Approximation: Combinatorial Optimization Problems and Their Approx-\nimability Properties. Springer, 1999.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Vijay V. Vazirani. Approximation Algorithms. Springer, 2001.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "David B. Shmoys. Computing near-optimal solutions to combinatorial optimization prob-\nlems. In William Cook, L\u00b4aszl\u00b4o Lov\u00b4asz, and Paul Seymour, editors, Combinatorial Opti-\nmization, volume 20 of DIMACS Series in Discrete Mathematics and Theoretical Computer\nScience. American Mathematical Society, 1995.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Philip N. Klein and Neal E. Young. Approximation algorithms for NP-hard optimization\nproblems. In CRC Handbook on Algorithms, pages 34-1\u201334-19. CRC Press, 1999.",
                "context_sentence": "[26], Hochbaum [172], and Vazirani [345]\ndeal exclusively with approximation algorithms, as do surveys by Shmoys [315]\nand Klein and Young [207]."
            },
            {
                "source_text": "Michael R. Garey and David S. Johnson. Computers and Intractability: A Guide to the\nTheory of NP-Completeness. W. H. Freeman, 1979.",
                "context_sentence": "Several other texts, such as Garey and Johnson [129]\nand Papadimitriou and Steiglitz [271], have signi\ufb01cant coverage of approximation\nalgorithms as well."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "Several other texts, such as Garey and Johnson [129]\nand Papadimitriou and Steiglitz [271], have signi\ufb01cant coverage of approximation\nalgorithms as well."
            },
            {
                "source_text": "Eugene L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys, editors. The\nTraveling Salesman Problem. John Wiley & Sons, 1985.",
                "context_sentence": "Lawler, Lenstra, Rinnooy Kan, and Shmoys [225] provide an\nextensive treatment of approximation algorithms for the traveling-salesman prob-\nlem."
            },
            {
                "source_text": "D. J. Rosenkrantz, R. E. Stearns, and P. M. Lewis. An analysis of several heuristics for the\ntraveling salesman problem. SIAM Journal on Computing, 6(3):563\u2013581, 1977.",
                "context_sentence": "The algorithm APPROX-TSP-TOUR appears in a paper by Rosenkrantz, Stearns,\nand Lewis [298]."
            },
            {
                "source_text": "Sanjeev Arora. Polynomial time approximation schemes for euclidean traveling salesman\nand other geometric problems. Journal of the ACM, 45(5):753\u2013782, 1998.",
                "context_sentence": "Arora [22] and Mitchell [257] have shown that if the points are in the euclidean\nplane, there is a polynomial-time approximation scheme."
            },
            {
                "source_text": "Joseph S. B. Mitchell. Guillotine subdivisions approximate polygonal subdivisions: A sim-\nple polynomial-time approximation scheme for geometric TSP, k-MST, and related prob-\nlems. SIAM Journal on Computing, 28(4):1298\u20131309, 1999.",
                "context_sentence": "Arora [22] and Mitchell [257] have shown that if the points are in the euclidean\nplane, there is a polynomial-time approximation scheme."
            },
            {
                "source_text": "S. Sahni and T. Gonzalez.\nP-complete approximation problems.\nJournal of the ACM,\n23(3):555\u2013565, 1976.",
                "context_sentence": "Theorem 35.3 is due to\nSahni and Gonzalez [301]."
            },
            {
                "source_text": "V. Chv\u00b4atal. A greedy heuristic for the set-covering problem. Mathematics of Operations\nResearch, 4(3):233\u2013235, 1979.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz. On the ratio of optimal integral and fractional covers. Discrete Mathemat-\nics, 13(4):383\u2013390, 1975.",
                "context_sentence": "The analysis of the greedy heuristic for the set-covering problem is modeled\nafter the proof published by Chv\u00b4atal [68] of a more general result; the basic result\nas presented here is due to Johnson [190] and Lov\u00b4asz [238]."
            },
            {
                "source_text": "Oscar H. Ibarra and Chul E. Kim. Fast approximation algorithms for the knapsack and sum\nof subset problems. Journal of the ACM, 22(4):463\u2013468, 1975.",
                "context_sentence": "The algorithm APPROX-SUBSET-SUM and its analysis are loosely modeled after\nrelated approximation algorithms for the knapsack and subset-sum problems by\nIbarra and Kim [187]."
            },
            {
                "source_text": "Daniel Bienstock and Benjamin McClosky. Tightening simplex mixed-integer sets with\nguaranteed bounds. Optimization Online, July 2008.",
                "context_sentence": "Problem 35-7 is a combinatorial version of a more general result on approximat-\ning knapsack-type integer programs by Bienstock and McClosky [45]."
            },
            {
                "source_text": "Dorit S. Hochbaum. Ef\ufb01cient bounds for the stable set, vertex cover and set packing prob-\nlems. Discrete Applied Mathematics, 6(3):243\u2013254, 1983.",
                "context_sentence": "The weighted vertex-cover algorithm is by Hochbaum [171]."
            },
            {
                "source_text": "P. Raghavan and C. D. Thompson. Randomized rounding: A technique for provably good\nalgorithms and algorithmic proofs. Combinatorica, 7(4):365\u2013374, 1987.",
                "context_sentence": "This technique was \ufb01rst used by Raghavan\nand Thompson [290], and it has had many subsequent uses."
            },
            {
                "source_text": "Rajeev Motwani, Joseph (Sef\ufb01) Naor, and Prabakhar Raghavan. Randomized approxima-\ntion algorithms in combinatorial optimization. In Dorit Hochbaum, editor, Approximation\nAlgorithms for NP-Hard Problems, chapter 11, pages 447\u2013481. PWS Publishing Company,\n1997.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson. The primal-dual method for approximation\nalgorithms and its application to network design problems. In Dorit S. Hochbaum, editor,\nApproximation Algorithms for NP-Hard Problems, pages 144\u2013191. PWS Publishing Com-\npany, 1997.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Tom Leighton and Satish Rao. Multicommodity max-\ufb02ow min-cut theorems and their use\nin designing approximation algorithms. Journal of the ACM, 46(6):787\u2013832, 1999.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson.\nImproved approximation algorithms for\nmaximum cut and satis\ufb01ability problems using semide\ufb01nite programming. Journal of the\nACM, 42(6):1115\u20131145, 1995.",
                "context_sentence": "(See Motwani, Naor,\nand Raghavan [261] for a survey.) Several other notable recent ideas in the \ufb01eld\nof approximation algorithms include the primal-dual method (see Goemans and\nWilliamson [135] for a survey), \ufb01nding sparse cuts for use in divide-and-conquer\nalgorithms [229], and the use of semide\ufb01nite programming [134]."
            },
            {
                "source_text": "Sanjeev Arora and Carsten Lund. Hardness of approximations. In Dorit S. Hochbaum,\neditor, Approximation Algorithms for NP-Hard Problems, pages 399\u2013446. PWS Publishing\nCompany, 1997.",
                "context_sentence": "In addition to the references there,\nthe chapter by Arora and Lund [23] contains a good description of the relation-\nship between probabilistically checkable proofs and the hardness of approximating\nvarious problems."
            }
        ]
    },
    "VIII Appendix: Mathematical Background": {
        "details": {
            "level": 1,
            "start_page": 1163,
            "end_page": 1252,
            "text_content_snippet": "VIII\nAppendix: Mathematical Background\n\nIntroduction\nWhen we analyze algorithms, we often need to draw upon a body of mathematical\ntools. Some of these tools are as simple as high-school algebra, but others may be\nnew to you. In Part I, we saw how to manipulate asymptotic notations and solve\nrecurrences. This appendix comprises a compendium of several other concepts and\nmethods we use to analyze algorithms. As noted in the introduction to Part I, you\nmay have seen much of the material in this ap..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Appendix notes\nKnuth [209] provides an excellent reference for the material presented here."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Liu [237] are good references for elementary combinatorics\nand counting."
            },
            {
                "source_text": "Tom M. Apostol. Calculus, volume 1. Blaisdell Publishing Company, second edition, 1967.",
                "context_sentence": "You\ncan \ufb01nd basic properties of series in any good calculus book, such as Apostol [18]\nor Thomas et al."
            },
            {
                "source_text": "George B. Thomas, Jr., Maurice D. Weir, Joel Hass, and Frank R. Giordano.\nThomas\u2019\nCalculus. Addison-Wesley, eleventh edition, 2005.",
                "context_sentence": "[334]."
            },
            {
                "source_text": "Frank Harary. Graph Theory. Addison-Wesley, 1969.",
                "context_sentence": "The book by Harary [160] provides a useful compendium of many de\ufb01nitions\nand results from graph theory."
            },
            {
                "source_text": "H. Chernoff. A measure of asymptotic ef\ufb01ciency for tests of a hypothesis based on the sum\nof observations. Annals of Mathematical Statistics, 23(4):493\u2013507, 1952.",
                "context_sentence": "Chernoff [66]\nand Hoeffding [173] provided bounds on the tails of distributions."
            },
            {
                "source_text": "W. Hoeffding. On the distribution of the number of successes in independent trials. Annals\nof Mathematical Statistics, 27(3):713\u2013721, 1956.",
                "context_sentence": "Chernoff [66]\nand Hoeffding [173] provided bounds on the tails of distributions."
            },
            {
                "source_text": "C. L. Liu. Introduction to Combinatorial Mathematics. McGraw-Hill, 1968.",
                "context_sentence": "Knuth [209] and Liu [237] are good references for elementary combinatorics\nand counting."
            },
            {
                "source_text": "Patrick Billingsley. Probability and Measure. John Wiley & Sons, second edition, 1986.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Kai Lai Chung. Elementary Probability Theory with Stochastic Processes. Springer, 1974.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Alvin W. Drake. Fundamentals of Applied Probability Theory. McGraw-Hill, 1967.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "William Feller. An Introduction to Probability Theory and Its Applications. John Wiley &\nSons, third edition, 1968.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Y. A. Rozanov. Probability Theory: A Concise Course. Dover, 1969.\n\nBibliography\n1247",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            }
        ]
    },
    "A Summations": {
        "details": {
            "level": 2,
            "start_page": 1166,
            "end_page": 1179,
            "text_content_snippet": "A\nSummations\nWhen an algorithm contains an iterative control construct such as a while or for\nloop, we can express its running time as the sum of the times spent on each exe-\ncution of the body of the loop. For example, we found in Section 2.2 that the j th\niteration of insertion sort took time proportional to j in the worst case. By adding\nup the time spent on each iteration, we obtained the summation (or series)\nn\nX\njD2\nj :\nWhen we evaluated this summation, we attained a bound of \u201a.n2/ on the ..."
        },
        "sources": [
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Appendix notes\nKnuth [209] provides an excellent reference for the material presented here."
            },
            {
                "source_text": "Tom M. Apostol. Calculus, volume 1. Blaisdell Publishing Company, second edition, 1967.",
                "context_sentence": "You\ncan \ufb01nd basic properties of series in any good calculus book, such as Apostol [18]\nor Thomas et al."
            },
            {
                "source_text": "George B. Thomas, Jr., Maurice D. Weir, Joel Hass, and Frank R. Giordano.\nThomas\u2019\nCalculus. Addison-Wesley, eleventh edition, 2005.",
                "context_sentence": "[334]."
            }
        ]
    },
    "B Sets, Etc.": {
        "details": {
            "level": 2,
            "start_page": 1179,
            "end_page": 1204,
            "text_content_snippet": "B\nSets, Etc.\nMany chapters of this book touch on the elements of discrete mathematics. This\nappendix reviews more completely the notations, de\ufb01nitions, and elementary prop-\nerties of sets, relations, functions, graphs, and trees. If you are already well versed\nin this material, you can probably just skim this chapter.\nB.1\nSets\nA set is a collection of distinguishable objects, called its members or elements. If\nan object x is a member of a set S, we write x 2 S (read \u201cx is a member of S\u201d\nor, more..."
        },
        "sources": [
            {
                "source_text": "Frank Harary. Graph Theory. Addison-Wesley, 1969.",
                "context_sentence": "The book by Harary [160] provides a useful compendium of many de\ufb01nitions\nand results from graph theory."
            }
        ]
    },
    "C Counting and Probability": {
        "details": {
            "level": 2,
            "start_page": 1204,
            "end_page": 1238,
            "text_content_snippet": "C\nCounting and Probability\nThis appendix reviews elementary combinatorics and probability theory. If you\nhave a good background in these areas, you may want to skim the beginning of this\nappendix lightly and concentrate on the later sections. Most of this book\u2019s chapters\ndo not require probability, but for some chapters it is essential.\nSection C.1 reviews elementary results in counting theory, including standard\nformulas for counting permutations and combinations. The axioms of probability\nand ..."
        },
        "sources": [
            {
                "source_text": "H. Chernoff. A measure of asymptotic ef\ufb01ciency for tests of a hypothesis based on the sum\nof observations. Annals of Mathematical Statistics, 23(4):493\u2013507, 1952.",
                "context_sentence": "Chernoff [66]\nand Hoeffding [173] provided bounds on the tails of distributions."
            },
            {
                "source_text": "W. Hoeffding. On the distribution of the number of successes in independent trials. Annals\nof Mathematical Statistics, 27(3):713\u2013721, 1956.",
                "context_sentence": "Chernoff [66]\nand Hoeffding [173] provided bounds on the tails of distributions."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "Knuth [209] and Liu [237] are good references for elementary combinatorics\nand counting."
            },
            {
                "source_text": "C. L. Liu. Introduction to Combinatorial Mathematics. McGraw-Hill, 1968.",
                "context_sentence": "Knuth [209] and Liu [237] are good references for elementary combinatorics\nand counting."
            },
            {
                "source_text": "Patrick Billingsley. Probability and Measure. John Wiley & Sons, second edition, 1986.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Kai Lai Chung. Elementary Probability Theory with Stochastic Processes. Springer, 1974.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Alvin W. Drake. Fundamentals of Applied Probability Theory. McGraw-Hill, 1967.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "William Feller. An Introduction to Probability Theory and Its Applications. John Wiley &\nSons, third edition, 1968.",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            },
            {
                "source_text": "Y. A. Rozanov. Probability Theory: A Concise Course. Dover, 1969.\n\nBibliography\n1247",
                "context_sentence": "Standard textbooks such as Billingsley [46], Chung [67], Drake [95],\nFeller [104], and Rozanov [300] offer comprehensive introductions to probability."
            }
        ]
    },
    "D Matrices": {
        "details": {
            "level": 2,
            "start_page": 1238,
            "end_page": 1252,
            "text_content_snippet": "D\nMatrices\nMatrices arise in numerous applications, including, but by no means limited to,\nscienti\ufb01c computing. If you have seen matrices before, much of the material in this\nappendix will be familiar to you, but some of it might be new. Section D.1 covers\nbasic matrix de\ufb01nitions and operations, and Section D.2 presents some basic matrix\nproperties.\nD.1\nMatrices and matrix operations\nIn this section, we review some basic concepts of matrix theory and some funda-\nmental properties of matrices.\nMa..."
        },
        "sources": []
    },
    "Bibliography": {
        "details": {
            "level": 1,
            "start_page": 1252,
            "end_page": 1272,
            "text_content_snippet": "Bibliography\n[1] Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.\n[2] G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.\n[3] Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.\n[4] Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Math..."
        },
        "sources": [
            {
                "source_text": "Milton Abramowitz and Irene A. Stegun, editors. Handbook of Mathematical Functions.\nDover, 1965.",
                "context_sentence": "Bibliography\n[1] Milton Abramowitz and Irene A."
            },
            {
                "source_text": "G. M. Adel\u2019son-Vel\u2019ski\u02d8\u0131 and E. M. Landis. An algorithm for the organization of information.\nSoviet Mathematics Doklady, 3(5):1259\u20131263, 1962.",
                "context_sentence": "[2] G."
            },
            {
                "source_text": "Alok Aggarwal and Jeffrey Scott Vitter. The input/output complexity of sorting and related\nproblems. Communications of the ACM, 31(9):1116\u20131127, 1988.",
                "context_sentence": "[3] Alok Aggarwal and Jeffrey Scott Vitter."
            },
            {
                "source_text": "Manindra Agrawal, Neeraj Kayal, and Nitin Saxena.\nPRIMES is in P. Annals of Mathe-\nmatics, 160(2):781\u2013793, 2004.",
                "context_sentence": "[4] Manindra Agrawal, Neeraj Kayal, and Nitin Saxena."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman.\nThe Design and Analysis of\nComputer Algorithms. Addison-Wesley, 1974.",
                "context_sentence": "[5] Alfred V."
            },
            {
                "source_text": "Alfred V. Aho, John E. Hopcroft, and Jeffrey D. Ullman. Data Structures and Algorithms.\nAddison-Wesley, 1983.",
                "context_sentence": "[6] Alfred V."
            },
            {
                "source_text": "Ravindra K. Ahuja, Thomas L. Magnanti, and James B. Orlin. Network Flows: Theory,\nAlgorithms, and Applications. Prentice Hall, 1993.",
                "context_sentence": "[7] Ravindra K."
            },
            {
                "source_text": "Ravindra K. Ahuja, Kurt Mehlhorn, James B. Orlin, and Robert E. Tarjan. Faster algorithms\nfor the shortest path problem. Journal of the ACM, 37:213\u2013223, 1990.",
                "context_sentence": "[8] Ravindra K."
            },
            {
                "source_text": "Ravindra K. Ahuja and James B. Orlin. A fast and simple algorithm for the maximum \ufb02ow\nproblem. Operations Research, 37(5):748\u2013759, 1989.",
                "context_sentence": "[9] Ravindra K."
            },
            {
                "source_text": "Ravindra K. Ahuja, James B. Orlin, and Robert E. Tarjan. Improved time bounds for the\nmaximum \ufb02ow problem. SIAM Journal on Computing, 18(5):939\u2013954, 1989.",
                "context_sentence": "[10] Ravindra K."
            },
            {
                "source_text": "Mikl\u00b4os Ajtai, Nimrod Megiddo, and Orli Waarts. Improved algorithms and analysis for\nsecretary problems and generalizations. In Proceedings of the 36th Annual Symposium on\nFoundations of Computer Science, pages 473\u2013482, 1995.",
                "context_sentence": "[11] Mikl\u00b4os Ajtai, Nimrod Megiddo, and Orli Waarts."
            },
            {
                "source_text": "Selim G. Akl. The Design and Analysis of Parallel Algorithms. Prentice Hall, 1989.",
                "context_sentence": "[12] Selim G."
            },
            {
                "source_text": "Mohamad Akra and Louay Bazzi. On the solution of linear recurrence equations. Compu-\ntational Optimization and Applications, 10(2):195\u2013210, 1998.",
                "context_sentence": "[13] Mohamad Akra and Louay Bazzi."
            },
            {
                "source_text": "Noga Alon. Generating pseudo-random permutations and maximum \ufb02ow algorithms. In-\nformation Processing Letters, 35:201\u2013204, 1990.\n\n1232\nBibliography",
                "context_sentence": "[14] Noga Alon."
            },
            {
                "source_text": "Arne Andersson. Balanced search trees made simple. In Proceedings of the Third Workshop\non Algorithms and Data Structures, volume 709 of Lecture Notes in Computer Science,\npages 60\u201371. Springer, 1993.",
                "context_sentence": "1232\nBibliography\n[15] Arne Andersson."
            },
            {
                "source_text": "Arne Andersson. Faster deterministic sorting and searching in linear space. In Proceedings\nof the 37th Annual Symposium on Foundations of Computer Science, pages 135\u2013141, 1996.",
                "context_sentence": "[16] Arne Andersson."
            },
            {
                "source_text": "Arne Andersson, Torben Hagerup, Stefan Nilsson, and Rajeev Raman. Sorting in linear\ntime? Journal of Computer and System Sciences, 57:74\u201393, 1998.",
                "context_sentence": "[17] Arne Andersson, Torben Hagerup, Stefan Nilsson, and Rajeev Raman."
            },
            {
                "source_text": "Tom M. Apostol. Calculus, volume 1. Blaisdell Publishing Company, second edition, 1967.",
                "context_sentence": "[18] Tom M."
            },
            {
                "source_text": "Nimar S. Arora, Robert D. Blumofe, and C. Greg Plaxton. Thread scheduling for multipro-\ngrammed multiprocessors. In Proceedings of the 10th Annual ACM Symposium on Parallel\nAlgorithms and Architectures, pages 119\u2013129, 1998.",
                "context_sentence": "[19] Nimar S."
            },
            {
                "source_text": "Sanjeev Arora. Probabilistic checking of proofs and the hardness of approximation prob-\nlems. PhD thesis, University of California, Berkeley, 1994.",
                "context_sentence": "[20] Sanjeev Arora."
            },
            {
                "source_text": "Sanjeev Arora.\nThe approximability of NP-hard problems.\nIn Proceedings of the 30th\nAnnual ACM Symposium on Theory of Computing, pages 337\u2013348, 1998.",
                "context_sentence": "[21] Sanjeev Arora."
            },
            {
                "source_text": "Sanjeev Arora. Polynomial time approximation schemes for euclidean traveling salesman\nand other geometric problems. Journal of the ACM, 45(5):753\u2013782, 1998.",
                "context_sentence": "[22] Sanjeev Arora."
            },
            {
                "source_text": "Sanjeev Arora and Carsten Lund. Hardness of approximations. In Dorit S. Hochbaum,\neditor, Approximation Algorithms for NP-Hard Problems, pages 399\u2013446. PWS Publishing\nCompany, 1997.",
                "context_sentence": "[23] Sanjeev Arora and Carsten Lund."
            },
            {
                "source_text": "Javed A. Aslam. A simple bound on the expected height of a randomly built binary search\ntree. Technical Report TR2001-387, Dartmouth College Department of Computer Science,\n2001.",
                "context_sentence": "[24] Javed A."
            },
            {
                "source_text": "Mikhail J. Atallah, editor. Algorithms and Theory of Computation Handbook. CRC Press,\n1999.",
                "context_sentence": "[25] Mikhail J."
            },
            {
                "source_text": "G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. Marchetti-Spaccamela, and M. Protasi.\nComplexity and Approximation: Combinatorial Optimization Problems and Their Approx-\nimability Properties. Springer, 1999.",
                "context_sentence": "[26] G."
            },
            {
                "source_text": "Shai Avidan and Ariel Shamir. Seam carving for content-aware image resizing. ACM Trans-\nactions on Graphics, 26(3), article 10, 2007.",
                "context_sentence": "[27] Shai Avidan and Ariel Shamir."
            },
            {
                "source_text": "Sara Baase and Alan Van Gelder. Computer Algorithms: Introduction to Design and Anal-\nysis. Addison-Wesley, third edition, 2000.",
                "context_sentence": "[28] Sara Baase and Alan Van Gelder."
            },
            {
                "source_text": "Eric Bach. Private communication, 1989.",
                "context_sentence": "[29] Eric Bach."
            },
            {
                "source_text": "Eric Bach. Number-theoretic algorithms. In Annual Review of Computer Science, volume 4,\npages 119\u2013172. Annual Reviews, Inc., 1990.",
                "context_sentence": "[30] Eric Bach."
            },
            {
                "source_text": "Eric Bach and Jeffrey Shallit. Algorithmic Number Theory\u2014Volume I: Ef\ufb01cient Algorithms.\nThe MIT Press, 1996.",
                "context_sentence": "[31] Eric Bach and Jeffrey Shallit."
            },
            {
                "source_text": "David H. Bailey, King Lee, and Horst D. Simon. Using Strassen\u2019s algorithm to accelerate\nthe solution of linear systems. The Journal of Supercomputing, 4(4):357\u2013371, 1990.\n\nBibliography\n1233",
                "context_sentence": "[32] David H."
            },
            {
                "source_text": "Surender Baswana, Ramesh Hariharan, and Sandeep Sen.\nImproved decremental algo-\nrithms for maintaining transitive closure and all-pairs shortest paths. Journal of Algorithms,\n62(2):74\u201392, 2007.",
                "context_sentence": "Bibliography\n1233\n[33] Surender Baswana, Ramesh Hariharan, and Sandeep Sen."
            },
            {
                "source_text": "R. Bayer. Symmetric binary B-trees: Data structure and maintenance algorithms. Acta\nInformatica, 1(4):290\u2013306, 1972.",
                "context_sentence": "[34] R."
            },
            {
                "source_text": "R. Bayer and E. M. McCreight. Organization and maintenance of large ordered indexes.\nActa Informatica, 1(3):173\u2013189, 1972.",
                "context_sentence": "[35] R."
            },
            {
                "source_text": "Pierre Beauchemin, Gilles Brassard, Claude Cr\u00b4epeau, Claude Goutier, and Carl Pomerance.\nThe generation of random numbers that are probably prime. Journal of Cryptology, 1(1):53\u2013\n64, 1988.",
                "context_sentence": "[36] Pierre Beauchemin, Gilles Brassard, Claude Cr\u00b4epeau, Claude Goutier, and Carl Pomerance."
            },
            {
                "source_text": "Richard Bellman. Dynamic Programming. Princeton University Press, 1957.",
                "context_sentence": "[37] Richard Bellman."
            },
            {
                "source_text": "Richard Bellman. On a routing problem. Quarterly of Applied Mathematics, 16(1):87\u201390,\n1958.",
                "context_sentence": "[38] Richard Bellman."
            },
            {
                "source_text": "Michael Ben-Or. Lower bounds for algebraic computation trees. In Proceedings of the\nFifteenth Annual ACM Symposium on Theory of Computing, pages 80\u201386, 1983.",
                "context_sentence": "[39] Michael Ben-Or."
            },
            {
                "source_text": "Michael A. Bender, Erik D. Demaine, and Martin Farach-Colton. Cache-oblivious B-trees.\nIn Proceedings of the 41st Annual Symposium on Foundations of Computer Science, pages\n399\u2013409, 2000.",
                "context_sentence": "[40] Michael A."
            },
            {
                "source_text": "Samuel W. Bent and John W. John. Finding the median requires 2n comparisons. In Pro-\nceedings of the Seventeenth Annual ACM Symposium on Theory of Computing, pages 213\u2013\n216, 1985.",
                "context_sentence": "[41] Samuel W."
            },
            {
                "source_text": "Jon L. Bentley. Writing Ef\ufb01cient Programs. Prentice Hall, 1982.",
                "context_sentence": "[42] Jon L."
            },
            {
                "source_text": "Jon L. Bentley. Programming Pearls. Addison-Wesley, 1986.",
                "context_sentence": "[43] Jon L."
            },
            {
                "source_text": "Jon L. Bentley, Dorothea Haken, and James B. Saxe. A general method for solving divide-\nand-conquer recurrences. SIGACT News, 12(3):36\u201344, 1980.",
                "context_sentence": "[44] Jon L."
            },
            {
                "source_text": "Daniel Bienstock and Benjamin McClosky. Tightening simplex mixed-integer sets with\nguaranteed bounds. Optimization Online, July 2008.",
                "context_sentence": "[45] Daniel Bienstock and Benjamin McClosky."
            },
            {
                "source_text": "Patrick Billingsley. Probability and Measure. John Wiley & Sons, second edition, 1986.",
                "context_sentence": "[46] Patrick Billingsley."
            },
            {
                "source_text": "Guy E. Blelloch. Scan Primitives and Parallel Vector Models. PhD thesis, Department of\nElectrical Engineering and Computer Science, MIT, 1989. Available as MIT Laboratory for\nComputer Science Technical Report MIT/LCS/TR-463.",
                "context_sentence": "[47] Guy E."
            },
            {
                "source_text": "Guy E. Blelloch.\nProgramming parallel algorithms.\nCommunications of the ACM,\n39(3):85\u201397, 1996.",
                "context_sentence": "[48] Guy E."
            },
            {
                "source_text": "Guy E. Blelloch, Phillip B. Gibbons, and Yossi Matias. Provably ef\ufb01cient scheduling for\nlanguages with \ufb01ne-grained parallelism. In Proceedings of the 7th Annual ACM Symposium\non Parallel Algorithms and Architectures, pages 1\u201312, 1995.",
                "context_sentence": "[49] Guy E."
            },
            {
                "source_text": "Manuel Blum, Robert W. Floyd, Vaughan Pratt, Ronald L. Rivest, and Robert E. Tarjan.\nTime bounds for selection. Journal of Computer and System Sciences, 7(4):448\u2013461, 1973.",
                "context_sentence": "[50] Manuel Blum, Robert W."
            },
            {
                "source_text": "Robert D. Blumofe, Christopher F. Joerg, Bradley C. Kuszmaul, Charles E. Leiserson,\nKeith H. Randall, and Yuli Zhou. Cilk: An ef\ufb01cient multithreaded runtime system. Journal\nof Parallel and Distributed Computing, 37(1):55\u201369, 1996.\n\n1234\nBibliography",
                "context_sentence": "[51] Robert D."
            },
            {
                "source_text": "Robert D. Blumofe and Charles E. Leiserson. Scheduling multithreaded computations by\nwork stealing. Journal of the ACM, 46(5):720\u2013748, 1999.",
                "context_sentence": "1234\nBibliography\n[52] Robert D."
            },
            {
                "source_text": "B\u00b4ela Bollob\u00b4as. Random Graphs. Academic Press, 1985.",
                "context_sentence": "[53] B\u00b4ela Bollob\u00b4as."
            },
            {
                "source_text": "Gilles Brassard and Paul Bratley. Fundamentals of Algorithmics. Prentice Hall, 1996.",
                "context_sentence": "[54] Gilles Brassard and Paul Bratley."
            },
            {
                "source_text": "Richard P. Brent. The parallel evaluation of general arithmetic expressions. Journal of the\nACM, 21(2):201\u2013206, 1974.",
                "context_sentence": "[55] Richard P."
            },
            {
                "source_text": "Richard P. Brent. An improved Monte Carlo factorization algorithm. BIT, 20(2):176\u2013184,\n1980.",
                "context_sentence": "[56] Richard P."
            },
            {
                "source_text": "J. P. Buhler, H. W. Lenstra, Jr., and Carl Pomerance. Factoring integers with the number\n\ufb01eld sieve. In A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number\nField Sieve, volume 1554 of Lecture Notes in Mathematics, pages 50\u201394. Springer, 1993.",
                "context_sentence": "[57] J."
            },
            {
                "source_text": "J. Lawrence Carter and Mark N. Wegman. Universal classes of hash functions. Journal of\nComputer and System Sciences, 18(2):143\u2013154, 1979.",
                "context_sentence": "[58] J."
            },
            {
                "source_text": "Barbara Chapman, Gabriele Jost, and Ruud van der Pas. Using OpenMP: Portable Shared\nMemory Parallel Programming. The MIT Press, 2007.",
                "context_sentence": "[59] Barbara Chapman, Gabriele Jost, and Ruud van der Pas."
            },
            {
                "source_text": "Bernard Chazelle. A minimum spanning tree algorithm with inverse-Ackermann type com-\nplexity. Journal of the ACM, 47(6):1028\u20131047, 2000.",
                "context_sentence": "[60] Bernard Chazelle."
            },
            {
                "source_text": "Joseph Cheriyan and Torben Hagerup. A randomized maximum-\ufb02ow algorithm. SIAM\nJournal on Computing, 24(2):203\u2013226, 1995.",
                "context_sentence": "[61] Joseph Cheriyan and Torben Hagerup."
            },
            {
                "source_text": "Joseph Cheriyan and S. N. Maheshwari. Analysis of pre\ufb02ow push algorithms for maximum\nnetwork \ufb02ow. SIAM Journal on Computing, 18(6):1057\u20131086, 1989.",
                "context_sentence": "[62] Joseph Cheriyan and S."
            },
            {
                "source_text": "Boris V. Cherkassky and Andrew V. Goldberg. On implementing the push-relabel method\nfor the maximum \ufb02ow problem. Algorithmica, 19(4):390\u2013410, 1997.",
                "context_sentence": "[63] Boris V."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Tomasz Radzik. Shortest paths algorithms:\nTheory and experimental evaluation. Mathematical Programming, 73(2):129\u2013174, 1996.",
                "context_sentence": "[64] Boris V."
            },
            {
                "source_text": "Boris V. Cherkassky, Andrew V. Goldberg, and Craig Silverstein. Buckets, heaps, lists and\nmonotone priority queues. SIAM Journal on Computing, 28(4):1326\u20131346, 1999.",
                "context_sentence": "[65] Boris V."
            },
            {
                "source_text": "H. Chernoff. A measure of asymptotic ef\ufb01ciency for tests of a hypothesis based on the sum\nof observations. Annals of Mathematical Statistics, 23(4):493\u2013507, 1952.",
                "context_sentence": "[66] H."
            },
            {
                "source_text": "Kai Lai Chung. Elementary Probability Theory with Stochastic Processes. Springer, 1974.",
                "context_sentence": "[67] Kai Lai Chung."
            },
            {
                "source_text": "V. Chv\u00b4atal. A greedy heuristic for the set-covering problem. Mathematics of Operations\nResearch, 4(3):233\u2013235, 1979.",
                "context_sentence": "[68] V."
            },
            {
                "source_text": "V. Chv\u00b4atal. Linear Programming. W. H. Freeman and Company, 1983.",
                "context_sentence": "[69] V."
            },
            {
                "source_text": "V. Chv\u00b4atal, D. A. Klarner, and D. E. Knuth. Selected combinatorial research problems.\nTechnical Report STAN-CS-72-292, Computer Science Department, Stanford University,\n1972.",
                "context_sentence": "[70] V."
            },
            {
                "source_text": "Cilk Arts, Inc., Burlington, Massachusetts. Cilk++ Programmer\u2019s Guide, 2008. Available\nat http://www.cilk.com/archive/docs/cilk1guide.\n\nBibliography\n1235",
                "context_sentence": "[71] Cilk Arts, Inc., Burlington, Massachusetts."
            },
            {
                "source_text": "Alan Cobham. The intrinsic computational dif\ufb01culty of functions. In Proceedings of the\n1964 Congress for Logic, Methodology, and the Philosophy of Science, pages 24\u201330. North-\nHolland, 1964.",
                "context_sentence": "Bibliography\n1235\n[72] Alan Cobham."
            },
            {
                "source_text": "H. Cohen and H. W. Lenstra, Jr. Primality testing and Jacobi sums. Mathematics of Com-\nputation, 42(165):297\u2013330, 1984.",
                "context_sentence": "[73] H."
            },
            {
                "source_text": "D. Comer. The ubiquitous B-tree. ACM Computing Surveys, 11(2):121\u2013137, 1979.",
                "context_sentence": "[74] D."
            },
            {
                "source_text": "Stephen Cook. The complexity of theorem proving procedures. In Proceedings of the Third\nAnnual ACM Symposium on Theory of Computing, pages 151\u2013158, 1971.",
                "context_sentence": "[75] Stephen Cook."
            },
            {
                "source_text": "James W. Cooley and John W. Tukey. An algorithm for the machine calculation of complex\nFourier series. Mathematics of Computation, 19(90):297\u2013301, 1965.",
                "context_sentence": "[76] James W."
            },
            {
                "source_text": "Don Coppersmith.\nModi\ufb01cations to the number \ufb01eld sieve.\nJournal of Cryptology,\n6(3):169\u2013180, 1993.",
                "context_sentence": "[77] Don Coppersmith."
            },
            {
                "source_text": "Don Coppersmith and Shmuel Winograd. Matrix multiplication via arithmetic progression.\nJournal of Symbolic Computation, 9(3):251\u2013280, 1990.",
                "context_sentence": "[78] Don Coppersmith and Shmuel Winograd."
            },
            {
                "source_text": "Thomas H. Cormen, Thomas Sundquist, and Leonard F. Wisniewski. Asymptotically tight\nbounds for performing BMMC permutations on parallel disk systems. SIAM Journal on\nComputing, 28(1):105\u2013136, 1998.",
                "context_sentence": "[79] Thomas H."
            },
            {
                "source_text": "Don Dailey and Charles E. Leiserson. Using Cilk to write multiprocessor chess programs.\nIn H. J. van den Herik and B. Monien, editors, Advances in Computer Games, volume 9,\npages 25\u201352. University of Maastricht, Netherlands, 2001.",
                "context_sentence": "[80] Don Dailey and Charles E."
            },
            {
                "source_text": "Paolo D\u2019Alberto and Alexandru Nicolau. Adaptive Strassen\u2019s matrix multiplication. In\nProceedings of the 21st Annual International Conference on Supercomputing, pages 284\u2013\n292, June 2007.",
                "context_sentence": "[81] Paolo D\u2019Alberto and Alexandru Nicolau."
            },
            {
                "source_text": "Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani. Algorithms. McGraw-Hill,\n2008.",
                "context_sentence": "[82] Sanjoy Dasgupta, Christos Papadimitriou, and Umesh Vazirani."
            },
            {
                "source_text": "Roman Dementiev, Lutz Kettner, Jens Mehnert, and Peter Sanders. Engineering a sorted list\ndata structure for 32 bit keys. In Proceedings of the Sixth Workshop on Algorithm Engineer-\ning and Experiments and the First Workshop on Analytic Algorithmics and Combinatorics,\npages 142\u2013151, January 2004.",
                "context_sentence": "[83] Roman Dementiev, Lutz Kettner, Jens Mehnert, and Peter Sanders."
            },
            {
                "source_text": "Camil Demetrescu and Giuseppe F. Italiano. Fully dynamic all pairs shortest paths with real\nedge weights. Journal of Computer and System Sciences, 72(5):813\u2013837, 2006.",
                "context_sentence": "[84] Camil Demetrescu and Giuseppe F."
            },
            {
                "source_text": "Eric V. Denardo and Bennett L. Fox. Shortest-route methods: 1. Reaching, pruning, and\nbuckets. Operations Research, 27(1):161\u2013186, 1979.",
                "context_sentence": "[85] Eric V."
            },
            {
                "source_text": "Martin Dietzfelbinger, Anna Karlin, Kurt Mehlhorn, Friedhelm Meyer auf der Heide, Hans\nRohnert, and Robert E. Tarjan. Dynamic perfect hashing: Upper and lower bounds. SIAM\nJournal on Computing, 23(4):738\u2013761, 1994.",
                "context_sentence": "[86] Martin Dietzfelbinger, Anna Karlin, Kurt Mehlhorn, Friedhelm Meyer auf der Heide, Hans\nRohnert, and Robert E."
            },
            {
                "source_text": "Whit\ufb01eld Dif\ufb01e and Martin E. Hellman. New directions in cryptography. IEEE Transac-\ntions on Information Theory, IT-22(6):644\u2013654, 1976.",
                "context_sentence": "[87] Whit\ufb01eld Dif\ufb01e and Martin E."
            },
            {
                "source_text": "E. W. Dijkstra. A note on two problems in connexion with graphs. Numerische Mathematik,\n1(1):269\u2013271, 1959.\n\n1236\nBibliography",
                "context_sentence": "[88] E."
            },
            {
                "source_text": "E. A. Dinic. Algorithm for solution of a problem of maximum \ufb02ow in a network with power\nestimation. Soviet Mathematics Doklady, 11(5):1277\u20131280, 1970.",
                "context_sentence": "1236\nBibliography\n[89] E."
            },
            {
                "source_text": "Brandon Dixon, Monika Rauch, and Robert E. Tarjan. Veri\ufb01cation and sensitivity analysis\nof minimum spanning trees in linear time. SIAM Journal on Computing, 21(6):1184\u20131192,\n1992.",
                "context_sentence": "[90] Brandon Dixon, Monika Rauch, and Robert E."
            },
            {
                "source_text": "John D. Dixon. Factorization and primality tests. The American Mathematical Monthly,\n91(6):333\u2013352, 1984.",
                "context_sentence": "[91] John D."
            },
            {
                "source_text": "Dorit Dor, Johan H\u02daastad, Staffan Ulfberg, and Uri Zwick. On lower bounds for selecting\nthe median. SIAM Journal on Discrete Mathematics, 14(3):299\u2013311, 2001.",
                "context_sentence": "[92] Dorit Dor, Johan H\u02daastad, Staffan Ulfberg, and Uri Zwick."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Selecting the median. SIAM Journal on Computing, 28(5):1722\u2013\n1758, 1999.",
                "context_sentence": "[93] Dorit Dor and Uri Zwick."
            },
            {
                "source_text": "Dorit Dor and Uri Zwick. Median selection requires .2 C \b/n comparisons. SIAM Journal\non Discrete Mathematics, 14(3):312\u2013325, 2001.",
                "context_sentence": "[94] Dorit Dor and Uri Zwick."
            },
            {
                "source_text": "Alvin W. Drake. Fundamentals of Applied Probability Theory. McGraw-Hill, 1967.",
                "context_sentence": "[95] Alvin W."
            },
            {
                "source_text": "James R. Driscoll, Harold N. Gabow, Ruth Shrairman, and Robert E. Tarjan. Relaxed heaps:\nAn alternative to Fibonacci heaps with applications to parallel computation. Communica-\ntions of the ACM, 31(11):1343\u20131354, 1988.",
                "context_sentence": "[96] James R."
            },
            {
                "source_text": "James R. Driscoll, Neil Sarnak, Daniel D. Sleator, and Robert E. Tarjan.\nMaking data\nstructures persistent. Journal of Computer and System Sciences, 38(1):86\u2013124, 1989.",
                "context_sentence": "[97] James R."
            },
            {
                "source_text": "Derek L. Eager, John Zahorjan, and Edward D. Lazowska. Speedup versus ef\ufb01ciency in\nparallel systems. IEEE Transactions on Computers, 38(3):408\u2013423, 1989.",
                "context_sentence": "[98] Derek L."
            },
            {
                "source_text": "Herbert Edelsbrunner. Algorithms in Combinatorial Geometry, volume 10 of EATCS Mono-\ngraphs on Theoretical Computer Science. Springer, 1987.",
                "context_sentence": "[99] Herbert Edelsbrunner."
            },
            {
                "source_text": "Jack Edmonds. Paths, trees, and \ufb02owers. Canadian Journal of Mathematics, 17:449\u2013467,\n1965.",
                "context_sentence": "[100] Jack Edmonds."
            },
            {
                "source_text": "Jack Edmonds. Matroids and the greedy algorithm. Mathematical Programming, 1(1):127\u2013\n136, 1971.",
                "context_sentence": "[101] Jack Edmonds."
            },
            {
                "source_text": "Jack Edmonds and Richard M. Karp. Theoretical improvements in the algorithmic ef\ufb01-\nciency for network \ufb02ow problems. Journal of the ACM, 19(2):248\u2013264, 1972.",
                "context_sentence": "[102] Jack Edmonds and Richard M."
            },
            {
                "source_text": "Shimon Even. Graph Algorithms. Computer Science Press, 1979.",
                "context_sentence": "[103] Shimon Even."
            },
            {
                "source_text": "William Feller. An Introduction to Probability Theory and Its Applications. John Wiley &\nSons, third edition, 1968.",
                "context_sentence": "[104] William Feller."
            },
            {
                "source_text": "Robert W. Floyd.\nAlgorithm 97 (SHORTEST PATH).\nCommunications of the ACM,\n5(6):345, 1962.",
                "context_sentence": "[105] Robert W."
            },
            {
                "source_text": "Robert W. Floyd. Algorithm 245 (TREESORT). Communications of the ACM, 7(12):701,\n1964.",
                "context_sentence": "[106] Robert W."
            },
            {
                "source_text": "Robert W. Floyd. Permuting information in idealized two-level storage. In Raymond E.\nMiller and James W. Thatcher, editors, Complexity of Computer Computations, pages 105\u2013\n109. Plenum Press, 1972.\n\nBibliography\n1237",
                "context_sentence": "[107] Robert W."
            },
            {
                "source_text": "Robert W. Floyd and Ronald L. Rivest. Expected time bounds for selection. Communica-\ntions of the ACM, 18(3):165\u2013172, 1975.",
                "context_sentence": "Bibliography\n1237\n[108] Robert W."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and D. R. Fulkerson. Flows in Networks. Princeton University Press,\n1962.",
                "context_sentence": "[109] Lestor R."
            },
            {
                "source_text": "Lestor R. Ford, Jr. and Selmer M. Johnson. A tournament problem. The American Mathe-\nmatical Monthly, 66(5):387\u2013389, 1959.",
                "context_sentence": "[110] Lestor R."
            },
            {
                "source_text": "Michael L. Fredman. New bounds on the complexity of the shortest path problem. SIAM\nJournal on Computing, 5(1):83\u201389, 1976.",
                "context_sentence": "[111] Michael L."
            },
            {
                "source_text": "Michael L. Fredman, J\u00b4anos Koml\u00b4os, and Endre Szemer\u00b4edi. Storing a sparse table with O.1/\nworst case access time. Journal of the ACM, 31(3):538\u2013544, 1984.",
                "context_sentence": "[112] Michael L."
            },
            {
                "source_text": "Michael L. Fredman and Michael E. Saks. The cell probe complexity of dynamic data struc-\ntures. In Proceedings of the Twenty First Annual ACM Symposium on Theory of Computing,\npages 345\u2013354, 1989.",
                "context_sentence": "[113] Michael L."
            },
            {
                "source_text": "Michael L. Fredman and Robert E. Tarjan. Fibonacci heaps and their uses in improved\nnetwork optimization algorithms. Journal of the ACM, 34(3):596\u2013615, 1987.",
                "context_sentence": "[114] Michael L."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Surpassing the information theoretic bound with\nfusion trees. Journal of Computer and System Sciences, 47(3):424\u2013436, 1993.",
                "context_sentence": "[115] Michael L."
            },
            {
                "source_text": "Michael L. Fredman and Dan E. Willard. Trans-dichotomous algorithms for minimum span-\nning trees and shortest paths. Journal of Computer and System Sciences, 48(3):533\u2013551,\n1994.",
                "context_sentence": "[116] Michael L."
            },
            {
                "source_text": "Matteo Frigo and Steven G. Johnson. The design and implementation of FFTW3. Proceed-\nings of the IEEE, 93(2):216\u2013231, 2005.",
                "context_sentence": "[117] Matteo Frigo and Steven G."
            },
            {
                "source_text": "Matteo Frigo, Charles E. Leiserson, and Keith H. Randall. The implementation of the Cilk-5\nmultithreaded language. In Proceedings of the 1998 ACM SIGPLAN Conference on Pro-\ngramming Language Design and Implementation, pages 212\u2013223, 1998.",
                "context_sentence": "[118] Matteo Frigo, Charles E."
            },
            {
                "source_text": "Harold N. Gabow. Path-based depth-\ufb01rst search for strong and biconnected components.\nInformation Processing Letters, 74(3\u20134):107\u2013114, 2000.",
                "context_sentence": "[119] Harold N."
            },
            {
                "source_text": "Harold N. Gabow, Z. Galil, T. Spencer, and Robert E. Tarjan. Ef\ufb01cient algorithms for \ufb01nd-\ning minimum spanning trees in undirected and directed graphs. Combinatorica, 6(2):109\u2013\n122, 1986.",
                "context_sentence": "[120] Harold N."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. A linear-time algorithm for a special case of disjoint\nset union. Journal of Computer and System Sciences, 30(2):209\u2013221, 1985.",
                "context_sentence": "[121] Harold N."
            },
            {
                "source_text": "Harold N. Gabow and Robert E. Tarjan. Faster scaling algorithms for network problems.\nSIAM Journal on Computing, 18(5):1013\u20131036, 1989.",
                "context_sentence": "[122] Harold N."
            },
            {
                "source_text": "Zvi Galil and Oded Margalit. All pairs shortest distances for graphs with small integer\nlength edges. Information and Computation, 134(2):103\u2013139, 1997.",
                "context_sentence": "[123] Zvi Galil and Oded Margalit."
            },
            {
                "source_text": "Zvi Galil and Oded Margalit. All pairs shortest paths for graphs with small integer length\nedges. Journal of Computer and System Sciences, 54(2):243\u2013254, 1997.",
                "context_sentence": "[124] Zvi Galil and Oded Margalit."
            },
            {
                "source_text": "Zvi Galil and Kunsoo Park. Dynamic programming with convexity, concavity and sparsity.\nTheoretical Computer Science, 92(1):49\u201376, 1992.\n\n1238\nBibliography",
                "context_sentence": "[125] Zvi Galil and Kunsoo Park."
            },
            {
                "source_text": "Zvi Galil and Joel Seiferas. Time-space-optimal string matching. Journal of Computer and\nSystem Sciences, 26(3):280\u2013294, 1983.",
                "context_sentence": "1238\nBibliography\n[126] Zvi Galil and Joel Seiferas."
            },
            {
                "source_text": "Igal Galperin and Ronald L. Rivest. Scapegoat trees. In Proceedings of the 4th ACM-SIAM\nSymposium on Discrete Algorithms, pages 165\u2013174, 1993.",
                "context_sentence": "[127] Igal Galperin and Ronald L."
            },
            {
                "source_text": "Michael R. Garey, R. L. Graham, and J. D. Ullman. Worst-case analyis of memory al-\nlocation algorithms. In Proceedings of the Fourth Annual ACM Symposium on Theory of\nComputing, pages 143\u2013150, 1972.",
                "context_sentence": "[128] Michael R."
            },
            {
                "source_text": "Michael R. Garey and David S. Johnson. Computers and Intractability: A Guide to the\nTheory of NP-Completeness. W. H. Freeman, 1979.",
                "context_sentence": "[129] Michael R."
            },
            {
                "source_text": "Saul Gass. Linear Programming: Methods and Applications. International Thomson Pub-\nlishing, fourth edition, 1975.",
                "context_sentence": "[130] Saul Gass."
            },
            {
                "source_text": "F\u02d8anic\u02d8a Gavril. Algorithms for minimum coloring, maximum clique, minimum covering by\ncliques, and maximum independent set of a chordal graph. SIAM Journal on Computing,\n1(2):180\u2013187, 1972.",
                "context_sentence": "[131] F\u02d8anic\u02d8a Gavril."
            },
            {
                "source_text": "Alan George and Joseph W-H Liu. Computer Solution of Large Sparse Positive De\ufb01nite\nSystems. Prentice Hall, 1981.",
                "context_sentence": "[132] Alan George and Joseph W-H Liu."
            },
            {
                "source_text": "E. N. Gilbert and E. F. Moore. Variable-length binary encodings. Bell System Technical\nJournal, 38(4):933\u2013967, 1959.",
                "context_sentence": "[133] E."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson.\nImproved approximation algorithms for\nmaximum cut and satis\ufb01ability problems using semide\ufb01nite programming. Journal of the\nACM, 42(6):1115\u20131145, 1995.",
                "context_sentence": "[134] Michel X."
            },
            {
                "source_text": "Michel X. Goemans and David P. Williamson. The primal-dual method for approximation\nalgorithms and its application to network design problems. In Dorit S. Hochbaum, editor,\nApproximation Algorithms for NP-Hard Problems, pages 144\u2013191. PWS Publishing Com-\npany, 1997.",
                "context_sentence": "[135] Michel X."
            },
            {
                "source_text": "Andrew V. Goldberg. Ef\ufb01cient Graph Algorithms for Sequential and Parallel Computers.\nPhD thesis, Department of Electrical Engineering and Computer Science, MIT, 1987.",
                "context_sentence": "[136] Andrew V."
            },
            {
                "source_text": "Andrew V. Goldberg. Scaling algorithms for the shortest paths problem. SIAM Journal on\nComputing, 24(3):494\u2013504, 1995.",
                "context_sentence": "[137] Andrew V."
            },
            {
                "source_text": "Andrew V. Goldberg and Satish Rao. Beyond the \ufb02ow decomposition barrier. Journal of\nthe ACM, 45(5):783\u2013797, 1998.",
                "context_sentence": "[138] Andrew V."
            },
            {
                "source_text": "Andrew V. Goldberg, \u00b4Eva Tardos, and Robert E. Tarjan. Network \ufb02ow algorithms. In Bern-\nhard Korte, L\u00b4aszl\u00b4o Lov\u00b4asz, Hans J\u00a8urgen Pr\u00a8omel, and Alexander Schrijver, editors, Paths,\nFlows, and VLSI-Layout, pages 101\u2013164. Springer, 1990.",
                "context_sentence": "[139] Andrew V."
            },
            {
                "source_text": "Andrew V. Goldberg and Robert E. Tarjan. A new approach to the maximum \ufb02ow problem.\nJournal of the ACM, 35(4):921\u2013940, 1988.",
                "context_sentence": "[140] Andrew V."
            },
            {
                "source_text": "D. Goldfarb and M. J. Todd. Linear programming. In G. L. Nemhauser, A. H. G. Rinnooy-\nKan, and M. J. Todd, editors, Handbook in Operations Research and Management Science,\nVol. 1, Optimization, pages 73\u2013170. Elsevier Science Publishers, 1989.",
                "context_sentence": "[141] D."
            },
            {
                "source_text": "Sha\ufb01Goldwasser and Silvio Micali. Probabilistic encryption. Journal of Computer and\nSystem Sciences, 28(2):270\u2013299, 1984.\n\nBibliography\n1239",
                "context_sentence": "[142] Sha\ufb01Goldwasser and Silvio Micali."
            },
            {
                "source_text": "Sha\ufb01Goldwasser, Silvio Micali, and Ronald L. Rivest. A digital signature scheme secure\nagainst adaptive chosen-message attacks.\nSIAM Journal on Computing, 17(2):281\u2013308,\n1988.",
                "context_sentence": "Bibliography\n1239\n[143] Sha\ufb01Goldwasser, Silvio Micali, and Ronald L."
            },
            {
                "source_text": "Gene H. Golub and Charles F. Van Loan. Matrix Computations. The Johns Hopkins Uni-\nversity Press, third edition, 1996.",
                "context_sentence": "[144] Gene H."
            },
            {
                "source_text": "G. H. Gonnet. Handbook of Algorithms and Data Structures. Addison-Wesley, 1984.",
                "context_sentence": "[145] G."
            },
            {
                "source_text": "Rafael C. Gonzalez and Richard E. Woods. Digital Image Processing. Addison-Wesley,\n1992.",
                "context_sentence": "[146] Rafael C."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Data Structures and Algorithms in Java. John\nWiley & Sons, 1998.",
                "context_sentence": "[147] Michael T."
            },
            {
                "source_text": "Michael T. Goodrich and Roberto Tamassia. Algorithm Design: Foundations, Analysis, and\nInternet Examples. John Wiley & Sons, 2001.",
                "context_sentence": "[148] Michael T."
            },
            {
                "source_text": "Ronald L. Graham. Bounds for certain multiprocessor anomalies. Bell System Technical\nJournal, 45(9):1563\u20131581, 1966.",
                "context_sentence": "[149] Ronald L."
            },
            {
                "source_text": "Ronald L. Graham. An ef\ufb01cient algorithm for determining the convex hull of a \ufb01nite planar\nset. Information Processing Letters, 1(4):132\u2013133, 1972.",
                "context_sentence": "[150] Ronald L."
            },
            {
                "source_text": "Ronald L. Graham and Pavol Hell. On the history of the minimum spanning tree problem.\nAnnals of the History of Computing, 7(1):43\u201357, 1985.",
                "context_sentence": "[151] Ronald L."
            },
            {
                "source_text": "Ronald L. Graham, Donald E. Knuth, and Oren Patashnik.\nConcrete Mathematics.\nAddison-Wesley, second edition, 1994.",
                "context_sentence": "[152] Ronald L."
            },
            {
                "source_text": "David Gries. The Science of Programming. Springer, 1981.",
                "context_sentence": "[153] David Gries."
            },
            {
                "source_text": "M. Gr\u00a8otschel, L\u00b4aszl\u00b4o Lov\u00b4asz, and Alexander Schrijver. Geometric Algorithms and Combi-\nnatorial Optimization. Springer, 1988.",
                "context_sentence": "[154] M."
            },
            {
                "source_text": "Leo J. Guibas and Robert Sedgewick. A dichromatic framework for balanced trees. In\nProceedings of the 19th Annual Symposium on Foundations of Computer Science, pages\n8\u201321, 1978.",
                "context_sentence": "[155] Leo J."
            },
            {
                "source_text": "Dan Gus\ufb01eld. Algorithms on Strings, Trees, and Sequences: Computer Science and Com-\nputational Biology. Cambridge University Press, 1997.",
                "context_sentence": "[156] Dan Gus\ufb01eld."
            },
            {
                "source_text": "H. Halberstam and R. E. Ingram, editors. The Mathematical Papers of Sir William Rowan\nHamilton, volume III (Algebra). Cambridge University Press, 1967.",
                "context_sentence": "[157] H."
            },
            {
                "source_text": "Yijie Han. Improved fast integer sorting in linear space. In Proceedings of the 12th ACM-\nSIAM Symposium on Discrete Algorithms, pages 793\u2013796, 2001.",
                "context_sentence": "[158] Yijie Han."
            },
            {
                "source_text": "Yijie Han. An O.n3.log log n= log n/5=4/ time algorithm for all pairs shortest path. Algo-\nrithmica, 51(4):428\u2013434, 2008.",
                "context_sentence": "[159] Yijie Han."
            },
            {
                "source_text": "Frank Harary. Graph Theory. Addison-Wesley, 1969.",
                "context_sentence": "[160] Frank Harary."
            },
            {
                "source_text": "Gregory C. Harfst and Edward M. Reingold. A potential-based amortized analysis of the\nunion-\ufb01nd data structure. SIGACT News, 31(3):86\u201395, 2000.",
                "context_sentence": "[161] Gregory C."
            },
            {
                "source_text": "J. Hartmanis and R. E. Stearns. On the computational complexity of algorithms. Transac-\ntions of the American Mathematical Society, 117:285\u2013306, May 1965.\n\n1240\nBibliography",
                "context_sentence": "[162] J."
            },
            {
                "source_text": "Michael T. Heideman, Don H. Johnson, and C. Sidney Burrus. Gauss and the history of the\nFast Fourier Transform. IEEE ASSP Magazine, 1(4):14\u201321, 1984.",
                "context_sentence": "1240\nBibliography\n[163] Michael T."
            },
            {
                "source_text": "Monika R. Henzinger and Valerie King. Fully dynamic biconnectivity and transitive clo-\nsure. In Proceedings of the 36th Annual Symposium on Foundations of Computer Science,\npages 664\u2013672, 1995.",
                "context_sentence": "[164] Monika R."
            },
            {
                "source_text": "Monika R. Henzinger and Valerie King. Randomized fully dynamic graph algorithms with\npolylogarithmic time per operation. Journal of the ACM, 46(4):502\u2013516, 1999.",
                "context_sentence": "[165] Monika R."
            },
            {
                "source_text": "Monika R. Henzinger, Satish Rao, and Harold N. Gabow. Computing vertex connectivity:\nNew bounds from old techniques. Journal of Algorithms, 34(2):222\u2013250, 2000.",
                "context_sentence": "[166] Monika R."
            },
            {
                "source_text": "Nicholas J. Higham. Exploiting fast matrix multiplication within the level 3 BLAS. ACM\nTransactions on Mathematical Software, 16(4):352\u2013368, 1990.",
                "context_sentence": "[167] Nicholas J."
            },
            {
                "source_text": "W. Daniel Hillis and Jr. Guy L. Steele. Data parallel algorithms. Communications of the\nACM, 29(12):1170\u20131183, 1986.",
                "context_sentence": "[168] W."
            },
            {
                "source_text": "C. A. R. Hoare. Algorithm 63 (PARTITION) and algorithm 65 (FIND). Communications\nof the ACM, 4(7):321\u2013322, 1961.",
                "context_sentence": "[169] C."
            },
            {
                "source_text": "C. A. R. Hoare. Quicksort. Computer Journal, 5(1):10\u201315, 1962.",
                "context_sentence": "[170] C."
            },
            {
                "source_text": "Dorit S. Hochbaum. Ef\ufb01cient bounds for the stable set, vertex cover and set packing prob-\nlems. Discrete Applied Mathematics, 6(3):243\u2013254, 1983.",
                "context_sentence": "[171] Dorit S."
            },
            {
                "source_text": "Dorit S. Hochbaum, editor. Approximation Algorithms for NP-Hard Problems. PWS Pub-\nlishing Company, 1997.",
                "context_sentence": "[172] Dorit S."
            },
            {
                "source_text": "W. Hoeffding. On the distribution of the number of successes in independent trials. Annals\nof Mathematical Statistics, 27(3):713\u2013721, 1956.",
                "context_sentence": "[173] W."
            },
            {
                "source_text": "Micha Hofri. Probabilistic Analysis of Algorithms. Springer, 1987.",
                "context_sentence": "[174] Micha Hofri."
            },
            {
                "source_text": "Micha Hofri. Analysis of Algorithms. Oxford University Press, 1995.",
                "context_sentence": "[175] Micha Hofri."
            },
            {
                "source_text": "John E. Hopcroft and Richard M. Karp. An n5=2 algorithm for maximum matchings in\nbipartite graphs. SIAM Journal on Computing, 2(4):225\u2013231, 1973.",
                "context_sentence": "[176] John E."
            },
            {
                "source_text": "John E. Hopcroft, Rajeev Motwani, and Jeffrey D. Ullman. Introduction to Automata The-\nory, Languages, and Computation. Addison Wesley, third edition, 2006.",
                "context_sentence": "[177] John E."
            },
            {
                "source_text": "John E. Hopcroft and Robert E. Tarjan. Ef\ufb01cient algorithms for graph manipulation. Com-\nmunications of the ACM, 16(6):372\u2013378, 1973.",
                "context_sentence": "[178] John E."
            },
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Set merging algorithms. SIAM Journal on Com-\nputing, 2(4):294\u2013303, 1973.",
                "context_sentence": "[179] John E."
            },
            {
                "source_text": "John E. Hopcroft and Jeffrey D. Ullman. Introduction to Automata Theory, Languages, and\nComputation. Addison-Wesley, 1979.",
                "context_sentence": "[180] John E."
            },
            {
                "source_text": "Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran. Computer Algorithms. Com-\nputer Science Press, 1998.",
                "context_sentence": "[181] Ellis Horowitz, Sartaj Sahni, and Sanguthevar Rajasekaran."
            },
            {
                "source_text": "T. C. Hu and M. T. Shing. Computation of matrix chain products. Part I. SIAM Journal on\nComputing, 11(2):362\u2013373, 1982.",
                "context_sentence": "[182] T."
            },
            {
                "source_text": "T. C. Hu and M. T. Shing. Computation of matrix chain products. Part II. SIAM Journal on\nComputing, 13(2):228\u2013251, 1984.\n\nBibliography\n1241",
                "context_sentence": "[183] T."
            },
            {
                "source_text": "T. C. Hu and A. C. Tucker. Optimal computer search trees and variable-length alphabetic\ncodes. SIAM Journal on Applied Mathematics, 21(4):514\u2013532, 1971.",
                "context_sentence": "Bibliography\n1241\n[184] T."
            },
            {
                "source_text": "David A. Huffman. A method for the construction of minimum-redundancy codes. Pro-\nceedings of the IRE, 40(9):1098\u20131101, 1952.",
                "context_sentence": "[185] David A."
            },
            {
                "source_text": "Steven Huss-Lederman, Elaine M. Jacobson, Jeremy R. Johnson, Anna Tsao, and Thomas\nTurnbull. Implementation of Strassen\u2019s algorithm for matrix multiplication. In Proceedings\nof the 1996 ACM/IEEE Conference on Supercomputing, article 32, 1996.",
                "context_sentence": "[186] Steven Huss-Lederman, Elaine M."
            },
            {
                "source_text": "Oscar H. Ibarra and Chul E. Kim. Fast approximation algorithms for the knapsack and sum\nof subset problems. Journal of the ACM, 22(4):463\u2013468, 1975.",
                "context_sentence": "[187] Oscar H."
            },
            {
                "source_text": "E. J. Isaac and R. C. Singleton.\nSorting by address calculation.\nJournal of the ACM,\n3(3):169\u2013174, 1956.",
                "context_sentence": "[188] E."
            },
            {
                "source_text": "R. A. Jarvis. On the identi\ufb01cation of the convex hull of a \ufb01nite set of points in the plane.\nInformation Processing Letters, 2(1):18\u201321, 1973.",
                "context_sentence": "[189] R."
            },
            {
                "source_text": "David S. Johnson. Approximation algorithms for combinatorial problems. Journal of Com-\nputer and System Sciences, 9(3):256\u2013278, 1974.",
                "context_sentence": "[190] David S."
            },
            {
                "source_text": "David S. Johnson. The NP-completeness column: An ongoing guide\u2014The tale of the sec-\nond prover. Journal of Algorithms, 13(3):502\u2013524, 1992.",
                "context_sentence": "[191] David S."
            },
            {
                "source_text": "Donald B. Johnson. Ef\ufb01cient algorithms for shortest paths in sparse networks. Journal of\nthe ACM, 24(1):1\u201313, 1977.",
                "context_sentence": "[192] Donald B."
            },
            {
                "source_text": "Richard Johnsonbaugh and Marcus Schaefer. Algorithms. Pearson Prentice Hall, 2004.",
                "context_sentence": "[193] Richard Johnsonbaugh and Marcus Schaefer."
            },
            {
                "source_text": "A. Karatsuba and Yu. Ofman. Multiplication of multidigit numbers on automata. Soviet\nPhysics\u2014Doklady, 7(7):595\u2013596, 1963. Translation of an article in Doklady Akademii Nauk\nSSSR, 145(2), 1962.",
                "context_sentence": "[194] A."
            },
            {
                "source_text": "David R. Karger, Philip N. Klein, and Robert E. Tarjan. A randomized linear-time algorithm\nto \ufb01nd minimum spanning trees. Journal of the ACM, 42(2):321\u2013328, 1995.",
                "context_sentence": "[195] David R."
            },
            {
                "source_text": "David R. Karger, Daphne Koller, and Steven J. Phillips. Finding the hidden path: Time\nbounds for all-pairs shortest paths. SIAM Journal on Computing, 22(6):1199\u20131217, 1993.",
                "context_sentence": "[196] David R."
            },
            {
                "source_text": "Howard Karloff. Linear Programming. Birkh\u00a8auser, 1991.",
                "context_sentence": "[197] Howard Karloff."
            },
            {
                "source_text": "N. Karmarkar. A new polynomial-time algorithm for linear programming. Combinatorica,\n4(4):373\u2013395, 1984.",
                "context_sentence": "[198] N."
            },
            {
                "source_text": "Richard M. Karp. Reducibility among combinatorial problems. In Raymond E. Miller and\nJames W. Thatcher, editors, Complexity of Computer Computations, pages 85\u2013103. Plenum\nPress, 1972.",
                "context_sentence": "[199] Richard M."
            },
            {
                "source_text": "Richard M. Karp. An introduction to randomized algorithms. Discrete Applied Mathemat-\nics, 34(1\u20133):165\u2013201, 1991.",
                "context_sentence": "[200] Richard M."
            },
            {
                "source_text": "Richard M. Karp and Michael O. Rabin. Ef\ufb01cient randomized pattern-matching algorithms.\nIBM Journal of Research and Development, 31(2):249\u2013260, 1987.",
                "context_sentence": "[201] Richard M."
            },
            {
                "source_text": "A. V. Karzanov. Determining the maximal \ufb02ow in a network by the method of pre\ufb02ows.\nSoviet Mathematics Doklady, 15(2):434\u2013437, 1974.\n\n1242\nBibliography",
                "context_sentence": "[202] A."
            },
            {
                "source_text": "Valerie King.\nA simpler minimum spanning tree veri\ufb01cation algorithm.\nAlgorithmica,\n18(2):263\u2013270, 1997.",
                "context_sentence": "1242\nBibliography\n[203] Valerie King."
            },
            {
                "source_text": "Valerie King, Satish Rao, and Robert E. Tarjan. A faster deterministic maximum \ufb02ow algo-\nrithm. Journal of Algorithms, 17(3):447\u2013474, 1994.",
                "context_sentence": "[204] Valerie King, Satish Rao, and Robert E."
            },
            {
                "source_text": "Jeffrey H. Kingston.\nAlgorithms and Data Structures: Design, Correctness, Analysis.\nAddison-Wesley, second edition, 1997.",
                "context_sentence": "[205] Jeffrey H."
            },
            {
                "source_text": "D. G. Kirkpatrick and R. Seidel. The ultimate planar convex hull algorithm? SIAM Journal\non Computing, 15(2):287\u2013299, 1986.",
                "context_sentence": "[206] D."
            },
            {
                "source_text": "Philip N. Klein and Neal E. Young. Approximation algorithms for NP-hard optimization\nproblems. In CRC Handbook on Algorithms, pages 34-1\u201334-19. CRC Press, 1999.",
                "context_sentence": "[207] Philip N."
            },
            {
                "source_text": "Jon Kleinberg and \u00b4Eva Tardos. Algorithm Design. Addison-Wesley, 2006.",
                "context_sentence": "[208] Jon Kleinberg and \u00b4Eva Tardos."
            },
            {
                "source_text": "Donald E. Knuth. Fundamental Algorithms, volume 1 of The Art of Computer Program-\nming. Addison-Wesley, 1968. Third edition, 1997.",
                "context_sentence": "[209] Donald E."
            },
            {
                "source_text": "Donald E. Knuth. Seminumerical Algorithms, volume 2 of The Art of Computer Program-\nming. Addison-Wesley, 1969. Third edition, 1997.",
                "context_sentence": "[210] Donald E."
            },
            {
                "source_text": "Donald E. Knuth. Sorting and Searching, volume 3 of The Art of Computer Programming.\nAddison-Wesley, 1973. Second edition, 1998.",
                "context_sentence": "[211] Donald E."
            },
            {
                "source_text": "Donald E. Knuth. Optimum binary search trees. Acta Informatica, 1(1):14\u201325, 1971.",
                "context_sentence": "[212] Donald E."
            },
            {
                "source_text": "Donald E. Knuth. Big omicron and big omega and big theta. SIGACT News, 8(2):18\u201323,\n1976.",
                "context_sentence": "[213] Donald E."
            },
            {
                "source_text": "Donald E. Knuth, James H. Morris, Jr., and Vaughan R. Pratt. Fast pattern matching in\nstrings. SIAM Journal on Computing, 6(2):323\u2013350, 1977.",
                "context_sentence": "[214] Donald E."
            },
            {
                "source_text": "J. Koml\u00b4os. Linear veri\ufb01cation for spanning trees. Combinatorica, 5(1):57\u201365, 1985.",
                "context_sentence": "[215] J."
            },
            {
                "source_text": "Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz. Mathematical structures underlying greedy algorithms.\nIn F. Gecseg, editor, Fundamentals of Computation Theory, volume 117 of Lecture Notes in\nComputer Science, pages 205\u2013209. Springer, 1981.",
                "context_sentence": "[216] Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz."
            },
            {
                "source_text": "Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz. Structural properties of greedoids. Combinatorica,\n3(3\u20134):359\u2013374, 1983.",
                "context_sentence": "[217] Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz."
            },
            {
                "source_text": "Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz. Greedoids\u2014A structural framework for the greedy\nalgorithm. In W. Pulleybank, editor, Progress in Combinatorial Optimization, pages 221\u2013\n243. Academic Press, 1984.",
                "context_sentence": "[218] Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz."
            },
            {
                "source_text": "Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz. Greedoids and linear objective functions. SIAM Journal\non Algebraic and Discrete Methods, 5(2):229\u2013238, 1984.",
                "context_sentence": "[219] Bernhard Korte and L\u00b4aszl\u00b4o Lov\u00b4asz."
            },
            {
                "source_text": "Dexter C. Kozen. The Design and Analysis of Algorithms. Springer, 1992.",
                "context_sentence": "[220] Dexter C."
            },
            {
                "source_text": "David W. Krumme, George Cybenko, and K. N. Venkataraman. Gossiping in minimal time.\nSIAM Journal on Computing, 21(1):111\u2013139, 1992.",
                "context_sentence": "[221] David W."
            },
            {
                "source_text": "Joseph B. Kruskal, Jr. On the shortest spanning subtree of a graph and the traveling salesman\nproblem. Proceedings of the American Mathematical Society, 7(1):48\u201350, 1956.",
                "context_sentence": "[222] Joseph B."
            },
            {
                "source_text": "Leslie Lamport. How to make a multiprocessor computer that correctly executes multipro-\ncess programs. IEEE Transactions on Computers, C-28(9):690\u2013691, 1979.\n\nBibliography\n1243",
                "context_sentence": "[223] Leslie Lamport."
            },
            {
                "source_text": "Eugene L. Lawler. Combinatorial Optimization: Networks and Matroids. Holt, Rinehart,\nand Winston, 1976.",
                "context_sentence": "Bibliography\n1243\n[224] Eugene L."
            },
            {
                "source_text": "Eugene L. Lawler, J. K. Lenstra, A. H. G. Rinnooy Kan, and D. B. Shmoys, editors. The\nTraveling Salesman Problem. John Wiley & Sons, 1985.",
                "context_sentence": "[225] Eugene L."
            },
            {
                "source_text": "C. Y. Lee. An algorithm for path connection and its applications. IRE Transactions on\nElectronic Computers, EC-10(3):346\u2013365, 1961.",
                "context_sentence": "[226] C."
            },
            {
                "source_text": "Tom Leighton. Tight bounds on the complexity of parallel sorting. IEEE Transactions on\nComputers, C-34(4):344\u2013354, 1985.",
                "context_sentence": "[227] Tom Leighton."
            },
            {
                "source_text": "Tom Leighton. Notes on better master theorems for divide-and-conquer recurrences. Class\nnotes. Available at http://citeseer.ist.psu.edu/252350.html, October 1996.",
                "context_sentence": "[228] Tom Leighton."
            },
            {
                "source_text": "Tom Leighton and Satish Rao. Multicommodity max-\ufb02ow min-cut theorems and their use\nin designing approximation algorithms. Journal of the ACM, 46(6):787\u2013832, 1999.",
                "context_sentence": "[229] Tom Leighton and Satish Rao."
            },
            {
                "source_text": "Daan Leijen and Judd Hall.\nOptimize managed code for multi-core machines.\nMSDN\nMagazine, October 2007.",
                "context_sentence": "[230] Daan Leijen and Judd Hall."
            },
            {
                "source_text": "Debra A. Lelewer and Daniel S. Hirschberg. Data compression. ACM Computing Surveys,\n19(3):261\u2013296, 1987.",
                "context_sentence": "[231] Debra A."
            },
            {
                "source_text": "A. K. Lenstra, H. W. Lenstra, Jr., M. S. Manasse, and J. M. Pollard. The number \ufb01eld sieve.\nIn A. K. Lenstra and H. W. Lenstra, Jr., editors, The Development of the Number Field Sieve,\nvolume 1554 of Lecture Notes in Mathematics, pages 11\u201342. Springer, 1993.",
                "context_sentence": "[232] A."
            },
            {
                "source_text": "H. W. Lenstra, Jr.\nFactoring integers with elliptic curves.\nAnnals of Mathematics,\n126(3):649\u2013673, 1987.",
                "context_sentence": "[233] H."
            },
            {
                "source_text": "L. A. Levin. Universal sorting problems. Problemy Peredachi Informatsii, 9(3):265\u2013266,\n1973. In Russian.",
                "context_sentence": "[234] L."
            },
            {
                "source_text": "Anany Levitin. Introduction to the Design & Analysis of Algorithms. Addison-Wesley,\n2007.",
                "context_sentence": "[235] Anany Levitin."
            },
            {
                "source_text": "Harry R. Lewis and Christos H. Papadimitriou. Elements of the Theory of Computation.\nPrentice Hall, second edition, 1998.",
                "context_sentence": "[236] Harry R."
            },
            {
                "source_text": "C. L. Liu. Introduction to Combinatorial Mathematics. McGraw-Hill, 1968.",
                "context_sentence": "[237] C."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz. On the ratio of optimal integral and fractional covers. Discrete Mathemat-\nics, 13(4):383\u2013390, 1975.",
                "context_sentence": "[238] L\u00b4aszl\u00b4o Lov\u00b4asz."
            },
            {
                "source_text": "L\u00b4aszl\u00b4o Lov\u00b4asz and M. D. Plummer. Matching Theory, volume 121 of Annals of Discrete\nMathematics. North Holland, 1986.",
                "context_sentence": "[239] L\u00b4aszl\u00b4o Lov\u00b4asz and M."
            },
            {
                "source_text": "Bruce M. Maggs and Serge A. Plotkin.\nMinimum-cost spanning tree as a path-\ufb01nding\nproblem. Information Processing Letters, 26(6):291\u2013293, 1988.",
                "context_sentence": "[240] Bruce M."
            },
            {
                "source_text": "Michael Main. Data Structures and Other Objects Using Java. Addison-Wesley, 1999.",
                "context_sentence": "[241] Michael Main."
            },
            {
                "source_text": "Udi Manber. Introduction to Algorithms: A Creative Approach. Addison-Wesley, 1989.",
                "context_sentence": "[242] Udi Manber."
            },
            {
                "source_text": "Conrado Mart\u00b4\u0131nez and Salvador Roura. Randomized binary search trees. Journal of the\nACM, 45(2):288\u2013323, 1998.",
                "context_sentence": "[243] Conrado Mart\u00b4\u0131nez and Salvador Roura."
            },
            {
                "source_text": "William J. Masek and Michael S. Paterson. A faster algorithm computing string edit dis-\ntances. Journal of Computer and System Sciences, 20(1):18\u201331, 1980.\n\n1244\nBibliography",
                "context_sentence": "[244] William J."
            },
            {
                "source_text": "H. A. Maurer, Th. Ottmann, and H.-W. Six. Implementing dictionaries using binary trees of\nvery small height. Information Processing Letters, 5(1):11\u201314, 1976.",
                "context_sentence": "1244\nBibliography\n[245] H."
            },
            {
                "source_text": "Ernst W. Mayr, Hans J\u00a8urgen Pr\u00a8omel, and Angelika Steger, editors. Lectures on Proof Veri\ufb01-\ncation and Approximation Algorithms, volume 1367 of Lecture Notes in Computer Science.\nSpringer, 1998.",
                "context_sentence": "[246] Ernst W."
            },
            {
                "source_text": "C. C. McGeoch.\nAll pairs shortest paths and the essential subgraph.\nAlgorithmica,\n13(5):426\u2013441, 1995.",
                "context_sentence": "[247] C."
            },
            {
                "source_text": "M. D. McIlroy.\nA killer adversary for quicksort.\nSoftware\u2014Practice and Experience,\n29(4):341\u2013344, 1999.",
                "context_sentence": "[248] M."
            },
            {
                "source_text": "Kurt Mehlhorn.\nSorting and Searching, volume 1 of Data Structures and Algorithms.\nSpringer, 1984.",
                "context_sentence": "[249] Kurt Mehlhorn."
            },
            {
                "source_text": "Kurt Mehlhorn. Graph Algorithms and NP-Completeness, volume 2 of Data Structures and\nAlgorithms. Springer, 1984.",
                "context_sentence": "[250] Kurt Mehlhorn."
            },
            {
                "source_text": "Kurt Mehlhorn. Multidimensional Searching and Computational Geometry, volume 3 of\nData Structures and Algorithms. Springer, 1984.",
                "context_sentence": "[251] Kurt Mehlhorn."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. Bounded ordered dictionaries in O.log log N/ time and\nO.n/ space. Information Processing Letters, 35(4):183\u2013189, 1990.",
                "context_sentence": "[252] Kurt Mehlhorn and Stefan N\u00a8aher."
            },
            {
                "source_text": "Kurt Mehlhorn and Stefan N\u00a8aher. LEDA: A Platform for Combinatorial and Geometric\nComputing. Cambridge University Press, 1999.",
                "context_sentence": "[253] Kurt Mehlhorn and Stefan N\u00a8aher."
            },
            {
                "source_text": "Alfred J. Menezes, Paul C. van Oorschot, and Scott A. Vanstone. Handbook of Applied\nCryptography. CRC Press, 1997.",
                "context_sentence": "[254] Alfred J."
            },
            {
                "source_text": "Gary L. Miller. Riemann\u2019s hypothesis and tests for primality. Journal of Computer and\nSystem Sciences, 13(3):300\u2013317, 1976.",
                "context_sentence": "[255] Gary L."
            },
            {
                "source_text": "John C. Mitchell. Foundations for Programming Languages. The MIT Press, 1996.",
                "context_sentence": "[256] John C."
            },
            {
                "source_text": "Joseph S. B. Mitchell. Guillotine subdivisions approximate polygonal subdivisions: A sim-\nple polynomial-time approximation scheme for geometric TSP, k-MST, and related prob-\nlems. SIAM Journal on Computing, 28(4):1298\u20131309, 1999.",
                "context_sentence": "[257] Joseph S."
            },
            {
                "source_text": "Louis Monier. Algorithmes de Factorisation D\u2019Entiers. PhD thesis, L\u2019Universit\u00b4e Paris-Sud,\n1980.",
                "context_sentence": "[258] Louis Monier."
            },
            {
                "source_text": "Louis Monier. Evaluation and comparison of two ef\ufb01cient probabilistic primality testing\nalgorithms. Theoretical Computer Science, 12(1):97\u2013108, 1980.",
                "context_sentence": "[259] Louis Monier."
            },
            {
                "source_text": "Edward F. Moore. The shortest path through a maze. In Proceedings of the International\nSymposium on the Theory of Switching, pages 285\u2013292. Harvard University Press, 1959.",
                "context_sentence": "[260] Edward F."
            },
            {
                "source_text": "Rajeev Motwani, Joseph (Sef\ufb01) Naor, and Prabakhar Raghavan. Randomized approxima-\ntion algorithms in combinatorial optimization. In Dorit Hochbaum, editor, Approximation\nAlgorithms for NP-Hard Problems, chapter 11, pages 447\u2013481. PWS Publishing Company,\n1997.",
                "context_sentence": "[261] Rajeev Motwani, Joseph (Sef\ufb01) Naor, and Prabakhar Raghavan."
            },
            {
                "source_text": "Rajeev Motwani and Prabhakar Raghavan. Randomized Algorithms. Cambridge University\nPress, 1995.",
                "context_sentence": "[262] Rajeev Motwani and Prabhakar Raghavan."
            },
            {
                "source_text": "J. I. Munro and V. Raman. Fast stable in-place sorting with O.n/ data moves. Algorithmica,\n16(2):151\u2013160, 1996.\n\nBibliography\n1245",
                "context_sentence": "[263] J."
            },
            {
                "source_text": "J. Nievergelt and E. M. Reingold. Binary search trees of bounded balance. SIAM Journal\non Computing, 2(1):33\u201343, 1973.",
                "context_sentence": "Bibliography\n1245\n[264] J."
            },
            {
                "source_text": "Ivan Niven and Herbert S. Zuckerman. An Introduction to the Theory of Numbers. John\nWiley & Sons, fourth edition, 1980.",
                "context_sentence": "[265] Ivan Niven and Herbert S."
            },
            {
                "source_text": "Alan V. Oppenheim and Ronald W. Schafer, with John R. Buck.\nDiscrete-Time Signal\nProcessing. Prentice Hall, second edition, 1998.",
                "context_sentence": "[266] Alan V."
            },
            {
                "source_text": "Alan V. Oppenheim and Alan S. Willsky, with S. Hamid Nawab. Signals and Systems.\nPrentice Hall, second edition, 1997.",
                "context_sentence": "[267] Alan V."
            },
            {
                "source_text": "James B. Orlin. A polynomial time primal network simplex algorithm for minimum cost\n\ufb02ows. Mathematical Programming, 78(1):109\u2013129, 1997.",
                "context_sentence": "[268] James B."
            },
            {
                "source_text": "Joseph O\u2019Rourke. Computational Geometry in C. Cambridge University Press, second\nedition, 1998.",
                "context_sentence": "[269] Joseph O\u2019Rourke."
            },
            {
                "source_text": "Christos H. Papadimitriou. Computational Complexity. Addison-Wesley, 1994.",
                "context_sentence": "[270] Christos H."
            },
            {
                "source_text": "Christos H. Papadimitriou and Kenneth Steiglitz. Combinatorial Optimization: Algorithms\nand Complexity. Prentice Hall, 1982.",
                "context_sentence": "[271] Christos H."
            },
            {
                "source_text": "Michael S. Paterson. Progress in selection. In Proceedings of the Fifth Scandinavian Work-\nshop on Algorithm Theory, pages 368\u2013379, 1996.",
                "context_sentence": "[272] Michael S."
            },
            {
                "source_text": "Mihai P\u02c7atras\u00b8cu and Mikkel Thorup. Time-space trade-offs for predecessor search. In Pro-\nceedings of the 38th Annual ACM Symposium on Theory of Computing, pages 232\u2013240,\n2006.",
                "context_sentence": "[273] Mihai P\u02c7atras\u00b8cu and Mikkel Thorup."
            },
            {
                "source_text": "Mihai P\u02c7atras\u00b8cu and Mikkel Thorup. Randomization does not help searching predecessors.\nIn Proceedings of the 18th ACM-SIAM Symposium on Discrete Algorithms, pages 555\u2013564,\n2007.",
                "context_sentence": "[274] Mihai P\u02c7atras\u00b8cu and Mikkel Thorup."
            },
            {
                "source_text": "Pavel A. Pevzner. Computational Molecular Biology: An Algorithmic Approach. The MIT\nPress, 2000.",
                "context_sentence": "[275] Pavel A."
            },
            {
                "source_text": "Steven Phillips and Jeffery Westbrook. Online load balancing and network \ufb02ow. In Pro-\nceedings of the 25th Annual ACM Symposium on Theory of Computing, pages 402\u2013411,\n1993.",
                "context_sentence": "[276] Steven Phillips and Jeffery Westbrook."
            },
            {
                "source_text": "J. M. Pollard. A Monte Carlo method for factorization. BIT, 15(3):331\u2013334, 1975.",
                "context_sentence": "[277] J."
            },
            {
                "source_text": "J. M. Pollard. Factoring with cubic integers. In A. K. Lenstra and H. W. Lenstra, Jr., editors,\nThe Development of the Number Field Sieve, volume 1554 of Lecture Notes in Mathematics,\npages 4\u201310. Springer, 1993.",
                "context_sentence": "[278] J."
            },
            {
                "source_text": "Carl Pomerance.\nOn the distribution of pseudoprimes.\nMathematics of Computation,\n37(156):587\u2013593, 1981.",
                "context_sentence": "[279] Carl Pomerance."
            },
            {
                "source_text": "Carl Pomerance, editor. Proceedings of the AMS Symposia in Applied Mathematics: Com-\nputational Number Theory and Cryptography. American Mathematical Society, 1990.",
                "context_sentence": "[280] Carl Pomerance, editor."
            },
            {
                "source_text": "William K. Pratt. Digital Image Processing. John Wiley & Sons, fourth edition, 2007.",
                "context_sentence": "[281] William K."
            },
            {
                "source_text": "Franco P. Preparata and Michael Ian Shamos. Computational Geometry: An Introduction.\nSpringer, 1985.\n\n1246\nBibliography",
                "context_sentence": "[282] Franco P."
            },
            {
                "source_text": "William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. Numer-\nical Recipes in C++: The Art of Scienti\ufb01c Computing. Cambridge University Press, second\nedition, 2002.",
                "context_sentence": "1246\nBibliography\n[283] William H."
            },
            {
                "source_text": "William H. Press, Saul A. Teukolsky, William T. Vetterling, and Brian P. Flannery. Numer-\nical Recipes: The Art of Scienti\ufb01c Computing. Cambridge University Press, third edition,\n2007.",
                "context_sentence": "[284] William H."
            },
            {
                "source_text": "R. C. Prim. Shortest connection networks and some generalizations. Bell System Technical\nJournal, 36(6):1389\u20131401, 1957.",
                "context_sentence": "[285] R."
            },
            {
                "source_text": "William Pugh. Skip lists: A probabilistic alternative to balanced trees. Communications of\nthe ACM, 33(6):668\u2013676, 1990.",
                "context_sentence": "[286] William Pugh."
            },
            {
                "source_text": "Paul W. Purdom, Jr. and Cynthia A. Brown. The Analysis of Algorithms. Holt, Rinehart,\nand Winston, 1985.",
                "context_sentence": "[287] Paul W."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithms. In J. F. Traub, editor, Algorithms and Com-\nplexity: New Directions and Recent Results, pages 21\u201339. Academic Press, 1976.",
                "context_sentence": "[288] Michael O."
            },
            {
                "source_text": "Michael O. Rabin. Probabilistic algorithm for testing primality. Journal of Number Theory,\n12(1):128\u2013138, 1980.",
                "context_sentence": "[289] Michael O."
            },
            {
                "source_text": "P. Raghavan and C. D. Thompson. Randomized rounding: A technique for provably good\nalgorithms and algorithmic proofs. Combinatorica, 7(4):365\u2013374, 1987.",
                "context_sentence": "[290] P."
            },
            {
                "source_text": "Rajeev Raman. Recent results on the single-source shortest paths problem. SIGACT News,\n28(2):81\u201387, 1997.",
                "context_sentence": "[291] Rajeev Raman."
            },
            {
                "source_text": "James Reinders. Intel Threading Building Blocks: Out\ufb01tting C++ for Multi-core Processor\nParallelism. O\u2019Reilly Media, Inc., 2007.",
                "context_sentence": "[292] James Reinders."
            },
            {
                "source_text": "Edward M. Reingold, J\u00a8urg Nievergelt, and Narsingh Deo. Combinatorial Algorithms: The-\nory and Practice. Prentice Hall, 1977.",
                "context_sentence": "[293] Edward M."
            },
            {
                "source_text": "Edward M. Reingold, Kenneth J. Urban, and David Gries. K-M-P string matching revisited.\nInformation Processing Letters, 64(5):217\u2013223, 1997.",
                "context_sentence": "[294] Edward M."
            },
            {
                "source_text": "Hans Riesel. Prime Numbers and Computer Methods for Factorization, volume 126 of\nProgress in Mathematics. Birkh\u00a8auser, second edition, 1994.",
                "context_sentence": "[295] Hans Riesel."
            },
            {
                "source_text": "Ronald L. Rivest, Adi Shamir, and Leonard M. Adleman. A method for obtaining digital\nsignatures and public-key cryptosystems.\nCommunications of the ACM, 21(2):120\u2013126,\n1978. See also U.S. Patent 4,405,829.",
                "context_sentence": "[296] Ronald L."
            },
            {
                "source_text": "Herbert Robbins.\nA remark on Stirling\u2019s formula.\nAmerican Mathematical Monthly,\n62(1):26\u201329, 1955.",
                "context_sentence": "[297] Herbert Robbins."
            },
            {
                "source_text": "D. J. Rosenkrantz, R. E. Stearns, and P. M. Lewis. An analysis of several heuristics for the\ntraveling salesman problem. SIAM Journal on Computing, 6(3):563\u2013581, 1977.",
                "context_sentence": "[298] D."
            },
            {
                "source_text": "Salvador Roura.\nAn improved master theorem for divide-and-conquer recurrences.\nIn\nProceedings of Automata, Languages and Programming, 24th International Colloquium,\nICALP\u201997, volume 1256 of Lecture Notes in Computer Science, pages 449\u2013459. Springer,\n1997.",
                "context_sentence": "[299] Salvador Roura."
            },
            {
                "source_text": "Y. A. Rozanov. Probability Theory: A Concise Course. Dover, 1969.\n\nBibliography\n1247",
                "context_sentence": "[300] Y."
            },
            {
                "source_text": "S. Sahni and T. Gonzalez.\nP-complete approximation problems.\nJournal of the ACM,\n23(3):555\u2013565, 1976.",
                "context_sentence": "Bibliography\n1247\n[301] S."
            },
            {
                "source_text": "A. Sch\u00a8onhage, M. Paterson, and N. Pippenger. Finding the median. Journal of Computer\nand System Sciences, 13(2):184\u2013199, 1976.",
                "context_sentence": "[302] A."
            },
            {
                "source_text": "Alexander Schrijver. Theory of Linear and Integer Programming. John Wiley & Sons,\n1986.",
                "context_sentence": "[303] Alexander Schrijver."
            },
            {
                "source_text": "Alexander Schrijver. Paths and \ufb02ows\u2014A historical survey. CWI Quarterly, 6(3):169\u2013183,\n1993.",
                "context_sentence": "[304] Alexander Schrijver."
            },
            {
                "source_text": "Robert Sedgewick.\nImplementing quicksort programs.\nCommunications of the ACM,\n21(10):847\u2013857, 1978.",
                "context_sentence": "[305] Robert Sedgewick."
            },
            {
                "source_text": "Robert Sedgewick. Algorithms. Addison-Wesley, second edition, 1988.",
                "context_sentence": "[306] Robert Sedgewick."
            },
            {
                "source_text": "Robert Sedgewick and Philippe Flajolet. An Introduction to the Analysis of Algorithms.\nAddison-Wesley, 1996.",
                "context_sentence": "[307] Robert Sedgewick and Philippe Flajolet."
            },
            {
                "source_text": "Raimund Seidel. On the all-pairs-shortest-path problem in unweighted undirected graphs.\nJournal of Computer and System Sciences, 51(3):400\u2013403, 1995.",
                "context_sentence": "[308] Raimund Seidel."
            },
            {
                "source_text": "Raimund Seidel and C. R. Aragon. Randomized search trees. Algorithmica, 16(4\u20135):464\u2013\n497, 1996.",
                "context_sentence": "[309] Raimund Seidel and C."
            },
            {
                "source_text": "Jo\u02dcao Setubal and Jo\u02dcao Meidanis. Introduction to Computational Molecular Biology. PWS\nPublishing Company, 1997.",
                "context_sentence": "[310] Jo\u02dcao Setubal and Jo\u02dcao Meidanis."
            },
            {
                "source_text": "Clifford A. Shaffer. A Practical Introduction to Data Structures and Algorithm Analysis.\nPrentice Hall, second edition, 2001.",
                "context_sentence": "[311] Clifford A."
            },
            {
                "source_text": "Jeffrey Shallit. Origins of the analysis of the Euclidean algorithm. Historia Mathematica,\n21(4):401\u2013419, 1994.",
                "context_sentence": "[312] Jeffrey Shallit."
            },
            {
                "source_text": "Michael I. Shamos and Dan Hoey. Geometric intersection problems. In Proceedings of the\n17th Annual Symposium on Foundations of Computer Science, pages 208\u2013215, 1976.",
                "context_sentence": "[313] Michael I."
            },
            {
                "source_text": "M. Sharir. A strong-connectivity algorithm and its applications in data \ufb02ow analysis. Com-\nputers and Mathematics with Applications, 7(1):67\u201372, 1981.",
                "context_sentence": "[314] M."
            },
            {
                "source_text": "David B. Shmoys. Computing near-optimal solutions to combinatorial optimization prob-\nlems. In William Cook, L\u00b4aszl\u00b4o Lov\u00b4asz, and Paul Seymour, editors, Combinatorial Opti-\nmization, volume 20 of DIMACS Series in Discrete Mathematics and Theoretical Computer\nScience. American Mathematical Society, 1995.",
                "context_sentence": "[315] David B."
            },
            {
                "source_text": "Avi Shoshan and Uri Zwick.\nAll pairs shortest paths in undirected graphs with integer\nweights. In Proceedings of the 40th Annual Symposium on Foundations of Computer Sci-\nence, pages 605\u2013614, 1999.",
                "context_sentence": "[316] Avi Shoshan and Uri Zwick."
            },
            {
                "source_text": "Michael Sipser. Introduction to the Theory of Computation. Thomson Course Technology,\nsecond edition, 2006.",
                "context_sentence": "[317] Michael Sipser."
            },
            {
                "source_text": "Steven S. Skiena. The Algorithm Design Manual. Springer, second edition, 1998.",
                "context_sentence": "[318] Steven S."
            },
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. A data structure for dynamic trees. Journal of\nComputer and System Sciences, 26(3):362\u2013391, 1983.\n\n1248\nBibliography",
                "context_sentence": "[319] Daniel D."
            },
            {
                "source_text": "Daniel D. Sleator and Robert E. Tarjan. Self-adjusting binary search trees. Journal of the\nACM, 32(3):652\u2013686, 1985.",
                "context_sentence": "1248\nBibliography\n[320] Daniel D."
            },
            {
                "source_text": "Joel Spencer. Ten Lectures on the Probabilistic Method, volume 64 of CBMS-NSF Regional\nConference Series in Applied Mathematics. Society for Industrial and Applied Mathematics,\n1993.",
                "context_sentence": "[321] Joel Spencer."
            },
            {
                "source_text": "Daniel A. Spielman and Shang-Hua Teng. Smoothed analysis of algorithms: Why the sim-\nplex algorithm usually takes polynomial time. Journal of the ACM, 51(3):385\u2013463, 2004.",
                "context_sentence": "[322] Daniel A."
            },
            {
                "source_text": "Gilbert Strang. Introduction to Applied Mathematics. Wellesley-Cambridge Press, 1986.",
                "context_sentence": "[323] Gilbert Strang."
            },
            {
                "source_text": "Gilbert Strang. Linear Algebra and Its Applications. Thomson Brooks/Cole, fourth edition,\n2006.",
                "context_sentence": "[324] Gilbert Strang."
            },
            {
                "source_text": "Volker Strassen. Gaussian elimination is not optimal. Numerische Mathematik, 14(3):354\u2013\n356, 1969.",
                "context_sentence": "[325] Volker Strassen."
            },
            {
                "source_text": "T. G. Szymanski. A special case of the maximal common subsequence problem. Technical\nReport TR-170, Computer Science Laboratory, Princeton University, 1975.",
                "context_sentence": "[326] T."
            },
            {
                "source_text": "Robert E. Tarjan. Depth \ufb01rst search and linear graph algorithms. SIAM Journal on Com-\nputing, 1(2):146\u2013160, 1972.",
                "context_sentence": "[327] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan. Ef\ufb01ciency of a good but not linear set union algorithm. Journal of the\nACM, 22(2):215\u2013225, 1975.",
                "context_sentence": "[328] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan. A class of algorithms which require nonlinear time to maintain disjoint\nsets. Journal of Computer and System Sciences, 18(2):110\u2013127, 1979.",
                "context_sentence": "[329] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan. Data Structures and Network Algorithms. Society for Industrial and\nApplied Mathematics, 1983.",
                "context_sentence": "[330] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan. Amortized computational complexity. SIAM Journal on Algebraic and\nDiscrete Methods, 6(2):306\u2013318, 1985.",
                "context_sentence": "[331] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan. Class notes: Disjoint set union. COS 423, Princeton University, 1999.",
                "context_sentence": "[332] Robert E."
            },
            {
                "source_text": "Robert E. Tarjan and Jan van Leeuwen. Worst-case analysis of set union algorithms. Jour-\nnal of the ACM, 31(2):245\u2013281, 1984.",
                "context_sentence": "[333] Robert E."
            },
            {
                "source_text": "George B. Thomas, Jr., Maurice D. Weir, Joel Hass, and Frank R. Giordano.\nThomas\u2019\nCalculus. Addison-Wesley, eleventh edition, 2005.",
                "context_sentence": "[334] George B."
            },
            {
                "source_text": "Mikkel Thorup. Faster deterministic sorting and priority queues in linear space. In Pro-\nceedings of the 9th ACM-SIAM Symposium on Discrete Algorithms, pages 550\u2013555, 1998.",
                "context_sentence": "[335] Mikkel Thorup."
            },
            {
                "source_text": "Mikkel Thorup. Undirected single-source shortest paths with positive integer weights in\nlinear time. Journal of the ACM, 46(3):362\u2013394, 1999.",
                "context_sentence": "[336] Mikkel Thorup."
            },
            {
                "source_text": "Mikkel Thorup. On RAM priority queues. SIAM Journal on Computing, 30(1):86\u2013109,\n2000.",
                "context_sentence": "[337] Mikkel Thorup."
            },
            {
                "source_text": "Richard Tolimieri, Myoung An, and Chao Lu. Mathematics of Multidimensional Fourier\nTransform Algorithms. Springer, second edition, 1997.",
                "context_sentence": "[338] Richard Tolimieri, Myoung An, and Chao Lu."
            },
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time. In Proceedings\nof the 16th Annual Symposium on Foundations of Computer Science, pages 75\u201384, 1975.\n\nBibliography\n1249",
                "context_sentence": "[339] P."
            },
            {
                "source_text": "P. van Emde Boas. Preserving order in a forest in less than logarithmic time and linear\nspace. Information Processing Letters, 6(3):80\u201382, 1977.",
                "context_sentence": "Bibliography\n1249\n[340] P."
            },
            {
                "source_text": "P. van Emde Boas, R. Kaas, and E. Zijlstra. Design and implementation of an ef\ufb01cient\npriority queue. Mathematical Systems Theory, 10(1):99\u2013127, 1976.",
                "context_sentence": "[341] P."
            },
            {
                "source_text": "Jan van Leeuwen, editor. Handbook of Theoretical Computer Science, Volume A: Algo-\nrithms and Complexity. Elsevier Science Publishers and the MIT Press, 1990.",
                "context_sentence": "[342] Jan van Leeuwen, editor."
            },
            {
                "source_text": "Charles Van Loan. Computational Frameworks for the Fast Fourier Transform. Society for\nIndustrial and Applied Mathematics, 1992.",
                "context_sentence": "[343] Charles Van Loan."
            },
            {
                "source_text": "Robert J. Vanderbei. Linear Programming: Foundations and Extensions. Kluwer Academic\nPublishers, 1996.",
                "context_sentence": "[344] Robert J."
            },
            {
                "source_text": "Vijay V. Vazirani. Approximation Algorithms. Springer, 2001.",
                "context_sentence": "[345] Vijay V."
            },
            {
                "source_text": "Rakesh M. Verma. General techniques for analyzing recursive algorithms with applications.\nSIAM Journal on Computing, 26(2):568\u2013581, 1997.",
                "context_sentence": "[346] Rakesh M."
            },
            {
                "source_text": "Hao Wang and Bill Lin. Pipelined van Emde Boas tree: Algorithms, analysis, and ap-\nplications. In 26th IEEE International Conference on Computer Communications, pages\n2471\u20132475, 2007.",
                "context_sentence": "[347] Hao Wang and Bill Lin."
            },
            {
                "source_text": "Antony F. Ware. Fast approximate Fourier transforms for irregularly spaced data. SIAM\nReview, 40(4):838\u2013856, 1998.",
                "context_sentence": "[348] Antony F."
            },
            {
                "source_text": "Stephen Warshall. A theorem on boolean matrices. Journal of the ACM, 9(1):11\u201312, 1962.",
                "context_sentence": "[349] Stephen Warshall."
            },
            {
                "source_text": "Michael S. Waterman.\nIntroduction to Computational Biology, Maps, Sequences and\nGenomes. Chapman & Hall, 1995.",
                "context_sentence": "[350] Michael S."
            },
            {
                "source_text": "Mark Allen Weiss. Data Structures and Problem Solving Using C++. Addison-Wesley,\nsecond edition, 2000.",
                "context_sentence": "[351] Mark Allen Weiss."
            },
            {
                "source_text": "Mark Allen Weiss. Data Structures and Problem Solving Using Java. Addison-Wesley,\nthird edition, 2006.",
                "context_sentence": "[352] Mark Allen Weiss."
            },
            {
                "source_text": "Mark Allen Weiss. Data Structures and Algorithm Analysis in C++. Addison-Wesley, third\nedition, 2007.",
                "context_sentence": "[353] Mark Allen Weiss."
            },
            {
                "source_text": "Mark Allen Weiss.\nData Structures and Algorithm Analysis in Java.\nAddison-Wesley,\nsecond edition, 2007.",
                "context_sentence": "[354] Mark Allen Weiss."
            },
            {
                "source_text": "Hassler Whitney. On the abstract properties of linear dependence. American Journal of\nMathematics, 57(3):509\u2013533, 1935.",
                "context_sentence": "[355] Hassler Whitney."
            },
            {
                "source_text": "Herbert S. Wilf. Algorithms and Complexity. A K Peters, second edition, 2002.",
                "context_sentence": "[356] Herbert S."
            },
            {
                "source_text": "J. W. J. Williams. Algorithm 232 (HEAPSORT). Communications of the ACM, 7(6):347\u2013\n348, 1964.",
                "context_sentence": "[357] J."
            },
            {
                "source_text": "Shmuel Winograd. On the algebraic complexity of functions. In Actes du Congr`es Interna-\ntional des Math\u00b4ematiciens, volume 3, pages 283\u2013288, 1970.",
                "context_sentence": "[358] Shmuel Winograd."
            },
            {
                "source_text": "Andrew C.-C. Yao. A lower bound to \ufb01nding convex hulls. Journal of the ACM, 28(4):780\u2013\n787, 1981.",
                "context_sentence": "[359] Andrew C.-C."
            },
            {
                "source_text": "Chee Yap. A real elementary approach to the master recurrence and generalizations. Un-\npublished manuscript. Available at http://cs.nyu.edu/yap/papers/, July 2008.\n\n1250\nBibliography",
                "context_sentence": "[360] Chee Yap."
            },
            {
                "source_text": "Yinyu Ye. Interior Point Algorithms: Theory and Analysis. John Wiley & Sons, 1997.",
                "context_sentence": "1250\nBibliography\n[361] Yinyu Ye."
            },
            {
                "source_text": "Daniel Zwillinger, editor. CRC Standard Mathematical Tables and Formulae. Chapman &\nHall/CRC Press, 31st edition, 2003.",
                "context_sentence": "[362] Daniel Zwillinger, editor."
            }
        ]
    },
    "Index": {
        "details": {
            "level": 1,
            "start_page": 1272,
            "end_page": 1313,
            "text_content_snippet": "Index\nThis index uses the following conventions. Numbers are alphabetized as if spelled\nout; for example, \u201c2-3-4 tree\u201d is indexed as if it were \u201ctwo-three-four tree.\u201d When\nan entry refers to a place other than the main text, the page number is followed by\na tag: ex. for exercise, pr. for problem, \ufb01g. for \ufb01gure, and n. for footnote. A tagged\npage number often indicates the \ufb01rst page of an exercise or problem, which is not\nnecessarily the page on which the reference actually appears.\n\u02db.n/, 574\n\u0007 (..."
        },
        "sources": []
    }
}